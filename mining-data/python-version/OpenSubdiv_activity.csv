x_val,y_added,y_removed,y_combined
0,35,19,54
v,22,22,44
subdivision,18,18,36
e,16,12,28
_subdivType == Sdc::TYPE_CATMARK,13,13,26
_refiner,12,10,22
f,11,11,22
this->_mesh,11,11,22
Vtr::IndexIsValid(cVertOfFace),12,8,20
edge->GetOpposite(),10,5,15
j != bestface->GetNumVertices(),12,0,12
starte->GetOrgVertex() == v,9,3,12
V_ITa[5*i+3]==-1 and V_ITa[5*i+4]==-1,6,6,12
op.eidx[0]!=-1 and op.eidx[1]!=-1,6,6,12
level>0 and level<=(int)_refiner._refinements.size(),7,3,10
false,5,5,10
childedge,8,0,8
 _hbrMesh ,4,4,8
this->_mesh and level>0,4,4,8
level>=0 and level<=(int)_batches.size(),4,4,8
tables,4,4,8
dispatch,4,4,8
_drawContext,4,4,8
 mesh ,4,4,8
v->GetParentFace(),4,3,7
buffer,3,3,6
this->_bigStencils.find(stencil)!=this->_bigStencils.end(),3,3,6
level>=0 and level<(int)_markers.size(),3,3,6
level>0 and level<=(int)_refinements.size(),3,3,6
parentEdge->GetFace() == parentFace,4,2,6
parentEdge && parentEdge->GetFace() == parentFace,4,2,6
vMask.AreFaceWeightsForFaceCenters(),4,2,6
parentEdge,4,2,6
_bigStencils.find(protoStencil)!=_bigStencils.end(),3,3,6
fcount < 4,3,3,6
GetMaxLevel() > 0,3,3,6
handle.batchIndex == Base::GetBatchIndex(),3,3,6
_bigStencils.find(stencil)!=_bigStencils.end(),3,3,6
this->_bigStencils.find(protoStencil)!=this->_bigStencils.end(),3,3,6
 meshFactory ,3,3,6
valence != 2,4,2,6
!vMask.AreFaceWeightsForFaceCenters(),3,2,5
index >= 0 && index < nvertices,4,1,5
!IsSingular(),4,1,5
protoStencil<(int)_sizes.size(),2,2,4
_alloc->GetSize(_id)==0,2,2,4
nverts==4,2,2,4
stencil<(int)_sizes.size(),2,2,4
parent->children,2,2,4
_alloc->GetWeights(_id)[n]!=0.0f,2,2,4
level>=0 and level<((int)_vertsOffsets.size()-1),2,2,4
srcWeights[i]!=0.0f,2,2,4
it->first >= faceId,2,2,4
v->IsConnected(),2,2,4
v->GetMask(false) == v->GetMask(true),2,2,4
f->IsCoarse(),2,2,4
meshFactory->IsKernelTypeSupported(kernelType),2,2,4
child,2,2,4
ptables,2,2,4
 result->_patchTables ,2,2,4
meshIndex < (int)_dirtyFlags.size(),2,2,4
e->GetOpposite(),4,0,4
weight!=0.0f,2,2,4
lastface,2,2,4
 GetHbrMesh() ,2,2,4
subdivisionTables->GetScheme() == FarSubdivisionTables::CATMARK,2,2,4
getMesh() and getNumFaces()>0,2,2,4
stencilTables,2,2,4
parentVertex2,2,1,3
_size < (int)_stencils.GetSize(),2,1,3
length+128 <= 255,2,1,3
tan1Mask.GetNumFaceWeights() == tan2Mask.GetNumFaceWeights(),2,1,3
start<(Index)_offsets.size(),2,1,3
quadrant>=0,2,1,3
edge->GetOrgVertex() == this,3,0,3
parentVertex1,2,1,3
eFaceIndex == i,2,1,3
parentFace == parentEdge2->GetFace(),2,1,3
refiner,2,1,3
refinement.getNumChildVerticesFromFaces() > 0,2,1,3
p,2,1,3
tan1Mask.GetNumEdgeWeights() == tan2Mask.GetNumEdgeWeights(),2,1,3
(not _offsets.empty()) and i<(int)_offsets.size(),2,1,3
length <= 128,2,1,3
scheme,2,1,3
d <= 32767 && best <= 258,2,1,3
j == nIncidentEdges - 1,2,1,3
o == out + *out_len,2,1,3
edge->GetDestVertex() == v,3,0,3
pSibling == cSibling,2,1,3
references == 0,2,1,3
nIncidentEdges > 1,2,1,3
edge->GetOrgVertex() == v,3,0,3
GetDepth() == 0 || static_cast<int>(path.remainder.size()) == GetDepth(),2,1,3
 maxlevel > 0 ,1,1,2
" pthread_mutex_init(&_mutex,NULL) ",1,1,2
i == nHierarchicalEdits,1,1,2
dst,1,1,2
IsFeatureAdaptive(),1,1,2
idx==ringsize,1,1,2
newVertex >= firstVertex && newVertex < lastVertex,1,1,2
_alloc->GetWeights(_id)[n]>0.0f,1,1,2
_bigStencils.find(stencil)==_bigStencils.end(),1,1,2
_endcapVertexStencilTables,1,1,2
depth==currentDepth+1,1,1,2
tableOffset+end <= (int)_vertIndices.size(),1,1,2
kernelBatch.GetLevel() == subdivisionTables->GetMaxLevel() - 1,1,1,2
nv>0,1,1,2
level>=0 and level<(int)_vertsOffsets.size(),1,1,2
vidx>-1,1,1,2
 pattern>=HbrFace<T>::kTransition0 and pattern<=HbrFace<T>::kTransition4 ,1,1,2
level>=0 and level<=((int)_vertsOffsets.size()+1),1,1,2
 ((iOfs+3)<=in->GetNumElements()) and ((oOfs+3)<=out->GetNumElements()) and out->GetNumVertices()>=in->GetNumVertices(),1,1,2
GetAllocator(),1,1,2
ptype==QUADS,1,1,2
_subdivision,1,1,2
i >= FarKernelBatch::FIRST_KERNEL_TYPE && i < FarKernelBatch::NUM_KERNEL_TYPES,1,1,2
!v->OnBoundary(),2,0,2
 nverts==refiner.GetNumVerticesTotal() ,1,1,2
pthread_mutex_unlock(&_mutex)==0,1,1,2
n >= 2,1,1,2
parray.GetDescriptor().GetType()==QUADS,1,1,2
 childvert->GetValence()==valence,1,1,2
_bigStencils.find(protoStencil)==_bigStencils.end(),1,1,2
onext,1,1,2
stencilsize>=1,1,1,2
 _allocator ,1,1,2
i >= FarKernelBatch::FIRST_KERNEL_TYPE and i < FarKernelBatch::NUM_KERNEL_TYPES,1,1,2
kernelType >= FarKernelBatch::FIRST_KERNEL_TYPE and kernelType < FarKernelBatch::NUM_KERNEL_TYPES,1,1,2
count < 256,1,1,2
" (getMaskRanking(px->GetMask(false), px->GetMask(true) )!=0xFF) and (getMaskRanking(py->GetMask(false), py->GetMask(true) )!=0xFF) ",1,1,2
inversePermutation.count(newVertex) == 0,1,1,2
this->_bigStencils.find(protoStencil)==this->_bigStencils.end(),1,1,2
"""not implemented yet""",1,1,2
result->_subdivisionTables,1,1,2
weight!=0.0f or tan1Weight!=0.0f or tan2Weight!=0.0f,1,1,2
" (GetMaskRanking(px->GetMask(false), px->GetMask(true) )!=0xFF) and (GetMaskRanking(py->GetMask(false), py->GetMask(true) )!=0xFF) ",1,1,2
 pthread_mutex_destroy(&_mutex)==0 ,1,1,2
 pthread_mutex_lock(&_mutex)==0 ,1,1,2
 remapTable[ v->GetID() ] = -1 ,1,1,2
scheme == tables->GetScheme(),1,1,2
this->GetNumStencils()>0,1,1,2
pv,1,1,2
level>=0 and level<=(int)_vertsOffsets.size(),1,1,2
count<3,1,1,2
level>=0 and level<((int)_markers.size()-1),1,1,2
start<(int)_offsets.size(),1,1,2
kernelType >= FarKernelBatch::FIRST_KERNEL_TYPE && kernelType < FarKernelBatch::NUM_KERNEL_TYPES,1,1,2
rank <= 2 or rank >= 8,1,1,2
"""Missing specialization for TopologyRefinerFactory<MESH>::resizeComponentTopology()"" == 0",1,1,2
childFaces.size()==f->GetNumVertices(),1,1,2
 rankx!=0xFF and ranky!=0xFF ,1,1,2
e2,1,1,2
rank <= 2 || rank >= 8,1,1,2
f->_adaptiveFlags.rots==0 and nv==4,1,1,2
 _remapTable[ v->GetID() ] = -1 ,1,1,2
_mesh,1,1,2
 ((iOfs+3)<=in->GetNumElements()) and ((oOfs+3)<=out->GetNumElements()),1,1,2
quadrant<4,1,1,2
edge == face->GetEdge((index + nv - 1) % nv),2,0,2
" (FarSubdivisionTables<U>::getMaskRanking(px->GetMask(false), px->GetMask(true) )!=0xFF) and (FarSubdivisionTables<U>::getMaskRanking(py->GetMask(false), py->GetMask(true) )!=0xFF) ",1,1,2
pattern>=0,1,1,2
result->_vertexEditTables,1,1,2
"!""kernel type is not supported""",1,1,2
vfine,1,1,2
splitTable.size() == patchTable.size(),1,1,2
(int)inversePermutation.size() == kernelBatchSize,1,1,2
quadrant>-1 and quadrant<4,1,1,2
tidx>=0,1,1,2
 key.faceid >= faceid ,1,1,2
patchType == FarPatchTables::QUADS || patchType == FarPatchTables::TRIANGLES,1,1,2
 tcase>=HbrFace<T>::kTransition0 and tcase<=HbrFace<T>::kTransition4 ,1,1,2
fv2.IsInitialized(),2,0,2
cvs.size()==4,1,1,2
parent,1,1,2
edges.size()==vertices.size(),1,1,2
 remapTable[ v->GetID() ] == -1 ,1,1,2
idx<table.GetNumStencils(),1,1,2
hasStandardVertexVertexKernels,1,1,2
 f->GetNumVertices()==4 ,1,1,2
_endcapStencilTables,1,1,2
"""Missing specialization for TopologyRefinerFactory<MESH>::assignComponentTopology()"" == 0",1,1,2
this->_bigStencils.find(stencil)==this->_bigStencils.end(),1,1,2
_subdivisionTables,1,1,2
face->GetNumVertices() == 3 && triangleSubdivision == k_Old,1,0,1
(not GetOffsets().empty()) and i<(int)GetOffsets().size(),1,0,1
!parent.vertex,1,0,1
face->GetNumVertices() == 3,1,0,1
_size>=4,1,0,1
id != -1,1,0,1
vertex.GetNumFaces() == vertex.GetNumEdges(),1,0,1
edge == face->GetEdge((index + 2) % 3),1,0,1
n > 0.0f && mask < n,1,0,1
hmesh,1,0,1
vertexDesc.stride == varyingDesc.stride,1,0,1
vertex,1,0,1
!face || !parent.vertex,1,0,1
v->GetParentEdge(),1,0,1
"""FindIndexIn4Tuple() did not find expected value!"" == 0",1,0,1
!edge || !parent.vertex,1,0,1
vertex->GetParentFace() == 0,1,0,1
f->GetDepth()==level,1,0,1
 nverts==farRefiner.GetNumVerticesTotal() ,1,0,1
bits != 2,1,0,1
!obj->GetNext(),1,0,1
v->GetParentVertex(),1,0,1
_size <= (int)_stencils.GetSize(),1,0,1
!vertex || !parent.vertex,1,0,1
lorg >= 0 && ldst >= 0 && rorg >= 0 && rdst >= 0,1,0,1
nv==4,1,0,1
 (u>=0.0f) and (u<=1.0f) and (v>=0.0f) and (v<=1.0f) ,1,0,1
edges.size()==0,1,0,1
it!=_edgeset.end(),1,0,1
this->AreFaceWeightsForFaceCenters() == dst.AreFaceWeightsForFaceCenters(),1,0,1
