x_val,y_added,y_removed,y_combined
false,32,0,32
sizeof(typename InputByteStream::Ch) == 1,12,0,12
sizeof(typename OutputByteStream::Ch) == 1,12,0,12
0,10,0,10
IsArray(),10,0,10
"!""How did we get here?""",6,3,9
!AtEnd(),9,0,9
 ret == DISPMANX_SUCCESS ,9,0,9
item != NULL,8,1,9
SDL_hapticlist == item,5,2,7
IsObject(),7,0,7
isCompatible(other),7,0,7
surface->format->format == SDL_PIXELFORMAT_ARGB8888,6,0,6
 index < length() ,4,2,6
s_XInputDLLRefCount == 0,4,2,6
s_XInputDLLRefCount > 0,4,2,6
surface->pitch == surface->w * 4,5,0,5
mSize,5,0,5
width == 0,5,0,5
"size < 16384, ""size too big: """,4,0,4
"(size == 1) || (size == 2) || (size == 4) || (size == 8) || ((size % 16) == 0), ""size not a multiple of 16byte: """,4,0,4
"ea != 0, ""Nullpointer EA: """,4,0,4
"ls != 0, ""Nullpointer LS: """,4,0,4
" (((uintsize)ls % 16) == 0) || (size < 16), ""LS Address not aligned: """,4,0,4
 update ,4,0,4
a == 0,4,0,4
" ((((uintsize)ls % size) == 0) && (((uintsize)ea % size) == 0)) || (size > 16), ""Not naturally aligned: """,4,0,4
" (((uintsize)ea % 16) == 0) || (size < 16), ""XDR Address not aligned: """,4,0,4
index < _count,4,0,4
dstfmt->BytesPerPixel == 4,4,0,4
" ((uintsize)ea%16)==((uintsize)ls%16), ""wrong Quadword alignment of LS and EA: """,4,0,4
codepoint <= 0x10FFFF,3,0,3
"ok_address(m, p)",3,0,3
s_bXInputEnabled,2,1,3
data->type == SDL_HAPTIC_LEFTRIGHT,2,1,3
fp_ != 0,3,0,3
pathset,3,0,3
 *length >= 0 && *length < 5 ,2,1,3
0 || 1,3,0,3
SDL_joylist == item,3,0,3
SDL_JoystickFromInstanceID(SDL_JoystickInstanceID(joystick)) == joystick,3,0,3
effect->effect.type == SDL_HAPTIC_LEFTRIGHT,2,1,3
base->type == SDL_HAPTIC_LEFTRIGHT,2,1,3
pivot != 0,3,0,3
 index >= 0 ,2,1,3
sizeof(Ch) >= 4,3,0,3
sizeof(Ch) >= 2,3,0,3
s != NULL,3,0,3
1,3,0,3
v==CountTo,3,0,3
XINPUTGETCAPABILITIES,2,1,3
 p ,2,1,3
(is_aligned(chunk2mem(p))) || (p->head == FENCEPOST_HEAD),3,0,3
"!""Support hat as axis""",2,1,3
mFreeList == mSize,2,0,2
mStride == 0 || sizeof(T) <= mStride,2,0,2
v==44,2,0,2
 strlen(typebuf) > 0 ,1,1,2
userId >= 0,1,1,2
_this->first == item,2,0,2
sizeof(typename OutputStream::Ch) >= 2,2,0,2
!is_mmapped(p),2,0,2
!_this->grabbed_window || ((_this->grabbed_window->flags & SDL_WINDOW_INPUT_GRABBED) != 0),2,0,2
"0 && ""write me!""",1,1,2
sizeof(typename InputStream::Ch) >= 2,2,0,2
!next_pinuse(p),2,0,2
SDL_GameControllerFromInstanceID(SDL_JoystickInstanceID(SDL_GameControllerGetJoystick(gamecontroller))) == gamecontroller,2,0,2
SDL_AtomicGet(&queue->watcher) == 0,2,0,2
chunksize(p) == small_index2size(i),2,0,2
is_aligned(chunk2mem(p)),2,0,2
pinuse(p),2,0,2
SDL_FALSE,2,0,2
fmt1 != NULL,2,0,2
chunksize(P) == small_index2size(I),2,0,2
v==35,2,0,2
(device->buffer_queue_head != NULL) == (device->queued_bytes != 0),2,0,2
srcfmt->BytesPerPixel == 4,2,0,2
data != NULL,2,0,2
v==55,2,0,2
P != B,2,0,2
i>=0 && i<mCurNbEntries,2,0,2
i<mSize,2,0,2
srcfmt->BytesPerPixel == 2,2,0,2
chunksize(p) == small_index2size(idx),2,0,2
(sz & CHUNK_ALIGN_MASK) == 0,2,0,2
capabilities.SubType == XINPUT_DEVSUBTYPE_GAMEPAD,1,1,2
P != F,2,0,2
len < SDL_arraysize(path),1,1,2
"(SDLTest_AssertCheck(assertCondition, logMessage))",1,1,2
empty,2,0,2
level_stack_.GetSize() >= sizeof(Level),2,0,2
v==-15,2,0,2
chunksize(v) == rsize + nb,2,0,2
 strlen(typebuf) < NFD_MAX_STRLEN-1 ,1,1,2
sscanf_ret == 2,2,0,2
"statement, regex",2,0,2
SDL_SubsystemRefCount[subsystem_index] < 255,2,0,2
Base::level_stack_.GetSize() >= sizeof(typename Base::Level),2,0,2
sizeof(typename InputStream::Ch) >= 4,2,0,2
resized_properly == 0,2,0,2
joystick->hwdata->bXInputHaptic,1,1,2
IsString(),2,0,2
icon->format->format == SDL_PIXELFORMAT_ARGB8888,2,0,2
handle != NULL,2,0,2
v==45,2,0,2
type == kObjectType || type == kArrayType,2,0,2
type == kStringType,2,0,2
userId < SDL_XINPUT_MAX_DEVICES,1,1,2
!(parseFlags & kParseInsituFlag),1,0,1
u->child[0]->parent == u,1,0,1
dst_ != 0,1,0,1
SDL_GL_GetCurrentContext() == NULL,1,0,1
u->bk->fd == u,1,0,1
is_mmapped(p) || sz < (s + MIN_CHUNK_SIZE),1,0,1
sp != 0,1,0,1
"::testing::internal::DoubleNearPredFormat, val1, val2, abs_error",1,0,1
head != 0,1,0,1
!Base::level_stack_.template Top<typename Base::Level>()->inArray,1,0,1
somevalue == 1,1,0,1
lastq == 0 || cinuse(lastq),1,0,1
 !bTruncate ,1,0,1
bad==CountTo,1,0,1
"chunk_plus_offset(p, sz + SIZE_T_SIZE)->head == 0",1,0,1
 start ,1,0,1
"sint8, sizeof(Sint8) == 1",1,0,1
is.Peek() == '[',1,0,1
!this->convert.needed,1,0,1
!haveRGBMasks,1,0,1
 pathSet->count > 0 ,1,0,1
s_BaseUnitsX != 0,1,0,1
node->data,1,0,1
biBitCount <= 8,1,0,1
sizeof(uqword)==8,1,0,1
"::testing::internal::CmpHelperFloatingPointEQ<float>, expected, actual",1,0,1
tsize >= minsize_for_tree_index(idx),1,0,1
bad==42,1,0,1
stack_.GetSize() == sizeof(ValueType),1,0,1
mCapacity < capacity,1,0,1
device != NULL,1,0,1
u->parent != u,1,0,1
!!b,1,0,1
n <= 308,1,0,1
size >= MAX_ATTRIBUTES,1,0,1
&ptr != this,1,0,1
get_audio_device(device->id) == device,1,0,1
p->fd->bk == p,1,0,1
S >= MIN_CHUNK_SIZE,1,0,1
dst_rate != 0,1,0,1
head == 0,1,0,1
pathSet,1,0,1
sz == SIZE_T_SIZE,1,0,1
num < pathset->count,1,0,1
"::testing::internal:: EqHelper<GTEST_IS_NULL_LITERAL_(expected)>::Compare, expected, actual",1,0,1
"0 && ""Unexpected thread state""",1,0,1
Base::level_stack_.template Top<typename Base::Level>()->inArray,1,0,1
is.Peek() == 't',1,0,1
"data, assertion_userdata",1,0,1
"::testing::internal::CmpHelperLT, val1, val2",1,0,1
p->bk->fd == p,1,0,1
!this->enabled,1,0,1
rc == pid,1,0,1
curdata->resource,1,0,1
pinuse(oldfirst),1,0,1
"::testing::internal::IsHRESULTSuccess, (expr)",1,0,1
remainder_size == element_size,1,0,1
u->child[1] != u,1,0,1
 dst ,1,0,1
"bin_find(m, m->top) == 0",1,0,1
(char *) oldfirst > (char *) q,1,0,1
fileList,1,0,1
(buffer->next != NULL) || (buffer == device->buffer_queue_tail),1,0,1
tls,1,0,1
"codestart, &temp_options, FALSE",1,0,1
sizeof(bool)==1,1,0,1
"::testing::internal::CmpHelperSTRCASENE, s1, s2",1,0,1
name,1,0,1
y,1,0,1
sizeof(sword)==2,1,0,1
m->topsize == chunksize(m->top),1,0,1
checked_setname,1,0,1
tsize >= MIN_LARGE_SIZE,1,0,1
temp->format->BitsPerPixel == 24,1,0,1
entry->prev == NULL,1,0,1
level_stack_.template Top<Level>()->inArray,1,0,1
texturebpp != 0,1,0,1
sizeof(sdword)==4,1,0,1
type <= kNumberType,1,0,1
qsize >= MIN_CHUNK_SIZE,1,0,1
next->prev_foot == sz,1,0,1
_this->displays != NULL,1,0,1
 ((newData != NULL) && (capacity > 0)) || ((newData == NULL) && (capacity == 0)) ,1,0,1
chunksize(u) == tsize,1,0,1
device->buffer_queue_head == NULL,1,0,1
"enum, sizeof(SDL_DUMMY_ENUM) == sizeof(int)",1,0,1
_this->last == NULL,1,0,1
flags_ & kUintFlag,1,0,1
tindex == idx,1,0,1
mSize >= copyCount,1,0,1
"sint16, sizeof(Sint16) == 2",1,0,1
cvt2 != NULL,1,0,1
tree != NULL,1,0,1
sizeof(udword)==4,1,0,1
mFreeList == EOL || compacting && mSize == mEntries.size(),1,0,1
!next_pinuse(u),1,0,1
cvt1 != NULL,1,0,1
"0 && ""This should never happen""",1,0,1
!Empty(),1,0,1
SDL_arraysize(cursorNames) == SDL_NUM_SYSTEM_CURSORS,1,0,1
u->fd->bk == u,1,0,1
"::testing::internal::CmpHelperSTRNE, s1, s2",1,0,1
(id == 0) || (id == 1),1,0,1
bufferSize >= 4,1,0,1
!send_quit_pending,1,0,1
sizeof(atomicValue)>=4,1,0,1
flags_ & kIntFlag,1,0,1
"uint64, sizeof(Uint64) == 8",1,0,1
newBuffer != 0,1,0,1
remainder_size == request2size(sizes[i]),1,0,1
_ptr != (T*)NULL,1,0,1
is_small(DVS),1,0,1
is_mmapped(p) || pinuse(p) || next_chunk(prev_chunk(p)) == p,1,0,1
nx > 0,1,0,1
"::testing::internal::CmpHelperSTREQ, expected, actual",1,0,1
this != &rhs,1,0,1
"q == m->dv || bin_find(m, q)",1,0,1
"0 && ""The pointer wasn't on any X11 screen?!""",1,0,1
entry->next == NULL,1,0,1
nfences >= 2,1,0,1
v==Expect,1,0,1
!(mHash.size()&(mHash.size()-1)),1,0,1
"0 && ""We should never get here (caught above)""",1,0,1
5 < 4,1,0,1
pinuse(q),1,0,1
IsValidFloat(x),1,0,1
"::testing::internal::CmpHelperSTRCASEEQ, expected, actual",1,0,1
v==-5,1,0,1
nb>0 && nb<=16,1,0,1
chunksize(u->child[0]) < chunksize(u->child[1]),1,0,1
p->bk == b || chunksize(p->bk) == chunksize(p),1,0,1
cinuse(p),1,0,1
"::testing::internal::CmpHelperGT, val1, val2",1,0,1
 curdata->element > DISPMANX_NO_HANDLE,1,0,1
length <= 0xFFFFFFFF,1,0,1
ret >= 1,1,0,1
"chunk_plus_offset(p, sz)->head == FENCEPOST_HEAD",1,0,1
final != NULL,1,0,1
is_aligned(ss),1,0,1
sizeof(uword)==2,1,0,1
is.Peek() == '{',1,0,1
mTimestamp == mBase.mTimestamp,1,0,1
mask_region != NULL,1,0,1
flags_ & kUint64Flag,1,0,1
button < ANDROID_MAX_NBUTTONS,1,0,1
current_audio.impl.OnlyHasDefaultInputDevice || !current_audio.impl.HasCaptureSupport,1,0,1
dummyhandle != 0,1,0,1
"::testing::internal::CmpHelperFloatingPointEQ<double>, expected, actual",1,0,1
indentChar == ' ' || indentChar == '\t' || indentChar == '\n' || indentChar == '\r',1,0,1
flags_ & kInt64Flag,1,0,1
"sint64, sizeof(Sint64) == 8",1,0,1
device->queued_bytes >= avail,1,0,1
m->dvsize >= MIN_CHUNK_SIZE,1,0,1
"0 && ""Shouldn't happen""",1,0,1
"sint32, sizeof(Sint32) == 4",1,0,1
XINPUTSETSTATE,1,0,1
"0 && ""This should really be implemented for every target.""",1,0,1
next_pinuse(p),1,0,1
(len & (mparams.page_size - SIZE_T_ONE)) == 0,1,0,1
width > 0,1,0,1
this->spec.channels == ioData->mNumberChannels,1,0,1
bad!=Expect,1,0,1
x,1,0,1
u->child[0] == 0,1,0,1
src_rate != 0,1,0,1
GTK_WIDGET_REALIZED (widget),1,0,1
*ptr!=EOL,1,0,1
u->index == tindex,1,0,1
sz >= s,1,0,1
"::testing::internal::IsHRESULTFailure, (expr)",1,0,1
sz == ((sp->base + sp->size) - (char *) p) - TOP_FOOT_SIZE,1,0,1
(flags_ & kUint64Flag) != 0,1,0,1
IsNumber(),1,0,1
m->topsize > 0,1,0,1
"0 && ""This should have been caught elsewhere""",1,0,1
!window || !(window->flags & SDL_WINDOW_MOUSE_CAPTURE),1,0,1
src_rate != dst_rate,1,0,1
capacity >= copyCount,1,0,1
mainloop_api,1,0,1
!cinuse(u),1,0,1
sizeof(ubyte)==1,1,0,1
(jk >= 2) && (jk <= 6),1,0,1
u->parent->child[0] == u || u->parent->child[1] == u || *((tbinptr *) (u->parent)) == u,1,0,1
is_mmapped(p),1,0,1
sz > 0,1,0,1
"iconv_t, sizeof (iconv_t) <= sizeof (SDL_iconv_t)",1,0,1
userId < XUSER_MAX_COUNT,1,0,1
"uint8, sizeof(Uint8) == 1",1,0,1
"statement, ::testing::internal::ExitedUnsuccessfully, regex",1,0,1
m->footprint <= m->max_footprint,1,0,1
size > sizeof(ChunkHeader),1,0,1
"bin_find(m, m->dv) == 0",1,0,1
"locksize, sizeof(*lock) == sizeof(long)",1,0,1
"::testing::internal::CmpHelperNE, val1, val2",1,0,1
"uint16, sizeof(Uint16) == 2",1,0,1
!temp->format->palette,1,0,1
codepoint < 0xD800 || codepoint > 0xDFFF,1,0,1
item->hwdata == NULL,1,0,1
!is_small(sz),1,0,1
window || (!window && !context),1,0,1
(((size_t) (chunk2mem(p))) % alignment) == 0,1,0,1
GetSize() >= count * sizeof(T),1,0,1
"::testing::internal::CmpHelperLE, val1, val2",1,0,1
i <= MAX_ATTRIBUTES,1,0,1
i > 0,1,0,1
!haveAlphaMask,1,0,1
ret == 2,1,0,1
"sharpness>=0.0f && sharpness<=1.0f && ""Invalid sharpness value in feedback filter""",1,0,1
!packet || (packet->datalen <= SDL_AUDIOBUFFERQUEUE_PACKETLEN),1,0,1
total <= m->footprint,1,0,1
!texture->native,1,0,1
"segment_holds(sp, (char *) sp)",1,0,1
width >= 4,1,0,1
!cinuse(p),1,0,1
_this->numdevices == 0,1,0,1
_this->first == NULL,1,0,1
"uint32, sizeof(Uint32) == 4",1,0,1
ptr,1,0,1
v==42,1,0,1
u->child[0] != u,1,0,1
SDL_num_touch == 0,1,0,1
chunksize(p) >= nb,1,0,1
use_mmap(m),1,0,1
GetSize() >= sizeof(T),1,0,1
m->dvsize == chunksize(m->dv),1,0,1
current_audio.impl.OnlyHasDefaultOutputDevice,1,0,1
v==15,1,0,1
SDL_EventQ.count > 0,1,0,1
(prec >= 0) && (prec < SDL_arraysize(init_jk)),1,0,1
IsBool(),1,0,1
stream_len > 0,1,0,1
proto_count <= sizeof(protocols) / sizeof(protocols[0]),1,0,1
!freeListEmpty(),1,0,1
"!bin_find(m, q)",1,0,1
"::testing::internal::CmpHelperGE, val1, val2",1,0,1
"0 && ""This is a test""",1,0,1
 src ,1,0,1
(idx == NTREEBINS - 1) || (tsize < minsize_for_tree_index((idx + 1))),1,0,1
sz == m->topsize,1,0,1
is.Peek() == 'f',1,0,1
name.IsString(),1,0,1
sz >= MIN_CHUNK_SIZE,1,0,1
stack_capacity_ > 0,1,0,1
index < data_.a.size,1,0,1
"scode, options, op == OP_ASSERT",1,0,1
sizeof(sbyte)==1,1,0,1
1 == 2,1,0,1
_len >= 0,1,0,1
malloc_usable_size(p) >= 256,1,0,1
mouse->buttonstate == 0,1,0,1
window->gamma != NULL,1,0,1
small_index(size) == i,1,0,1
SDL_haptics == NULL,1,0,1
sizeof(typename OutputStream::Ch) >= 4,1,0,1
u->child[1] == 0,1,0,1
!b,1,0,1
!SDL_updating_joystick,1,0,1
!level_stack_.template Top<Level>()->inArray,1,0,1
next == m->top || cinuse(next),1,0,1
LocalReferenceHolder_IsActive(),1,0,1
sizeof(sqword)==8,1,0,1
is.Peek() == 'n',1,0,1
renderer->UpdateTextureYUV,1,0,1
!(keyboard->focus->flags & SDL_WINDOW_MOUSE_CAPTURE),1,0,1
buffer != 0,1,0,1
data_.o.members != 0,1,0,1
!SDL_EventQ.head,1,0,1
u->child[1]->parent == u,1,0,1
data_.o.size > 0,1,0,1
"size, CountTo>0",1,0,1
"(SDLTest_AssertCheck(assertCondition, ""%s"", logMessage))",1,0,1
