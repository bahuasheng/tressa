x_val,y_added,y_removed,y_combined
0,415,408,823
 r >= 0 ,224,224,448
0 != encoder,112,112,224
0 != encoder->private_,102,102,204
0 != encoder->protected_,102,102,204
0 != object,86,86,172
0 != option_argument,84,84,168
field,72,72,144
sp != NULL,72,72,144
0 != decoder,62,62,124
0 != iterator,60,60,120
websValid(wp),59,59,118
 cursorHoldsMutex(pCur) ,56,56,112
ret != Z_STREAM_ERROR,50,50,100
0 != decoder->protected_,48,48,96
 sqlite3_mutex_held(db->mutex) ,42,42,84
 sqlite3_mutex_held(pPage->pBt->mutex) ,42,42,84
src1 == src2,42,42,84
x<8 && y<8 && x>=0 && y>=0,41,41,82
 sqlite3_mutex_held(pBt->mutex) ,40,40,80
0 != chain,40,40,80
 n > 0 ,40,40,80
 i>=0 && i<p->nCursor ,38,38,76
0 != block,38,38,76
h==8,37,37,74
 pFile ,34,34,68
 sqlite3_mutex_held(pCtx->s.db->mutex) ,34,34,68
0 != br,32,32,64
pargz_len,30,30,60
pargz,30,30,60
s->block_last_index[n]>=0,30,30,60
 sqlite3PagerIswriteable(pPage->pDbPage) ,28,28,56
wp,28,28,56
 pMem->db==0 || sqlite3_mutex_held(pMem->db->mutex) ,28,28,56
0 != decoder->private_,26,26,52
0 != br->buffer,26,26,52
 sqlite3_mutex_held(p->db->mutex) ,26,26,52
0 != iterator->file,26,26,52
buf,26,26,52
 id!=0 ,26,26,52
i>=0,26,26,52
object->type == FLAC__METADATA_TYPE_SEEKTABLE,24,24,48
tag,24,24,48
0 != filename,24,24,48
0 != src,24,24,48
data,24,24,48
0 != bw,24,24,48
 iDb>=0 && iDb<db->nDb ,24,24,48
object->type == FLAC__METADATA_TYPE_VORBIS_COMMENT,22,22,44
analyser != NULL,22,22,44
p_list != NULL,21,21,42
false,21,20,41
object->type == FLAC__METADATA_TYPE_CUESHEET,20,20,40
block->type == FLAC__METADATA_TYPE_VORBIS_COMMENT,20,20,40
(x),20,20,40
nNull==0,20,20,40
 sqlite3_mutex_held(mem3.mutex) ,20,20,40
SSCodeCvt::ok == res,20,20,40
 pC!=0 ,20,20,40
apu,20,20,40
pStream != 0,20,20,40
rq,20,20,40
PyIter_Check(it),18,18,36
 v!=0 ,18,18,36
 pCur->eState==CURSOR_VALID ,18,18,36
order > 0,18,18,36
render,18,18,36
0 != pDstA,18,18,36
SSCodeCvt::error != res,18,18,36
 !db->mallocFailed ,18,18,36
 rc==SQLITE_OK ,18,18,36
 argc==1 ,18,18,36
0 != pSrcW,18,18,36
this->size()*sizeof(CT) < 0xffffffffUL - sizeof(SSSHDR),18,18,36
 (pMem->flags & MEM_RowSet)==0 ,18,18,36
FLAC__bitreader_is_consumed_byte_aligned(decoder->private_->input),18,18,36
0 != pDstW,18,18,36
0 != pSrcA,18,18,36
0 != bw->buffer,18,18,36
rq->buflen == (rq->endbuf - rq->buf),17,17,34
p != 0,17,17,34
PyTuple_Check(args),16,16,32
!options.common.sector_align,16,16,32
 p->magic==VDBE_MAGIC_INIT ,16,16,32
 p->apCsr[i]!=0 ,16,16,32
url && *url,16,16,32
((int)temp & 7) == 0,16,16,32
ep,16,16,32
 pOp->p3>0 && pOp->p3<=p->nMem ,16,16,32
n >= 0,16,16,32
dst,16,15,31
 EIGHT_BYTE_ALIGNMENT(pMem) ,14,14,28
 iDummy>0 ,14,14,28
v,14,14,28
" !ExprHasProperty(pExpr, EP_xIsSelect) ",14,14,28
0 != violation,14,14,28
0 != iterator->current,14,14,28
 locktype<=SHARED_LOCK ,14,14,28
 !dlrAtEnd(pReader) ,14,14,28
group && *group,14,14,28
ref->magic == ALLOC_MAGIC,13,13,26
 p ,13,13,26
desc,13,13,26
nsf,12,12,24
 pParse->disableColCache>0 ,12,12,24
(line_size &7) ==0,12,12,24
s == 0,12,12,24
 pPage->isInit ,12,12,24
 p->nRef>0 ,12,12,24
 sqlite3BtreeHoldsMutex(p) ,12,12,24
0 != file,12,12,24
 isOpen(pPager->jfd) ,12,12,24
 db!=0 ,12,12,24
len<=32,12,12,24
decoder->private_->frame.header.channels == 2,12,12,24
 pEList!=0 ,12,12,24
 pOp->p2>0 ,12,12,24
 n+iDummy>0 ,12,12,24
 sqlite3_mutex_held(pcache1.mutex) ,12,12,24
q > 0.0,12,12,24
user && *user,12,12,24
sp->tbuflen >= npixels,12,12,24
frame,12,12,24
(argz && argz_len) || (!argz && !argz_len),12,12,24
src,13,10,23
x < static_cast<double>(INT_MAX / 2) + 1.0,12,11,23
sp,11,11,22
id,11,11,22
size <= m_bufferSize,12,9,21
str,10,10,20
 pC->isTable ,10,10,20
rc!=SQLITE_DONE,10,10,20
tzinfoarg != NULL,10,10,20
 p->nRef==0 ,10,10,20
track_num < object->data.cue_sheet.num_tracks,10,10,20
base,10,10,20
 nData>0 ,10,10,20
PyDict_Check(d),10,10,20
 sqlite3BtreeHoldsAllMutexes(pParse->db) ,10,10,20
f,10,10,20
current_length == chain->initial_length,10,10,20
PyWeakref_CheckRef(ref),10,10,20
 pC->deferredMoveto==0 ,10,10,20
v != NULL,10,10,20
!ret || iterator->offset[iterator->depth] == debug_target_offset,10,10,20
elements > 0,10,10,20
 pBt->inTransaction==TRANS_WRITE ,10,10,20
 !plrAtEnd(pReader) ,10,10,20
!ret || ftello(iterator->file) == debug_target_offset + (off_t)FLAC__STREAM_METADATA_HEADER_LENGTH,10,10,20
file,10,10,20
0 != unaligned_pointer,10,10,20
 pPager->state>=PAGER_RESERVED ,10,10,20
0 != needs_write,10,10,20
 pOp->p2<=p->nMem ,10,10,20
0 != aligned_pointer,10,10,20
 pPage->nOverflow==0 ,10,10,20
wsp,10,10,20
FLAC__BITS_PER_WORD >= 32,10,10,20
 sqlite3_mutex_held(pCur->pBtree->db->mutex) ,10,10,20
(vm->state).domain == VTS_DOMAIN,10,10,20
(get_bits_count(&s->gb) & 7) == 0,10,10,20
0 != spec,10,10,20
ret == Z_STREAM_END,10,10,20
s,10,10,20
 p->pEList ,10,10,20
unaligned_pointer != aligned_pointer,10,10,20
pi->valid,10,10,20
0 != node,10,10,20
PyLong_Check(v),10,10,20
*pbstr != 0,10,10,20
x > static_cast<double>(INT_MIN / 2) - 1.0,10,9,19
pNextSrcA >= pSrcA,9,9,18
pNextDstW >= pDstW,9,9,18
value,9,9,18
file != NULL,9,9,18
pNextDstA >= pDstA,9,9,18
pt != NULL,9,9,18
name != NULL,9,9,18
p_env->mapping == NULL,9,9,18
bytes >= 1 && bytes <= 4,9,9,18
entry && *entry,9,9,18
path,9,9,18
index < length,9,9,18
pNextSrcW >= pSrcW,9,9,18
msf != 0,9,9,18
range >= 1,9,9,18
isxdigit(line[12]),8,8,16
0 != stats,8,8,16
 pFile->locktype!=NO_LOCK || locktype==SHARED_LOCK ,8,8,16
cbits < FLAC__BITS_PER_WORD,8,8,16
fail,8,8,16
type->tp_flags & Py_TPFLAGS_HEAPTYPE,8,8,16
total_samples > 0,8,8,16
 pTable ,8,8,16
 n<nData ,8,8,16
 n+iDummy<=nData ,8,8,16
isxdigit(line[10]),8,8,16
err > 0,8,8,16
 stmtLruCheck() ,8,8,16
isxdigit(line[13]),8,8,16
(n) <= PY_SIZE_MAX / sizeof(type),8,8,16
total_samples_in_input > 0,8,8,16
0 != block1,8,8,16
MAX_RUN >= 63,8,8,16
 pOp->p1>=0 && pOp->p1<db->nDb ,8,8,16
 rc==SQLITE_LOCKED_SHAREDCACHE ,8,8,16
IOOOBJECT(self)->pos >= 0,8,8,16
object->type == FLAC__METADATA_TYPE_PICTURE,8,8,16
len>0,8,8,16
 p==0 || p->magic==VDBE_MAGIC_INIT ,8,8,16
 locktype!=RESERVED_LOCK || pFile->locktype==SHARED_LOCK ,8,8,16
order <= 32,8,8,16
MAX_LEVEL >= 64,8,8,16
0 != field_name,8,8,16
parameter > 0,8,8,16
PyList_Check(heap),8,8,16
size > 0,8,8,16
 pPager!=0 ,8,8,16
FLAC__STREAM_METADATA_CUESHEET_TRACK_ISRC_LEN % 8 == 0,8,8,16
 pH!=0 ,8,8,16
isxdigit(line[11]),8,8,16
IS_8X16(mb_type),8,8,16
 rc==SQLITE_OK || ppStmt==0 || *ppStmt==0 ,8,8,16
*length == 1,8,8,16
 pFile!=0 ,8,8,16
encoder->protected_->state == FLAC__STREAM_ENCODER_OK,8,8,16
ms != NULL,8,8,16
ctx_pic,8,8,16
 p->id==SQLITE_MUTEX_FAST || p->id==SQLITE_MUTEX_RECURSIVE ,8,8,16
item != NULL,8,8,16
 pOp->p3>0 ,8,8,16
log2>=-4,8,8,16
sp->pfunc != NULL,8,8,16
0 != source,8,8,16
 pTab!=0 ,8,8,16
0 != message,8,8,16
 (p->btreeMask & (1<<pOp->p1))!=0 ,8,8,16
filename,8,8,16
 !pReader->eof ,8,8,16
pi->prcno < pi->pirlvl->numprcs,8,8,16
0 != block2,8,8,16
s > dest,8,8,16
 nColumn==1 ,8,8,16
pbuf[0] == '0',8,8,16
decimal_point_len != 0,8,8,16
 pTabList->nSrc==1 ,8,8,16
 pIn1->flags&MEM_Int ,8,8,16
mb_x<b_stride,8,8,16
 !pBt->readOnly ,8,8,16
 p->inTrans==TRANS_WRITE ,8,8,16
cc%rowlen == 0,8,8,16
options.common.skip_specification.value.samples >= 0,8,8,16
next,8,8,16
PyTuple_Check(mro),8,8,16
filterSize > 0,8,8,16
line[9]=='x',8,8,16
 pNew!=0 ,8,8,16
num_handlers <= MAX_ADDRESS_HANDLERS,8,8,16
pbuf[1] == c,8,8,16
 v->nPendingData<0 ,8,8,16
"domain, file, line, func, msg",8,8,16
line[8]=='0',8,8,16
 locktype!=PENDING_LOCK ,8,8,16
 pPager->needSync ,8,8,16
 dump.nData>0 ,8,8,16
k <= 30,8,8,16
 pCur->pVtabCursor ,8,8,16
str != NULL,8,8,16
0 != chain->head,8,8,16
mb_x>=0 && mb_y>=0,8,8,16
FLAC__STREAM_METADATA_CUESHEET_MEDIA_CATALOG_NUMBER_LEN % 8 == 0,8,8,16
size >= 2,8,7,15
tid >= 0,7,7,14
s->current_picture.pict_type == s->pict_type,7,7,14
(unsigned int)index < GetLength(),10,4,14
ip,7,7,14
size <= m_bufferPos,8,6,14
this->size() > static_cast<MYSIZE>(nIndex),7,7,14
size <= m_bufferSize - m_bufferPos,8,6,14
 stream ,7,7,14
0 <= sd && sd < symMax,7,7,14
i > 0,7,7,14
tp,7,7,14
nFirst >= 0,7,7,14
nFirst + nCount <= nSize,7,7,14
!v,7,7,14
thr[b] >= 0,7,7,14
slevel != 0,7,7,14
lpw != NULL,8,6,14
s->current_picture.pict_type == s->current_picture_ptr->pict_type,7,7,14
fmt,7,7,14
shift == 4,7,7,14
!FRAME_MBAFF,7,7,14
s->mb_intra,7,7,14
context != NULL,12,2,14
lpa != NULL,8,6,14
path && *path,7,7,14
count >= 0,7,6,13
 pPager->pInJournal==0 ,6,6,12
 pOp->p3<=p->nMem ,6,6,12
s->block_last_index[n]>=0 || s->h263_aic,6,6,12
 pBt!=0 ,6,6,12
size <= MAX_FRAMESIZE / 2,6,6,12
error == NULL || *error != NULL,6,6,12
 *pPgno!=PENDING_BYTE_PAGE(pBt) ,6,6,12
UINT32_FROM_BE (chunk->len) == 4,6,6,12
 pCur->aiIdx[pCur->iPage]<pCur->apPage[pCur->iPage]->nCell ,6,6,12
 (pH->htsize & (pH->htsize-1))==0 ,6,6,12
 p->id==SQLITE_MUTEX_RECURSIVE || debugMutexNotheld(p) ,6,6,12
pWriter->last,6,6,12
 amt>0 ,6,6,12
 db->mallocFailed ,6,6,12
 pCur->apPage[pCur->iPage]->nCell==0 ,6,6,12
pathname != NULL,6,6,12
ipt2 != NULL,6,6,12
0 != id,6,6,12
 (p->btreeMask & (1<<iDb))!=0 ,6,6,12
PyErr_Occurred(),6,6,12
srcStride[1] == srcStride[2],6,6,12
header->channels == 2,6,6,12
encoder->protected_->channels == 2,6,6,12
 pList!=0 ,6,6,12
x >= 0,6,6,12
 pPager->state!=PAGER_UNLOCK ,6,6,12
sizeof(*g) == 16,6,6,12
 p->wantToLock>0 ,6,6,12
IS_TENTATIVELY_UNREACHABLE(op),6,6,12
 nTerm>0 ,6,6,12
pTab,6,6,12
n1 != OFFSET_UNKNOWN && n2 != OFFSET_UNKNOWN,6,6,12
 op>=0 && op<ArraySize(wsdStat.nowValue) ,6,6,12
tag && frame,6,6,12
rc->type == 2,6,6,12
 dump.pData[dump.nData]==' ',6,6,12
tstate != NULL,6,6,12
target_bps <= source_bps,6,6,12
 iDb>=0 ,6,6,12
w->orient<3,6,6,12
 pBt->autoVacuum ,6,6,12
_root->type == _STAT_DIR,6,6,12
!decoder_session->got_stream_info,6,6,12
why != WHY_YIELD,6,6,12
"USES_LIST(mb_type, 0) && USES_LIST(mb_type, 1)",6,6,12
field_select1==0 ||field_select1==1,6,6,12
iterator->offset[iterator->depth] == debug_target_offset,6,6,12
 db==0 || sqlite3_mutex_held(db->mutex) ,6,6,12
(put_bits_count(&s->pb) & 7) == 0,6,6,12
 IsVirtual(pTab) ,6,6,12
 n<=nData ,6,6,12
PyFile_Check(f),6,6,12
(bs->DataSize & 127) == 0,6,6,12
 pReader->term.nData>0 ,6,6,12
var && *var,6,6,12
"charset_wctomb(charset, s, 256) == -1 && !strcmp(s, "".."")",6,6,12
OVERREAD_ == 1,6,6,12
 (z-zBuf)==n ,6,6,12
 iLogsize>=0 && iLogsize<=LOGMAX ,6,6,12
rc==SQLITE_OK || rc==SQLITE_NOMEM,6,6,12
dir != NULL,6,6,12
timeout > 0,6,6,12
(*pargz && *pargz_len) || (!*pargz && !*pargz_len),6,6,12
 stream && stream->cursor ,6,6,12
 pName->nSrc==1 ,6,6,12
source_bps < 32,6,6,12
 pC->isTable==0 ,6,6,12
bytes == 8 || bytes == 4 || bytes == 3,6,6,12
rowsize > 0,6,6,12
0 != dest,6,6,12
nut->frame_code['N'].flags == FLAG_INVALID,6,6,12
 pX!=0 ,6,6,12
decoder_session->until_specification->value.samples >= 0,6,6,12
v1size == sizeof(id3v1_data),6,6,12
 sqlite3BtreeHoldsAllMutexes(db) ,6,6,12
bytes == 4 || bytes == 5,6,6,12
 iType-2 >= 0 ,6,6,12
 iDb<db->nDb ,6,6,12
field_select0==0 ||field_select0==1,6,6,12
"domain, file, line, func, s",6,6,12
 pCur->aiIdx[pCur->iPage]<pPage->nCell ,6,6,12
(bw->bits & 7) == 0,6,6,12
STACK_LEVEL() <= f->f_stacksize,6,6,12
iso9660_pathtable_get_size(pt) < ISO_BLOCKSIZE,6,6,12
(target_bps & 7) == 0,6,6,12
 (((int)pix1) & 7) == 0,6,6,12
 pIdx->pSchema==pTab->pSchema ,6,6,12
 (((int)pix2) & 7) == 0,6,6,12
 pOp->p4type==P4_INT32 ,6,6,12
a >= 0,6,6,12
0 != format,6,6,12
0 != tags,6,6,12
0 != node->data,6,6,12
0 != cuesheet,6,6,12
JAS_STREAM_MAXPUTBACK >= 2,6,6,12
 nByte>0 ,6,6,12
bufsize > 0,6,6,12
target_bps <= 24,6,6,12
"!""Invalid flags argument""",6,6,12
 !MEMDB ,6,6,12
 argc==1 || argc==2 ,6,6,12
 pPager->dbSizeValid ,6,6,12
 i>=0 && i<db->nDb ,6,6,12
0 != name,6,6,12
!options.common.sector_align || encoder_session.until == 0,6,6,12
 pData!=0 ,6,6,12
options.common.sector_align || *options.common.align_reservoir_samples == 0,6,6,12
size >= 0,6,6,12
data->cookie == MAGIC_COOKIE,6,6,12
offset == (_root->secsize * ISO_BLOCKSIZE),6,6,12
 n<pReader->nData ,6,6,12
 (((int)pix) & 7) == 0,6,6,12
 cat == 1 || cat == 2 || cat == 4 ,6,6,12
 n>0 && n<=4 ,6,6,12
!options.common.sector_align || encoder_session.skip == 0,6,6,12
 sqlite3PagerIswriteable(pParent->pDbPage) ,6,6,12
len >= 0,6,6,12
level - 64,6,6,12
 pOrTerm->eOperator==WO_EQ ,6,6,12
j == n,6,6,12
s->quarter_sample==0 || s->quarter_sample==1,6,6,12
n >= 0 && n < 32,6,6,12
h->slice_type_nos == FF_I_TYPE,6,6,12
 !interiorReaderAtEnd(pReader) ,6,6,12
 isOpen(pPager->fd) || pPager->tempFile ,6,6,12
 omitTable==0 ,6,6,12
 p->db!=0 ,6,6,12
(!argz && !argz_len) || ((argz <= entry) && (entry < (argz + argz_len))),6,6,12
 pData+nData>pData ,6,6,12
!k,6,6,12
pd != NULL,6,6,12
0 != status,6,6,12
ftello(iterator->file) == debug_target_offset + (off_t)FLAC__STREAM_METADATA_HEADER_LENGTH,6,6,12
sub->hm_data == NULL,6,6,12
 pOp->p1>0 && pOp->p1<=p->nMem ,6,6,12
channel_count <= MAX_CHANNELS,6,6,12
 p->nRef==0 || p->id==SQLITE_MUTEX_RECURSIVE ,6,6,12
f != NULL,6,6,12
 i>=0 && i<mem5.nBlock ,6,6,12
filename && *filename,6,6,12
guard->magic == GUARD_MAGIC,6,6,12
tablename,6,6,12
 nData>1 ,6,6,12
 i>=1 ,6,6,12
i < n,8,4,12
 pC->pCursor!=0 ,6,6,12
 pPage->pBt!=0 ,6,6,12
strlen(fname) <= 30,6,6,12
 pOp->p1>0 ,6,6,12
(!k && !tbl) || (k == (size_t)(-1) && errno == EILSEQ && tbl),6,6,12
0 != entry.entry && entry.length > 0,6,6,12
deque->leftblock != NULL,6,6,12
decoder_session->skip_specification->value.samples >= 0,6,6,12
plugin != NULL,7,4,11
s >= 0,5,5,10
plugin->imported == NULL,6,4,10
plugin->state == CP_PLUGIN_INSTALLED,6,4,10
s->pict_type==FF_P_TYPE,5,5,10
st->index_entries,5,5,10
v1.valid,5,5,10
IS_SUB_4X4(sub_mb_type),5,5,10
context,6,4,10
picture_number >= 0,5,5,10
offset == (p_stat->secsize * ISO_BLOCKSIZE),5,5,10
v2.valid,5,5,10
length > 0,5,5,10
s->chroma_h_shift == s->chroma_v_shift,5,5,10
mutex != NULL,10,0,10
strv != NULL,5,5,10
compensation_distance > 0,5,5,10
lumSrcPtr + vLumFilterSize - 1 < lumPixBuf + vLumBufSize*2,5,5,10
vr->classifications > 1 && temp <= 65536,5,5,10
IS_8X8(mb_type),5,5,10
h->ref_list[1][0].reference&3,5,5,10
(cbp&15) == 0 || (cbp&15) == 15,5,5,10
ref != VDP_INVALID_HANDLE,5,5,10
!s->progressive_sequence,5,5,10
eb[b] >= 0,5,5,10
bytes >= 0,5,5,10
ptr != NULL,5,5,10
ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT,5,5,10
!(len & 1),5,5,10
ret >= 0,5,5,10
strm.avail_in == 0,5,5,10
plugin->state == CP_PLUGIN_RESOLVED,6,4,10
power <= 0x7fff,5,5,10
src != NULL,5,5,10
pathn < FREEZE_INTERVAL << avctx->trellis,5,5,10
st->codec->bits_per_coded_sample > 0,5,5,10
m_references == 0,5,4,9
!AtEnd(),9,0,9
 pPager->journalOff==JOURNAL_HDR_SZ(pPager) ,4,4,8
h==b_w,4,4,8
s->nb_components == 3,4,4,8
n1 != n2,4,4,8
img_n+1 == out_n,4,4,8
 (f & (MEM_Static|MEM_Dyn))==0 ,4,4,8
sp->codetile != NULL,4,4,8
firstChrSrcY >= lastInChrBuf - vChrBufSize + 1,4,4,8
"*fix, ==, 0xdeadbeef",4,4,8
jas_matrix_numrows(c1) == numrows && jas_matrix_numcols(c1) == numcols && jas_matrix_numrows(c2) == numrows && jas_matrix_numcols(c2) == numcols,4,4,8
jas_matrix_numrows(c1) == numrows && jas_matrix_numrows(c2) == numrows,4,4,8
CHUNK_OF_SAMPLES >= 588,4,4,8
stream->cnt_ > 0,4,4,8
 pH->htsize>0 ,4,4,8
(dtime->second>>4) < 0x7 && (dtime->second&0xf) < 0xa,4,4,8
type->tp_dict != NULL,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_TYPE_LEN/8,4,4,8
 pC->rowidIsValid==0 ,4,4,8
0 != out,4,4,8
h->long_ref_count + h->short_ref_count <= h->sps.ref_frame_count,4,4,8
 !p->locked || p->wantToLock>0 ,4,4,8
ref >= 0,4,4,8
 (mem5.aCtrl[i] & CTRL_LOGSIZE)==iLogsize ,4,4,8
iscore >= 0,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_WIDTH_LEN/8,4,4,8
pgcit != NULL,4,4,8
i <= buf_size - HEADER_SIZE && i >= 0,4,4,8
total_coeff<=16,4,4,8
fracbits >= -3,4,4,8
0 != entry,4,4,8
 pExpr->token.z[pExpr->token.n-1]=='\'' ,4,4,8
isxdigit(line[2]),4,4,8
p->op==RTREE_LE || p->op==RTREE_LT || p->op==RTREE_GE || p->op==RTREE_GT || p->op==RTREE_EQ ,4,4,8
line[16]=='x',4,4,8
dec->numcomps == 3,4,4,8
new_len > 0,4,4,8
0 != in,4,4,8
0 != pA,4,4,8
 pTerm!=0 ,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_CUESHEET_INDEX_RESERVED_LEN/8,4,4,8
 (f & (MEM_Dyn|MEM_Ephem))==0 ,4,4,8
metadata->type == FLAC__METADATA_TYPE_STREAMINFO,4,4,8
sizes[i] <= (1 << i),4,4,8
0 != utf8,4,4,8
jas_stream_tell(cblk->stream) == jas_stream_getrwcount(cblk->stream),4,4,8
self->pos >= 0,4,4,8
 0!=pFile->locktype ,4,4,8
 pCur->eState==CURSOR_INVALID || pCur->eState==CURSOR_VALID ,4,4,8
carry <= MASK,4,4,8
padding_leftover >= FLAC__STREAM_METADATA_HEADER_LENGTH,4,4,8
isxdigit(line[5]),4,4,8
(vm->state).domain == VMGM_DOMAIN || (vm->state).domain == FP_DOMAIN,4,4,8
lastofs == ofs,4,4,8
na > 1 && nb > 0,4,4,8
0 != decoder->private_->metadata_filter_ids,4,4,8
buf[sign] == '0',4,4,8
chrSrcPtr + vChrFilterSize - 1 < chrPixBuf + vChrBufSize*2,4,4,8
 pCur->apPage[0]==pPage ,4,4,8
jas_matrix_numcols(c1) == numcols && jas_matrix_numcols(c2) == numcols,4,4,8
pDb==&db->aDb[0],4,4,8
 (rc&0xff)==rc ,4,4,8
ref_my <= c->ymax,4,4,8
nneeded <= nallocated,4,4,8
 pTable!=0 ,4,4,8
length != 0,4,4,8
FLAC__STREAM_METADATA_CUESHEET_NUM_TRACKS_LEN % 8 == 0,4,4,8
dictoffset % SIZEOF_VOID_P == 0,4,4,8
(unsigned)type <= FLAC__MAX_METADATA_TYPE_CODE,4,4,8
 pDest->flags&MEM_Null ,4,4,8
out->num_entries > 0,4,4,8
 (info.nData+(pPage->intKey?0:info.nKey))==info.nPayload ,4,4,8
 pExpr->token.z[0]=='x' || pExpr->token.z[0]=='X' ,4,4,8
lastInLumBuf + 1 - srcSliceY < srcSliceH,4,4,8
jas_image_numcmpts(enc->image) == 3,4,4,8
iter != NULL,4,4,8
 c==i ,4,4,8
FLAC__bitwriter_is_byte_aligned(encoder->private_->frame),4,4,8
PyList_Check(list),4,4,8
 pExpr->pLeft==0 && pExpr->pRight==0 ,4,4,8
 sz<=pBt->pageSize/4 ,4,4,8
dict && PyDict_Check(dict),4,4,8
" ExprHasProperty(pExpr, EP_xIsSelect) ",4,4,8
mb_type > 0 && mb_type < 4,4,4,8
 sqlite3BtreeHoldsMutex(db->aDb[iDb].pBt) ,4,4,8
isxdigit(line[3]),4,4,8
 pCur->wrFlag ,4,4,8
object->data.cue_sheet.num_tracks > 0,4,4,8
leafCorrection==4,4,4,8
nbytes == 1 || nbytes == 2 || nbytes == 4,4,4,8
 TK_NE==OP_Ne ,4,4,8
"charset_mbtowc(charset, &wc, ""\200"", 2) == -1",4,4,8
 (n&0x7fffffff)==n ,4,4,8
v>=0,4,4,8
data[i],4,4,8
FLAC__metadata_iterator_get_block(iterator) == block,4,4,8
cwords <= br->words,4,4,8
ref_mx <= c->xmax,4,4,8
 target>0 ,4,4,8
offset == FF_ARRAY_ELEMS(huff_quad_vlc_tables),4,4,8
(FLAC__STREAM_METADATA_CUESHEET_IS_CD_LEN + FLAC__STREAM_METADATA_CUESHEET_RESERVED_LEN) % 8 == 0,4,4,8
object,4,4,8
 nCell<nMaxCells ,4,4,8
FLAC__STREAM_METADATA_CUESHEET_INDEX_RESERVED_LEN % 8 == 0,4,4,8
lastInChrBuf + 1 - chrSrcSliceY >= 0,4,4,8
FLAC__bitreader_is_consumed_byte_aligned(br),4,4,8
(source_bps & 7) == 0,4,4,8
sp->cinfo.comm.is_decompressor,4,4,8
!s->mb_intra,4,4,8
(vm->state).pgc->cell_playback[(vm->state).cellN - 1].block_type == 0,4,4,8
frame->header.number_type == FLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER,4,4,8
 pH->first==0 ,4,4,8
deque->leftblock->leftlink == NULL,4,4,8
 sizeof(Mem3Block)==8 ,4,4,8
FLAC__STREAM_METADATA_CUESHEET_TRACK_NUM_INDICES_LEN % 8 == 0,4,4,8
data_len > 0 || total_error_0 == 0,4,4,8
iterator->offset[iterator->depth] + (off_t)FLAC__STREAM_METADATA_HEADER_LENGTH + (off_t)iterator->length == debug_target_offset,4,4,8
channels > 0 && channels <= FLAC_PLUGIN__MAX_SUPPORTED_CHANNELS,4,4,8
buf != NULL,4,4,8
 db->aDb[iDb].pBt!=0 ,4,4,8
dirp != NULL,4,4,8
pool->refcount>0,4,4,8
"DL_DEFAULT, pData+n, iDummy, NULL",4,4,8
cblk->numimsbs >= 0,4,4,8
 seenReplace==0 ,4,4,8
 (pFrom->flags & MEM_RowSet)==0 ,4,4,8
isxdigit(line[20]),4,4,8
(dtime->hour>>4) < 0xa && (dtime->hour&0xf) < 0xa,4,4,8
threshold >= 0,4,4,8
 pH->count==0 ,4,4,8
 pFile->locktype==SHARED_LOCK ,4,4,8
 pPager->state>=PAGER_SHARED ,4,4,8
subclass != NULL,4,4,8
s->pict_type==AV_PICTURE_TYPE_P,4,4,8
PyInstance_Check(v),4,4,8
PyClass_Check(cls),4,4,8
 isOpen(pPager->fd) ,4,4,8
 n+iDummy<nData ,4,4,8
 pOp[-1].opcode==OP_CollSeq ,4,4,8
isxdigit(line[6]),4,4,8
!s_empty(s),4,4,8
stream->ptr_ - stream->bufstart_ <= stream->bufsize_,4,4,8
s->mv_dir & MV_DIRECT,4,4,8
PyType_Check(subclass),4,4,8
PyTuple_Check(bases),4,4,8
deque->rightblock->rightlink == NULL,4,4,8
b8_stride == 2,4,4,8
FLAC__STREAM_METADATA_CUESHEET_LEAD_IN_LEN % 8 == 0,4,4,8
 p->id==SQLITE_MUTEX_RECURSIVE || os2MutexNotheld(p) ,4,4,8
 pNC!=0 ,4,4,8
((mb_x|mb_y)&1) == 0,4,4,8
spec->value_is_samples,4,4,8
src == b->buf,4,4,8
!(avio_tell(s->pb) & (KAG_SIZE-1)),4,4,8
0 != eq,4,4,8
v >= 0 && v < levels,4,4,8
pl>=0 && pl<=255,4,4,8
 border->start >= 0 ,4,4,8
(carry >> SHIFT) == 0,4,4,8
 p->id==SQLITE_MUTEX_RECURSIVE || winMutexNotheld(p) ,4,4,8
s->dquant==0,4,4,8
seg->type == JPC_SEG_RAW,4,4,8
offset == FF_ARRAY_ELEMS(huff_vlc_tables),4,4,8
 TK_NOTNULL==OP_NotNull ,4,4,8
FLAC__STREAM_METADATA_VORBIS_COMMENT_ENTRY_LENGTH_LEN == 32,4,4,8
data_len > 0 || total_error_1 == 0,4,4,8
FLAC__STREAM_METADATA_CUESHEET_INDEX_NUMBER_LEN % 8 == 0,4,4,8
gc->gc.gc_refs != 0,4,4,8
SQLITE_IOCAP_ATOMIC64K==(65536>>8),4,4,8
 j<nMaxCells ,4,4,8
size,4,4,8
score[sx + sy*score_stride] >= 0,4,4,8
0 != cd,4,4,8
 esc==0 ,4,4,8
nread <= n,4,4,8
 eLock==READ_LOCK || eLock==WRITE_LOCK ,4,4,8
decoder->private_->last_frame.header.number_type == FLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER,4,4,8
data_len > 0 || total_error_3 == 0,4,4,8
idigit < (int)ndigits,4,4,8
coef_sum < INT_MAX,4,4,8
br->consumed_bits < FLAC__BITS_PER_WORD,4,4,8
end != NULL,4,4,8
 pMem->z ,4,4,8
 nReaders<=MERGE_COUNT ,4,4,8
sizeof(rbps) == sizeof(FLAC__fixedpoint),4,4,8
format != NULL,4,4,8
ipaddr && *ipaddr,4,4,8
line[14]==' ',4,4,8
block->type == FLAC__METADATA_TYPE_SEEKTABLE,4,4,8
deque->leftblock != deque->rightblock,4,4,8
 pSrc ,4,4,8
(br->consumed_bits & 7) == 0,4,4,8
 pOut!=pIn1 ,4,4,8
pool->ref.count > 0,4,4,8
memsize <= sys_page_size,4,4,8
 pFile->locktype>=SHARED_LOCK ,4,4,8
 z2==(char*)sqlite3_value_text(argv[0]) ,4,4,8
numdigits > 0,4,4,8
 rc!=SQLITE_OK || isOpen(pPager->jfd) ,4,4,8
0 != pW,4,4,8
check_tzinfo_subclass(tzinfo) >= 0,4,4,8
 pLeft ,4,4,8
 pCur->iPage>0 ,4,4,8
 TK_EQ==OP_Eq ,4,4,8
 pReader->nElement<=pReader->nData ,4,4,8
 pMem->n>=0 ,4,4,8
hsz == 108,4,4,8
 rc==SQLITE_NOMEM || rc==SQLITE_OK ,4,4,8
k<=8,4,4,8
 target>0 && target<=pParse->nMem ,4,4,8
(FLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_RESERVED_LEN) % 8 == 0,4,4,8
 pExpr->token.z[1]=='\'' ,4,4,8
type != NULL && type->tp_alloc != NULL,4,4,8
 sqlite3_mutex_held(sqlite3MutexAlloc(SQLITE_MUTEX_STATIC_MASTER)) ,4,4,8
buf->line[line],4,4,8
bits <= 32,4,4,8
 pDb->pBt!=0 ,4,4,8
 p->id==SQLITE_MUTEX_RECURSIVE || pthreadMutexNotheld(p) ,4,4,8
ref_mx >= c->xmin,4,4,8
 pCsr->pNode==pRoot ,4,4,8
 pBt->nTransaction>0 ,4,4,8
 onError==OE_Rollback || onError==OE_Abort || onError==OE_Fail || onError==OE_Ignore || onError==OE_Replace ,4,4,8
iscore < 255*255*256 + s->lambda2*10,4,4,8
l>=0 && l<=255,4,4,8
 pParse->sLastToken.dyn==0 ,4,4,8
!s->h263_pred,4,4,8
block_w== 8 || block_w==16,4,4,8
PyList_Check(subclasses),4,4,8
firstLumSrcY >= lastInLumBuf - vLumBufSize + 1,4,4,8
basedealloc,4,4,8
 dlrDocid(pLeft)==dlrDocid(pRight) ,4,4,8
*(pvend-1) == '\0',4,4,8
 pPage->leaf ,4,4,8
c->low <= 0x1FF,4,4,8
 keyClass==FTS3_HASH_BINARY ,4,4,8
 pCur->iPage>=0 && pCur->apPage[pCur->iPage] ,4,4,8
z->size[b] == s,4,4,8
 pExpr->token.n>=3 ,4,4,8
minFilterSize > 0,4,4,8
month >= 1,4,4,8
lastInChrBuf + 1 - chrSrcSliceY < (chrSrcSliceH),4,4,8
num_comments > 0,4,4,8
f->f_fp == NULL,4,4,8
 pParse->disableColCache ,4,4,8
 iCol==-1 || (iCol>=0 && iCol<pTab->nCol) ,4,4,8
 pOp>p->aOp ,4,4,8
 xHash!=0 ,4,4,8
req_comp >= 1 && req_comp <= 4,4,4,8
 pC->iDb>=0 ,4,4,8
s->h263_pred,4,4,8
"charset_mbtowc(charset, &wc, ""\302\200"", 9) == 1 && wc == 0xc2",4,4,8
ss < 113,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_HEIGHT_LEN/8,4,4,8
outlen >= 0,4,4,8
j >= 0,4,4,8
 (pTerm->eOperator&(pTerm->eOperator-1))==0 ,4,4,8
 i==0 || pArray->aBtree[i-1]->pBt<p->pBt ,4,4,8
args != NULL && PyTuple_Check(args),4,4,8
channel->encoded_read_buf->len == 0 || !channel->do_encode,4,4,8
s->mb_skipped == 0,4,4,8
 TK_ISNULL==OP_IsNull ,4,4,8
 (f & (MEM_Static|MEM_Ephem))==0 ,4,4,8
 pLeft->eType==FTSQUERY_PHRASE ,4,4,8
 TK_GT==OP_Gt ,4,4,8
 !pPager->tempFile ,4,4,8
 (p->btreeMask & (1<<i))!=0 ,4,4,8
out_n == img_n || out_n == img_n+1,4,4,8
code_buffer < (1U << num_bits),4,4,8
 iType-2 < sizeof(staticMutexes)/sizeof(staticMutexes[0]) ,4,4,8
c-> stride == stride,4,4,8
dir && *dir,4,4,8
FLAC__STREAM_METADATA_CUESHEET_TRACK_OFFSET_LEN % 8 == 0,4,4,8
 argc==3 ,4,4,8
0 != *tempfile,4,4,8
globals != NULL,4,4,8
 TK_LT==TK_GT+2 ,4,4,8
 pToRelease==0 || sqlite3PagerIswriteable(pToRelease->pDbPage) ,4,4,8
op->ob_refcnt == 0,4,4,8
context->cur_attr >= 0,4,4,8
(0 != data && length > 0) || (0 == data && length == 0 && copy == false),4,4,8
s->mb_x == 0 && s->mb_y == 0,4,4,8
!s->thread_opaque,4,4,8
"pWriter->data.pData, pWriter->data.nData",4,4,8
!(IS_DIRECT(mb_type) && !h->direct_spatial_mv_pred),4,4,8
 pIn1->flags & MEM_Str || db->mallocFailed ,4,4,8
output_bits == 16,4,4,8
sp->coderow != NULL,4,4,8
s->dquant>=-2 && s->dquant<=2,4,4,8
(dtime->frame_u&0xf) < 0xa,4,4,8
dictoffset > 0,4,4,8
 sqlite3PagerGetExtra(pPage->pDbPage) == (void*)pPage ,4,4,8
0 != iterator->chain->tail,4,4,8
chrBufIndex < 2 * vChrBufSize,4,4,8
(int)FLAC__bitmath_ilog2(rbps)+1 <= fracbits + 6,4,4,8
isxdigit(line[17]),4,4,8
 iLookAhead!=YYNOCODE ,4,4,8
mb_type & MB_TYPE_CBP,4,4,8
!(((line_h2 >> 6) ^ line_h1) & 0x100) == (((line_h2 & 0x4000) != 0) == p),4,4,8
fracbits >= 0,4,4,8
 p->db->mallocFailed ,4,4,8
 iBlockid!=0 ,4,4,8
stream != NULL,4,4,8
 isWriteLock==0 || isWriteLock==1 ,4,4,8
(vm->state).domain == VMGM_DOMAIN || (vm->state).domain == VTSM_DOMAIN,4,4,8
0 != field,4,4,8
nes6502_banks[address >> NES6502_BANKSHIFT],4,4,8
pc->frame_start_found >= 0 && pc->frame_start_found <= 4,4,4,8
v > 0,4,4,8
PyType_Check(base),4,4,8
c == 18,4,4,8
p > pvfree && *(p-1) == '\0',4,4,8
 iDummy>=0 ,4,4,8
tzinfo != NULL,4,4,8
filter2Size > 0,4,4,8
ms && pa && pb && na > 0 && nb > 0 && pa + na == pb,4,4,8
 x>='a' && x<='z' ,4,4,8
 op>0 && op<0xff ,4,4,8
isxdigit(line[18]),4,4,8
sizeof(buffer) >= sizeof(FLAC__uint64),4,4,8
entry < out->num_entries,4,4,8
 pFile->locktype==NO_LOCK ,4,4,8
0 != object_array,4,4,8
 pOp->p1<=p->nMem ,4,4,8
time_incr >= 0,4,4,8
" !ExprHasProperty(pNew, EP_xIsSelect) ",4,4,8
 db->init.busy ,4,4,8
 index < length() ,4,4,8
 pOp[-1].p4type==P4_COLLSEQ ,4,4,8
sizeof(residual[0]) == sizeof(data[0]),4,4,8
bytes_left >= 0,4,4,8
 size==mem3.aPool[i+size-1].u.hdr.prevSize ,4,4,8
 db->magic==SQLITE_MAGIC_BUSY ,4,4,8
 pCur->iPage==0 ,4,4,8
p < end,4,4,8
buf->data_stack_top >= 0,4,4,8
s->field_select[dir][i] == 0 || s->field_select[dir][i] == 1,4,4,8
 pPg->pPager==pPager ,4,4,8
ref == 0,4,4,8
h->slice_type_nos == AV_PICTURE_TYPE_I,4,4,8
tuple_key == tuple_value,4,4,8
 pOrderBy!=0 ,4,4,8
USE_BUF (channel),4,4,8
(carry & 1) == carry,4,4,8
ftello(iterator->file) + (off_t)iterator->length == debug_target_offset,4,4,8
 pIn->nMem==1 ,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_DEPTH_LEN/8,4,4,8
key && a && n > 0 && hint >= 0 && hint < n,4,4,8
context->tag_stack != NULL,4,4,8
 pParse->pNewTrigger==0 ,4,4,8
!decoder_session->skip_specification->is_relative,4,4,8
src_stride > 2*MB_SIZE + 5,4,4,8
iccprof,4,4,8
point_num < object->data.seek_table.num_points,4,4,8
x > 0,4,4,8
 pA->pNext==0 || pA->v<=pA->pNext->v ,4,4,8
0 == encoder_session.until,4,4,8
pagestart_len < sizeof(pagestart)/sizeof(pagestart[0]),4,4,8
ref_my >= c->ymin,4,4,8
m >= n,4,4,8
s->codec_type == AVMEDIA_TYPE_VIDEO,4,4,8
 TK_GE==OP_Ge ,4,4,8
 p->nOp>0 ,4,4,8
HASTZINFO(self),4,4,8
infilesize >= 0,4,4,8
 pExpr->pRight==0 ,4,4,8
deque->leftblock == deque->rightblock,4,4,8
FLAC__format_seektable_is_legal(encoder->private_->seek_table),4,4,8
(((code_buffer) >> (code_bits - h->size[c])) & bmask[h->size[c]]) == h->code[c],4,4,8
 ((unixFile*)id)->isLockable==0 || offset>=PENDING_BYTE+512 || offset+amt<=PENDING_BYTE ,4,4,8
IOOOBJECT(self)->string_size >= 0,4,4,8
 pPg->flags&PGHDR_DIRTY ,4,4,8
lag > 0,4,4,8
mb_type>=0,4,4,8
mpi->flags&MP_IMGFLAG_PLANAR,4,4,8
offset == FF_ARRAY_ELEMS(coeff_token_vlc_tables),4,4,8
s->mv_type==MV_TYPE_8X8,4,4,8
from_buf_len - left_len >= from_buf_old_len,4,4,8
0 != to,4,4,8
dst - pkt->data == total_length,4,4,8
num_tracks > 0,4,4,8
 pcacheCheckSynced(p) ,4,4,8
 pPage->intKey ,4,4,8
s->tx[plane] > 23 || a == ((line_h1 >> (4 + s->tx[plane])) & 0x010),4,4,8
(dtime->minute>>4) < 0x7 && (dtime->minute&0xf) < 0xa,4,4,8
s == c->avctx,4,4,8
 pTriggerStack->pTab ,4,4,8
!ref_index,4,4,8
line[0]=='0',4,4,8
"charset_wctomb(charset, s, 128) == 1 && !strcmp(s, ""\200."")",4,4,8
a->direction_change == 0,4,4,8
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_COLORS_LEN/8,4,4,8
 jumpIfNull==SQLITE_JUMPIFNULL || jumpIfNull==0 ,4,4,8
 op==SAVEPOINT_RELEASE || op==SAVEPOINT_ROLLBACK ,4,4,8
skip<=LONG_MAX,4,4,8
 sqlite3_mutex_held(p->pSrc->pBt->mutex) ,4,4,8
 pMem->z!=0 ,4,4,8
 obj.prop == 1000 ,4,4,8
PyDict_Check(dict),4,4,8
 pOp->p4.z!=0 ,4,4,8
 pIn3->flags & MEM_Int ,4,4,8
(vm->state).domain == VTSM_DOMAIN || (vm->state).domain == VTS_DOMAIN,4,4,8
line[15]=='0',4,4,8
q->bitrate == I_F_Q,4,4,8
!(url_ftell(s->pb) & (KAG_SIZE-1)),4,4,8
nsf->load_addr + nsf->length <= 0x10000,4,4,8
sizeof(int) >= 4,4,4,8
comment_num < object->data.vorbis_comment.num_comments,4,4,8
bits <= 16,4,4,8
 pSelect==0 ,4,4,8
n > 0 && n <= MASK,4,4,8
n != OFFSET_UNKNOWN,4,4,8
lastInLumBuf + 1 - srcSliceY >= 0,4,4,8
offset1 != offset2,4,4,8
pCur,4,4,8
SQLITE_IOCAP_ATOMIC512==(512>>8),4,4,8
(vm->state).domain != VTS_DOMAIN,4,4,8
!sp->cinfo.comm.is_decompressor,4,4,8
(s->dquant&1)==0,4,4,8
 p->pBt->pPager!=0 ,4,4,8
 pPager->useJournal ,4,4,8
 (rc&db->errMask)==rc ,4,4,8
FLAC__STREAM_METADATA_CUESHEET_INDEX_OFFSET_LEN % 8 == 0,4,4,8
 TK_LE==OP_Le ,4,4,8
0 != seek_table,4,4,8
 apVal || n==0 ,4,4,8
iterator->current->data->type == FLAC__METADATA_TYPE_STREAMINFO,4,4,8
 mem.disallow==0 ,4,4,8
 pCur->apPage[pCur->iPage] ,4,4,8
isxdigit(line[19]),4,4,8
 p->locked==0 ,4,4,8
-1 <= lastofs && lastofs < ofs && ofs <= n,4,4,8
v <= 1,4,4,8
arglen >= 0,4,4,8
need >= 0,4,4,8
wformat==NULL && wfunc == NULL,4,4,8
 pOpen->nLock>=0 ,4,4,8
self != NULL,4,4,8
part_width == 1 || part_width == 2 || part_width == 4,4,4,8
0 != chain->filename,4,4,8
sx>=0 && sy>=0 && sx < score_stride,4,4,8
fifo->tail <= fifo->size,4,4,8
n == OFFSET_AWARE,4,4,8
deque->leftindex == deque->rightindex+1,4,4,8
 p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed ,4,4,8
 pParse->pNewTable==0 ,4,4,8
0 != iterator->chain,4,4,8
i == blocksize+OVERREAD_,4,4,8
PyList_GET_SIZE(pieces) > 0,4,4,8
default_partition_samples > predictor_order,4,4,8
num_bits == 0,4,4,8
 (pIn1->flags & MEM_Dyn)==0 ,4,4,8
lag <= data_len,4,4,8
oldpos >= 0,4,4,8
status >= 0,4,4,8
 pFrom->pTab==0 ,4,4,8
0 != iterator->chain->head,4,4,8
line[7]=='\t',4,4,8
 pToken->dyn==0 ,4,4,8
 pLeft!=0 ,4,4,8
c >= 0 && c < 19,4,4,8
 pTab->pSelect==0 ,4,4,8
0 != field_value,4,4,8
c->uvstride == uvstride,4,4,8
 pOp->p4type==P4_VTAB ,4,4,8
file->buffer != NULL,4,4,8
 pPage->nCell==0 ,4,4,8
entry == out->num_entries,4,4,8
enc_buf->length > 0,4,4,8
 nArg==2+v->nColumn+2,4,4,8
w == h,4,4,8
c->chrDstH <= dstH,4,4,8
PyList_Check(seq),4,4,8
m_groupTransform.size(),4,4,8
 n<=pReader->nData ,4,4,8
g_date_valid (d),4,4,8
 pLeft->iType==pRight->iType ,4,4,8
0 != value,4,4,8
 pPage->pBt ,4,4,8
object->data.vorbis_comment.num_comments > 0,4,4,8
 pageInJournal(pPg) || pPg->pgno>pPager->dbOrigSize ,4,4,8
ms,4,4,8
n <= FLAC__MAX_BLOCK_SIZE,4,4,8
 (mem3.aPool[i-1].u.hdr.size4x & 1)==0 ,4,4,8
 TK_LT==OP_Lt ,4,4,8
parameter < 32,4,4,8
text.size(),4,4,8
status != G_IO_STATUS_NORMAL,4,4,8
p > PyString_AS_STRING(str),4,4,8
!(s->avctx->flags & CODEC_FLAG_EMU_EDGE),4,4,8
 p->pOrderBy==0 ,4,4,8
ascii_len >= 0,4,4,8
 (pageSize & 7)==0 ,4,4,8
line >= 0 && line < buf->line_count,4,4,8
it != NULL,4,4,8
 p->addrOpenEphm[0] == -1 ,4,4,8
 precision>0 ,4,4,8
n <= FF_KBD_WINDOW_MAX,4,4,8
channel->encoded_read_buf,4,4,8
 pbegin<=pPage->pBt->usableSize-4 ,4,4,8
 p->nOp>0 || p->aOp==0 ,4,4,8
 pArray->aBtree[i]!=pBtree ,4,4,8
lumBufIndex < 2 * vLumBufSize,4,4,8
block,4,4,8
context->owner_count == 0,4,4,8
FLAC__bitwriter_is_byte_aligned(bw),4,4,8
na > 0 && nb > 1,4,4,8
out_n == 2 || out_n == 4,4,4,8
&sp->dec_codetab[0] <= free_entp && free_entp < &sp->dec_codetab[CSIZE],4,4,8
 sizeof(u32)==4 ,4,4,8
conn,4,4,8
wsign != 0,4,4,8
 rc==SQLITE_NOMEM ,4,4,8
accumbits < SHIFT,4,4,8
line[1]=='x',4,4,8
scale >= 0 && scale <= 3,4,4,8
t > 23 || (a == p) == !(((line_h1 >> t) ^ line_h1) & 0x100),4,4,8
0 != error_message,4,4,8
block_w==8,4,4,8
isxdigit(line[4]),4,4,8
 pBt->pageSize>=512 && pBt->pageSize<=32768 ,4,4,8
mb_type & MB_TYPE_L0L1,4,4,8
pdigit - z->ob_digit <= n,4,4,8
sizeof(s->block_state) >= 256,4,4,8
" !ExprHasProperty(pF->pExpr, EP_xIsSelect) ",4,4,8
PyFloat_Check(v),4,4,8
data_len > 0 || total_error_2 == 0,4,4,8
ndigits == 0 || v->ob_digit[ndigits - 1] != 0,4,4,8
month <= 12,4,4,8
coeff_count > 0,4,4,8
 pPage->nOverflow==0 || rc!=SQLITE_OK ,4,4,8
"PyObject *self, PyObject *args",4,4,8
picture_number < rcc->num_entries,4,4,8
s->out_format != FMT_MJPEG || s->qscale == 8,4,4,8
 p && p->pFunc ,4,4,8
FLAC__STREAM_METADATA_CUESHEET_TRACK_NUMBER_LEN % 8 == 0,4,4,8
data_len > 0 || total_error_4 == 0,4,4,8
pos <= m_bufferSize,4,3,7
hash_verify(hash),7,0,7
size < m_bufferSize - m_bufferPos,4,3,7
m_refs >= 0,4,3,7
m_cursorPos + size <= m_bufferPos,4,3,7
sslctx,3,3,6
ssize > 0 && !(ssize % ISO_BLOCKSIZE),3,3,6
n < 1024,3,3,6
start_x < end_x && block_w,3,3,6
w->j_ac_vlc[mode],3,3,6
(((int)blk) & 15) == 0,3,3,6
lsn == 0?,3,3,6
bx >= xmin*2 && bx <= xmax*2 && by >= ymin*2 && by <= ymax*2,3,3,6
av_i2int(ai) == a,3,3,6
bpp || !pred,3,3,6
n>0 && n<=25,3,3,6
b >=0,3,3,6
16*cx2 - 4*cx + 32*c == 32*l,3,3,6
"av_i2int(av_shr_i(ai, 9)) == a>>9",3,3,6
volume_id != NULL,3,3,6
column,3,3,6
s->umvplus == 0,3,3,6
cbp>0,3,3,6
!ref->long_ref,3,3,6
start_y < end_y && block_h,3,3,6
(!k && !ibl) || (k == (size_t)(-1) && errno == E2BIG && ibl && obl < 6) || (k == (size_t)(-1) && (errno == EILSEQ || errno == EINVAL) && ibl),3,3,6
extent > 17,3,3,6
s->quarter_sample==0,3,3,6
nut->last_syncpoint_pos == *pos_arg,3,3,6
range <= 16 || !s->msmpeg4_version,3,3,6
"sint32, sizeof(Sint32) == 4",3,3,6
nut->header_len[0] == 0,3,3,6
(put_bits_count(s) & 7) == 0,3,3,6
"strchr (dirname, LT_DIRSEP_CHAR) == 0",3,3,6
sizeof(buf) >= sizeof (iso9660_svd_t),3,3,6
(fx>>1) + 16*s->mb_x <= s->width,3,3,6
last_exp-10 >= 0 && last_exp-10 < 32,3,3,6
(int64_t)st2->time_base.num*ast2->rate == (int64_t)st2->time_base.den*ast2->scale,3,3,6
j == 129,3,3,6
pics <= MAX_DELAYED_PIC_COUNT,3,3,6
padsize >= 0,3,3,6
h264_data != NULL,3,3,6
code > 0 && code <= 16,3,3,6
16*cx2 + 4*cx + 32*c == 32*r,3,3,6
pred_x >= -32 && pred_x <= 31,3,3,6
s->mv_type == MV_TYPE_FIELD,3,3,6
ist->decoding_needed,3,3,6
buffer_count == 1 + (qm_size > 0) + 2,3,3,6
!obl,3,3,6
N % 8 == 0,3,3,6
c->low == 0,3,3,6
from_721 (ipt2->parent) <= parent,3,3,6
w<(1<<6),3,3,6
mmco[i].long_arg <= 16,3,3,6
h264_data->cookie == MAGIC_COOKIE,3,3,6
run2>=0 || i >= last_non_zero ,3,3,6
2*b_w==b_h,3,3,6
ost->audio_resample,3,3,6
size == 1 || size == 4,3,3,6
"codestart, &temp_options, FALSE",3,3,6
name == NULL,3,3,6
dirname,3,3,6
tt <= vm->vmgi->tt_srpt->nr_of_srpts,3,3,6
q[m] >= 0 && q[m] < steps,3,3,6
s->last_picture[0].data[0],3,3,6
!ec,6,0,6
s->current_picture.data[0],3,3,6
cb->ndimentions >= 2,3,3,6
pmin >= 0 && pmin <= MAX_PARTITION_ORDER,3,3,6
16*cxy + 16*cy2 + 16*cx2 - 4*cy - 4*cx + 32*c == 32*tl,3,3,6
s->qscale>=1 && s->qscale <=12,3,3,6
i < MAX_PICTURE_COUNT,3,3,6
coeff_count[i],3,3,6
fragmented < 4,3,3,6
"av_i2int(av_shr_i(ai, 17)) == a>>17",3,3,6
sizeof (buf) == 12,3,3,6
s->alt_inter_vlc == 0,3,3,6
pos >= 0,3,3,6
!ctx->vlc_codes[index],3,3,6
 !CUR.face->unpatented_hinting ,3,3,6
!*next_point,3,3,6
a->planar,3,3,6
sizeof(buf) >= sizeof (iso9660_pvd_t),3,3,6
pc->last_index + next >= 0 ,3,3,6
s->picture_structure == PICT_FRAME,3,3,6
best_count >= 0 && best_count < 7,3,3,6
nut->next_startcode == SYNCPOINT_STARTCODE,3,3,6
pmax >= 0 && pmax <= MAX_PARTITION_ORDER,3,3,6
mbsinit (&iter->state),3,3,6
 ( face->len_buildchar == 0 ) == ( face->buildchar == NULL ) ,3,3,6
s->mb_width>0,3,3,6
dirnam[LT_STRLEN(dirnam) -1] != '/',3,3,6
n <= syncpoint_count + 1,3,3,6
get_bits_left(gb) == get_bits_left(orig_gb),3,3,6
_cdio_list_length (p_list) > 0,3,3,6
range1 > 0,3,3,6
ref->reference,3,3,6
pic->type == FF_BUFFER_TYPE_INTERNAL,3,3,6
cb->lookup,3,3,6
flags == 0,3,3,6
offset+length < dsize,3,3,6
i<=range,3,3,6
(bx>>1) + 16*s->mb_x >= -16,3,3,6
best_vector_mean != -999,3,3,6
entries && short_options,3,3,6
h->mtype > 1,3,3,6
av_log2_i(ai) == av_log2(a),3,3,6
expr,3,3,6
field->binary.length == 0 || field->binary.data,3,3,6
s->repeat_first_field == 0,3,3,6
rc->type == 0 || rc->type == 2,3,3,6
sid >= 0,3,3,6
"av_i2int(av_div_i(ai,bi)) == a/b",3,3,6
"sint8, sizeof(Sint8) == 1",3,3,6
frac_pos >= 0 && frac_pos < precision,3,3,6
h->long_ref[i]->long_ref == 1,3,3,6
path != (char *) NULL,3,3,6
p_dirac_params->p_encoder->enc_buf.size > 0,3,3,6
color < 4,3,3,6
nb_codes <= 256,3,3,6
mode<3,3,3,6
FFABS(scale) < MAX_ABS,3,3,6
name && *name,3,3,6
avctx->header_bits + avctx->mv_bits + avctx->misc_bits + avctx->i_tex_bits + avctx->p_tex_bits == put_bits_count(&s->pb),3,3,6
i < 16,3,3,6
offset + asf_st->ds_chunk_size <= asf_st->pkt.size,3,3,6
s->mb_skip_run == 0,3,3,6
sizeof(iso9660_pvd_t) == ISO_BLOCKSIZE,3,3,6
code >= 0 && code <= 6,3,3,6
level <= 127,3,3,6
s->last_picture_ptr == NULL || s->out_format != FMT_H264 || s->codec_id == CODEC_ID_SVQ3,3,3,6
head >= 0 && head < LZW_HASH_SIZE,3,3,6
application_id != NULL,3,3,6
cb->lens[entry],3,3,6
dlname,3,3,6
nus->last_pts != AV_NOPTS_VALUE,3,3,6
_entries[idx].track == _entries[idx + 1].track,3,3,6
filter < 2,3,3,6
rm->audio_pkt_cnt > 0,3,3,6
strlen(filename) <= MAX_ISOPATHNAME,3,3,6
sizeof(iso9660_dir_t) == 33,3,3,6
dir,3,3,6
pred_y >= -32 && pred_y <= 31,3,3,6
block[j],3,3,6
ppath,3,3,6
*iter->cur.ptr == '\0',3,3,6
s->quarter_sample,3,3,6
best_vector[i] >= 0 && best_vector[i] < 16,3,3,6
frame && frame->refcount > 0,3,3,6
h==4,3,3,6
level,3,3,6
w<=4,3,3,6
field_select==0 || field_select==1,3,3,6
mb_y < s->mb_height,3,3,6
(fy>>1) + 16*s->mb_y >= -16,3,3,6
filenamesize > lendir,3,3,6
run < 63,3,3,6
lsn == -150,3,3,6
s->current_picture.f.pict_type == s->current_picture_ptr->f.pict_type,3,3,6
str_array != NULL,3,3,6
psize > 0 && !(psize % ISO_BLOCKSIZE),3,3,6
h->slice_type_nos == FF_B_TYPE,3,3,6
_entries[idx].track != _entries[idx + 1].track,3,3,6
v >= -m,3,3,6
ctx->cfg->ConfigBitstreamRaw == 1 || ctx->cfg->ConfigBitstreamRaw == 2,3,3,6
(((int)vs_bit_buffer) & 7) == 0,3,3,6
 sizeof (_etnf_array_t) == 20 ,3,3,6
ret <= 0,3,3,6
(score < 100*lambda && score > -100*lambda) || lambda==0,3,3,6
sizeof(ipd.root_directory_record) == 33,3,3,6
"uint64, sizeof(Uint64) == 8",3,3,6
s->linesize == c->stride,3,3,6
vbv_delay < 0xFFFF,3,3,6
s->no_rounding==1,3,3,6
best_mean >= -256 && best_mean < 256,3,3,6
s->loop_filter==1,3,3,6
(y) <= ymax,3,3,6
_len % blocksize == 0,3,3,6
!(psize % book->ndimentions),3,3,6
mode<4,3,3,6
samplerate > 0,3,3,6
enc_buf->length <= buf_size,3,3,6
book->dimentions,3,3,6
buf.index < s->buffers,3,3,6
b->mb[b->next[k]],3,3,6
!data || length > 0,3,3,6
stream_index == 0,3,3,6
(bx>>1) + 16*s->mb_x <= s->width,3,3,6
pfile,3,3,6
asf->packet_size_left < FRAME_HEADER_SIZE || asf->packet_segments < 1,3,3,6
index < m_CurSize,6,0,6
"IS_INTRA(mb_type) || USES_LIST(mb_type,0) || USES_LIST(mb_type,1)",3,3,6
canonical && *canonical,3,3,6
 UINT32_FROM_BE(chunk->len) % sizeof(_etnf_array_t) == 0 ,3,3,6
mx >= -32 && mx <= 31,3,3,6
!alevel || j < 257,3,3,6
c->srcFormat == PIX_FMT_BGR4_BYTE,3,3,6
!before,3,3,6
val < 32 && val >0 && repeat<256 && repeat>0,3,3,6
ffm->packet_end >= ffm->packet,3,3,6
idx + 1 <= asf_st->pkt.size / asf_st->ds_chunk_size,3,3,6
dp,3,3,6
window_sequence != EIGHT_SHORT_SEQUENCE,3,3,6
avi->frames_hdr_all,3,3,6
"sint16, sizeof(Sint16) == 2",3,3,6
n >= 0 && n <= 31,3,3,6
p_list->begin != p_list->end,3,3,6
ec,6,0,6
backup_s.dquant == 0,3,3,6
16*cy2 + 4*cy + 32*c == 32*b,3,3,6
s->modified_quant==1,3,3,6
cmp_func != 0,3,3,6
(s->header_bits&7)==0,3,3,6
phandle,3,3,6
FFABS(level)==1,3,3,6
hol,3,3,6
index < file->ntags,3,3,6
mode != NULL,3,3,6
bx >= xmin*4 && bx <= xmax*4 && by >= ymin*4 && by <= ymax*4,3,3,6
!(ref && !ref->reference),3,3,6
!(val & 0x80000000),3,3,6
ppath && *ppath,3,3,6
from_722 (ipt2->parent) <= parent,3,3,6
"av_i2int(av_sub_i(ai,bi)) == a-b",3,3,6
offset + length <= dsize,3,3,6
lock,3,3,6
*phandle,3,3,6
"uint8, sizeof(Uint8) == 1",3,3,6
w->raw_orient < 12 ,3,3,6
field && encoding,3,3,6
best_ast->remaining <= best_ast->packet_size,3,3,6
s->width > 0 && s->height > 0,3,3,6
field_select_tables[block][xy]==0 || field_select_tables[block][xy]==1,3,3,6
port >= 0,3,3,6
range1 < c->range,3,3,6
"uint16, sizeof(Uint16) == 2",3,3,6
 UINT32_FROM_BE (chunk->len) % sizeof(_cuex_array_t) == 0 ,3,3,6
arg <= 0x3fff,3,3,6
w->orient<12,3,3,6
b_w>1 && b_h>1,3,3,6
(7&(int)(&temp_block[0])) == 0,3,3,6
index >= 0 && index < FF_ARRAY_ELEMS(ff_sine_windows),3,3,6
lp_half_order <= MAX_LP_HALF_ORDER,3,3,6
c > 0,3,3,6
(s->mb_y&1) == (s->picture_structure == PICT_BOTTOM_FIELD),3,3,6
"offsetof(DXVA_Slice_H264_Short, BSNALunitDataLocation) == offsetof(DXVA_Slice_H264_Long, BSNALunitDataLocation)",3,3,6
(y) >= ymin,3,3,6
tag_len < 0x3f,3,3,6
count <= s->thread_count,3,3,6
pdir,3,3,6
c->range >= 0x100,3,3,6
_str != NULL,3,3,6
num < (1ULL<<56)-1,3,3,6
bps,3,3,6
s->bit_left == 32,3,3,6
pmin <= pmax,3,3,6
 name ,3,3,6
!data || length == 128,3,3,6
entry != (DIR *) NULL,3,3,6
get_bits_count(gb) == 0,3,3,6
(k != (size_t)(-1) && !ibl) || (k == (size_t)(-1) && errno == E2BIG && ibl) || (k == (size_t)(-1) && errno == EILSEQ && ibl),3,3,6
(((int)mb_bit_buffer) & 7) == 0,3,3,6
b->prev[a2] == k && (a2 + 1 >= 4 || b->prev[a2+1] != k),3,3,6
(avctx->sub_id == 1) == (avctx->codec_id == CODEC_ID_MPEG1VIDEO),3,3,6
"av_i2int(av_add_i(ai,bi)) == a+b",3,3,6
 bundle != NULL ,3,3,6
!s->frame_pred_frame_dct && s->mv_type == MV_TYPE_FIELD,3,3,6
s->bitstream_buffer_size==0,3,3,6
"strlen (pathname) < (sizeof (tmpbuf) - sizeof ("";65535""))",3,3,6
*ppath <= before,3,3,6
*phandle == 0,3,3,6
f->plane[j].quant_table_index == f->avctx->context_model,3,3,6
(by>>1) + 16*s->mb_y >= -16,3,3,6
dsize > 0 && !(dsize % ISO_BLOCKSIZE),3,3,6
 sizeof (_cuex_array_t) == 8 ,3,3,6
s->time>=0,3,3,6
entry >= 0,3,3,6
"av_i2int(av_shr_i(ai,-17)) == a<<17",3,3,6
s->f_code == 1,3,3,6
stream_index>= 0,3,3,6
(x) >= xmin,3,3,6
left_xy[0] == left_xy[1],3,3,6
ptr,3,3,6
table,3,3,6
j < MAX_LENGTH,3,3,6
"av_i2int(av_mul_i(ai,bi)) == a*b",3,3,6
(by>>1) + 16*s->mb_y <= s->height,3,3,6
frame->nfields == 2,3,3,6
(tab_index>=0 && tab_index<4) || b_w==32,3,3,6
acc>=0,3,3,6
640 + offset + 4 <= ctx->cid_table->coding_unit_size,3,3,6
(fx>>1) + 16*s->mb_x >= -16,3,3,6
(size&7) == 0,3,3,6
mean > -300 && mean < 300,3,3,6
num_entries <= SIZE_MAX / sizeof (struct hol_entry),3,3,6
offset == dsize,3,3,6
s->flipflop_rounding==0,3,3,6
h->long_ref_count==0,3,3,6
!s->frame_pred_frame_dct,3,3,6
dx<16 && dy<16,3,3,6
size==1 || size==2 || size==4,3,3,6
diagnostic,3,3,6
count < entrynum,3,3,6
bytes <= 8,3,3,6
(s->frame_bits & 7) == 0,3,3,6
bm_s,3,3,6
entry < cb->nentries,3,3,6
frame_code != -1,3,3,6
l > 0,3,3,6
s->current_picture.f.pict_type == s->pict_type,3,3,6
script,3,3,6
e >= 1,3,3,6
s->max_blocksize,3,3,6
_start * blocksize == _start2,3,3,6
p <= end,3,3,6
"enum, sizeof(SDL_DUMMY_ENUM) == sizeof(int)",3,3,6
avctx->width && avctx->height,3,3,6
hol->entries && hol->short_options,3,3,6
*state,3,3,6
real_ch == 2,3,3,6
func != 0,3,3,6
2*VOFW == VOF,3,3,6
avist->frames_hdr_strm,3,3,6
len >= sizeof (iso9660_dir_t),3,3,6
base_name && *base_name,3,3,6
IS_INTER(mb_type),3,3,6
!buckets[j][0],3,3,6
stream_index < s->nb_streams,3,3,6
sizeof (_etn2_array_t) == 32,3,3,6
"sint64, sizeof(Sint64) == 8",3,3,6
FFABS(new_level)==1,3,3,6
"offsetof(DXVA_Slice_H264_Short, SliceBytesInBuffer) == offsetof(DXVA_Slice_H264_Long, SliceBytesInBuffer)",3,3,6
dv_vlc.table_size == 1184,3,3,6
*padding >= 0,3,3,6
symbols_size <= 2 || !symbols,3,3,6
code >= 0 && code < 120,3,3,6
b->parent==NULL || b->parent->stride == b->stride*2,3,3,6
-512<b && b<512,3,3,6
l != csub,3,3,6
h->slice_type_nos == FF_P_TYPE,3,3,6
i >= 0 && i < h->short_ref_count,3,3,6
!(ctx->slice_size[i] & 3),3,3,6
!s->mb_skipped,3,3,6
hol->num_entries <= SIZE_MAX / sizeof (struct hol_entry),3,3,6
"scode, options, op == OP_ASSERT",3,3,6
m != NULL,3,3,6
av_i2int(bi) == b,3,3,6
argc < 2,3,3,6
handle,3,3,6
dirnam && *dirnam,3,3,6
prev_node->next != NULL,3,3,6
dst != NULL,3,3,6
_xa != NULL,3,3,6
field && length,3,3,6
iter->cur.wc == 0,3,3,6
length <= 30,3,3,6
n <= 31 && value < (1U << n),3,3,6
(stride&(w-1))==0,3,3,6
s->flipflop_rounding,3,3,6
w>0,3,3,6
index >=0 && index <= 63,3,3,6
uint32_from_be (chunk->len) % sizeof (_etn2_array_t) == 0,3,3,6
get_bits_left(gb) == pos,3,3,6
! oalias (opts),3,3,6
my >= -32 && my <= 31,3,3,6
x >= c->xmin && hx <= c->xmax<<(qpel+1) && y >= c->ymin && hy <= c->ymax<<(qpel+1),3,3,6
i || ccp<8,3,3,6
p_list->begin == p_list->end,3,3,6
s->mb_x==0 && s->mb_y==s->mb_height,3,3,6
s->uvlinesize == c->uvstride,3,3,6
r == ref,3,3,6
(fy>>1) + 16*s->mb_y <= s->height,3,3,6
!ctx->coded_frame_list,3,3,6
!m_groupTransform.empty(),3,3,6
"av_gcd(a1.num, a1.den) <= 1U",3,3,6
 range >= 1 && range <= 3 ,3,3,6
 cdte_format == 0 || cdte_format == 1 ,3,3,6
pcanonical,3,3,6
code < s->coef_vlcs[tindex]->n,3,3,6
y,3,3,6
16*cy2 - 4*cy + 32*c == 32*t,3,3,6
b->next[prev] >= mb_area_start[a+1] || b->mb[prev],3,3,6
filename != NULL,3,3,6
ref->long_ref,3,3,6
sptr,3,3,6
last_level,3,3,6
size <= MAX_FRAMESIZE,3,3,6
p_node != NULL,3,3,6
"av_i2int(av_shr_i(ai,-9)) == a<<9",3,3,6
(k != (size_t)(-1) && !ibl) || (k == (size_t)(-1) && errno == EILSEQ && ibl),3,3,6
filter_size % 2 == 1,3,3,6
tag && tag->refcount > 0,3,3,6
codec->codec_id == CODEC_ID_H264,3,3,6
bytes >= needed_bytes,3,3,6
"uint32, sizeof(Uint32) == 4",3,3,6
?!,3,3,6
pathn[index] < FREEZE_INTERVAL * frontier,3,3,6
s->num_entries < TIFF_MAX_ENTRY,3,3,6
(index&0x7f) == index && (flag&0x01) == flag,3,3,6
level < 4 || best_count == 0,3,3,6
cmpf,3,3,6
(x) <= xmax,3,3,6
xmax <= 15 && ymax <= 15 && xmin >= -16 && ymin >= -16,3,3,6
entlist != NULL,3,3,6
before - *ppath <= strlen (*ppath),3,3,6
a2 < 4,3,3,6
hash_isempty(plugin->context->symbol_providers),3,2,5
list_isempty(plugin->imported),3,2,5
plugin->processed == 0,3,2,5
plugin->state == CP_PLUGIN_ACTIVE,3,2,5
import != NULL,3,2,5
plugin->state < CP_PLUGIN_ACTIVE,3,2,5
plugin->runtime_lib == NULL,3,2,5
(num & 1) == 0,3,2,5
hash_isempty(plugin->context->resolved_symbols),3,2,5
ce != NULL,3,2,5
hash_val_t_bit != 0,5,0,5
node != NULL,3,2,5
cpi_is_context_locked(context),5,0,5
list_isempty(plugin->importing),3,2,5
"!strcmp(name, ""extension"")",3,2,5
list_isempty(importing),3,2,5
context->attr_values == NULL || context->attr_values[0] == NULL,2,2,4
put_bits_ptr(&s->pb) == s->ptr_lastgob,2,2,4
0 != encoder->private_->seek_callback,2,2,4
"offset < offsetof(PyHeapTypeObject, as_buffer)",2,2,4
 (pMem->flags & MEM_Int)!=0 ,2,2,4
!pool->count,2,2,4
(vm->state).pgc->prev_pgc_nr != 0,2,2,4
target != NULL,2,2,4
"charset_wctomb(charset, s, 0x7ff) == 2 && !strcmp(s, ""\337\277....."")",2,2,4
"charset_mbtowc(charset, &wc, ""\370\210\200\200\200"", 9) == 5 && wc == 1 << 21",2,2,4
!(FLAC__bitreader_get_input_bits_unconsumed(decoder->private_->input) & 7),2,2,4
 p1<p->nCursor ,2,2,4
 p->pEList && pPrior->pEList ,2,2,4
FLAC__STREAM_METADATA_VORBIS_COMMENT_NUM_COMMENTS_LEN == 32,2,2,4
 (p->flags&MEM_RowSet)==0 ,2,2,4
targ_bits[0] + targ_bits[1] <= MAX_BITS_PER_GRANULE,2,2,4
 pParent->pOrderBy==0 ,2,2,4
PyFloat_CheckExact(tmp),2,2,4
 (p->btreeMask & (1<<pOp->p2))!=0 ,2,2,4
DI4Y == days_before_year(4+1),2,2,4
rc==SQLITE_OK || pMem->enc!=desiredEnc,2,2,4
 p->pEntry==0 ,2,2,4
codec->flags & CODEC_FLAG_EMU_EDGE,2,2,4
"charset_wctomb(charset, s, 128) == -1",2,2,4
st->cur_len == 0,2,2,4
 p->pOrderBy!=0 ,2,2,4
"g_utf8_validate (string->str, -1, NULL)",2,2,4
 pFile->locktype==0 ,2,2,4
 sqlite3GlobalConfig.bMemstat || mem.mutex!=0 ,2,2,4
!(filldata & (~0x3f)),2,2,4
arg != NULL,2,2,4
 ppStmt!=0 ,2,2,4
 pTab->nPendingData<0 ,2,2,4
 f2&MEM_Int ,2,2,4
s->bie_len >= 20,2,2,4
 id-2 >= 0 ,2,2,4
argc == __argc,2,2,4
k >= 0 && k < base,2,2,4
cp != NULL,2,2,4
 pPager->state==PAGER_SYNCED || MEMDB || !pPager->dbModified ,2,2,4
value || OPTIONAL_ARG (entry) || NO_ARG (entry),2,2,4
 p->iLimit==0 ,2,2,4
textprop.nitems == 0,2,2,4
bx >= xmin*2 || bx <= xmax*2 || by >= ymin*2 || by <= ymax*2,2,2,4
bs->buf_bit_idx < MAX_LENGTH,2,2,4
colName,2,2,4
xmody && ((y ^ xmody) >= 0),2,2,4
 db->mallocFailed || !pOffset || pLimit ,2,2,4
 p2<nField ,2,2,4
 testAddr>0 || pParse->db->mallocFailed ,2,2,4
pass->lyrno == lyrno,2,2,4
rc==SQLITE_NOMEM || pMem->enc==desiredEnc,2,2,4
 pEList!=0 && pExpr->iColumn<pEList->nExpr ,2,2,4
incmptfmts,2,2,4
page->header_len != 0,2,2,4
 mem.pFirst==pHdr ,2,2,4
arg < len_consts,2,2,4
utf8 == NULL,2,2,4
 compatible[RTREE_GT & 7]==2 ,2,2,4
bits_in_accum < SHIFT,2,2,4
bufsize > JAS_STREAM_MAXPUTBACK,2,2,4
p > q,2,2,4
 *pi==i ,2,2,4
absstepsize >= 0,2,2,4
pArg->z < p->z,2,2,4
 info.nKey==nKey ,2,2,4
"PyObject_TypeCheck(d, &PyWrapperDescr_Type)",2,2,4
carry == -1,2,2,4
 iOfst+iAmt<=p->endpoint.iOffset ,2,2,4
 op!=TK_GT || c==WO_GT ,2,2,4
GET_TD_SECONDS(self) >= 0,2,2,4
 argc==1 || p==0 || p->n>0x7fffffff || p->n==sqlite3_aggregate_count(context) ,2,2,4
0 != position,2,2,4
size()*sizeof(CT) < 0xffffffffUL - sizeof(SSSHDR),2,2,4
PyType_Check(tmp),2,2,4
rlvl->numprcs,2,2,4
 sqlite3PagerGetData(pPage->pDbPage)==pPage->aData ,2,2,4
i>=0 && i<ap->ob_size,2,2,4
s->chapters[i]->start <= s->chapters[i+1]->start,2,2,4
parameter < 8*sizeof(bwword)-1,2,2,4
context < p->context_count,2,2,4
 p>mem3.aPool && p<&mem3.aPool[mem3.nPool] ,2,2,4
 EIGHT_BYTE_ALIGNMENT(journalFileSize) ,2,2,4
 (pTerm->wtFlags & TERM_CODED)==0 ,2,2,4
 pC->pCursor!=0 || pC->pseudoTable ,2,2,4
(op->_ob_prev == NULL) == (op->_ob_next == NULL),2,2,4
 strlen((char*)pFile->lockingContext)<=MAXPATHLEN ,2,2,4
 action==OE_Restrict ,2,2,4
 pWriter->nTermDistinct>0 ,2,2,4
tok->decoding_buffer == NULL,2,2,4
pt.num_ints < 4,2,2,4
p->iSize<=p->nBuf,2,2,4
 (MEM_Blob>>3) == MEM_Str ,2,2,4
"curoff == JAS_CAST(long, tagtabent->off)",2,2,4
 sizeof(zMagicHeader)==16 ,2,2,4
maxcmpts >= hdr->numcmpts,2,2,4
pgcN,2,2,4
s->start_time != AV_NOPTS_VALUE,2,2,4
h + nops == codelen,2,2,4
 pPage->pExtra==(void *)&pPage[1] ,2,2,4
 pMem->flags & MEM_Real ,2,2,4
"charset_wctomb(charset, s, 255) == -1",2,2,4
 pPage==p->pDirtyTail ,2,2,4
 *pPgno==iTrunk ,2,2,4
seq != NULL,2,2,4
 pInt[nReserve/sizeof(int)]==(int)REARGUARD ,2,2,4
"charset_wctomb(charset, s, 0x10000) == 4 && !strcmp(s, ""\360\220\200\200..."")",2,2,4
0 == options->args.arguments || options->args.num_arguments > 0,2,2,4
 pFunc->nArg==-1 || (pFunc->nArg&0xff)==pFunc->nArg ,2,2,4
filterSize % 4 == 0 && filterSize>0,2,2,4
n < 0x80,2,2,4
leaf->known_ && i == leaf->value_ + 1,2,2,4
 !(nJRec==0 && pPager->journalHdr+JOURNAL_HDR_SZ(pPager)!=pPager->journalOff && ((szJ - pPager->journalOff) / JOURNAL_PG_SZ(pPager))>0 && pagerNextJournalPageIsValid(pPager)) ,2,2,4
 (i64)nDestTruncate*(i64)nDestPagesize >= iSize || ( nDestTruncate==(int)(PENDING_BYTE_PAGE(p->pDest->pBt)-1) && iSize>=PENDING_BYTE && iSize<=PENDING_BYTE+nDestPagesize ),2,2,4
bps >= 4 && bps <= FLAC__REFERENCE_CODEC_MAX_BITS_PER_SAMPLE,2,2,4
narenas == 0 && maxarenas == 0,2,2,4
sample_rate > 0,2,2,4
block->type == FLAC__METADATA_TYPE_STREAMINFO,2,2,4
(vm->state).pgN > 1,2,2,4
 p->contextStackTop>=0 ,2,2,4
 pPrior->pRightmost!=pPrior ,2,2,4
encoder_session.skip == 0,2,2,4
 pData->flags & (MEM_Blob|MEM_Str) ,2,2,4
 pNew==0 ,2,2,4
"charset_wctomb(charset, s, 128) == 2 && !strcmp(s, ""\302\200....."")",2,2,4
!picref->buf->refcount,2,2,4
 nAlloc>=pNew->nCol && nAlloc%8==0 && nAlloc-pNew->nCol<8 ,2,2,4
charset,2,2,4
self->mode != MODE_READ_EOF,2,2,4
 pExpr->flags&EP_xIsSelect ,2,2,4
 i<(int)sizeof(p->btreeMask)*8 ,2,2,4
errval != EBADF,2,2,4
buf->refcount>0,2,2,4
 pPage->nFree >= 2*nCell ,2,2,4
!(*ppStmt),2,2,4
pts != AV_NOPTS_VALUE,2,2,4
skip == 0 || 0 == decoder_session->cue_specification,2,2,4
"charset_mbtowc(charset, &wc, ""\302\200"", 1) == -1",2,2,4
p || db->mallocFailed,2,2,4
v <= max,2,2,4
 sParse.zErrMsg==0 ,2,2,4
 iNextStart<=iNextEnd ,2,2,4
 (&p[1])==pEnd || p[0].db==p[1].db ,2,2,4
rice_parameter_limit <= FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_ESCAPE_PARAMETER,2,2,4
 sqlite3PagerIswriteable(pChild->pDbPage) ,2,2,4
jas_stream_tell(cblk->stream) == startpass->start,2,2,4
mem_record,2,2,4
nArg==1 || nArg==2,2,2,4
 n==(db->nSavepoint + db->isTransactionSavepoint) ,2,2,4
(0 != src->entry && src->length > 0) || (0 == src->entry && src->length == 0),2,2,4
 db->pVdbe==p ,2,2,4
 j>=0 && j+n<=p->nVar ,2,2,4
 1==sqlite3BtreeIsInTrans(pTemp) ,2,2,4
 !MEMDB && !pPager->tempFile ,2,2,4
!useIndexOnly || j<pIdx->nColumn,2,2,4
i < (1 << VLC_BITS),2,2,4
index < size,2,2,4
 isOpen(pPager->jfd) || pPager->journalMode==PAGER_JOURNALMODE_OFF ,2,2,4
FLAC__MAX_BLOCK_SIZE <= 65535u,2,2,4
 allowedOp(op) ,2,2,4
 (int)(sqlite3Strlen30(z)+k+1)<=n ,2,2,4
source->context == context,2,2,4
page->body == 0,2,2,4
 p1>=0 && p1<db->nDb ,2,2,4
0 <= self->ob_size,2,2,4
isDelete && !isOpenDirectory,2,2,4
 op!=TK_ISNULL || c==WO_ISNULL ,2,2,4
queue->tail,2,2,4
 sqlite3_value_type(argv[0])==SQLITE_NULL ,2,2,4
 pE!=0 ,2,2,4
 !SAVEPOINT_BEGIN && SAVEPOINT_RELEASE==1 && SAVEPOINT_ROLLBACK==2 ,2,2,4
 pSrc && iFrom>=0 && iFrom<pSrc->nSrc ,2,2,4
length_len%8 == 0,2,2,4
!jas_image_cmprof(outimage),2,2,4
 MEM_Str==(MEM_Blob>>3) ,2,2,4
 2*STANDALONE_MIN<=LEAF_MAX ,2,2,4
 pIdx->autoIndex ,2,2,4
isDelete==0 || isCreate,2,2,4
 scratchAllocOut==1 ,2,2,4
count == from_buf_len - from_buf_old_len,2,2,4
 pOp->p3==0 || pOp->p1>0 ,2,2,4
 db==0 || p->pBlockingConnection!=db ,2,2,4
 pParent->pGroupBy==0 ,2,2,4
 WRITE_LOCK>READ_LOCK ,2,2,4
!(matrix->flags_ & JAS_MATRIX_REF),2,2,4
 isOpen(pPager->fd) || pPager->noSync ,2,2,4
 p->eType!=FTSQUERY_PHRASE ,2,2,4
 db->mallocFailed==0 ,2,2,4
 !sqlite3LruStatements.pLast->pLruNext ,2,2,4
vfsList,2,2,4
 eLock==READ_LOCK || pBt->inTransaction==TRANS_WRITE ,2,2,4
"n < days_in_month(*year, *month)",2,2,4
"charset_mbtowc(charset, &wc, ""\377\277\277\277\277\277"", 9) == -1",2,2,4
width && height,2,2,4
 pWriter->iType==DL_DOCIDS ,2,2,4
prc->numcblks > 0,2,2,4
slicelength <= PY_SIZE_MAX / sizeof(PyObject*),2,2,4
 pParse->nTab>iCur+i+1 ,2,2,4
plane <= 1,2,2,4
 pParse->disableColCache==0 ,2,2,4
context->cur_attr == -1,2,2,4
samples > 0,2,2,4
 0==pCur->pKey ,2,2,4
 pParent->pHaving==0 ,2,2,4
CHUNK_OF_SAMPLES>=588U,2,2,4
sizeof(x)==8,2,2,4
pList || pParse->db->mallocFailed ,2,2,4
 (rc==SQLITE_OK && pNode) || (pNode==0 && rc!=SQLITE_OK) ,2,2,4
decoder_session->skip_specification->value.samples <= decoder_session->until_specification->value.samples,2,2,4
 i>=0 && i<=pPage->nCell+pPage->nOverflow ,2,2,4
te->runlen == 64*(span>>6),2,2,4
stream->md_len + md_len - si.main_data_begin <= MAD_BUFFER_MDLEN,2,2,4
 TK_RSHIFT==OP_ShiftRight ,2,2,4
sizeof(buffer) >= length_len,2,2,4
bout,2,2,4
block->data.vorbis_comment.num_comments > 0,2,2,4
strlen(CHANNEL_MASK_TAG+1+2+16+1) <= sizeof(tag),2,2,4
0 <= size && size < rq->buflen,2,2,4
" !ExprHasProperty(pExpr, EP_xIsSelect) && pExpr->x.pList ",2,2,4
parameter < sizeof(unsigned)*8,2,2,4
 iIdxCur>=0 ,2,2,4
 pOp->p2>0 && pOp->p2+pOp->p3<=p->nMem+1 ,2,2,4
 pNew->nCell>0 || (nNew==1 && cntNew[0]==0) ,2,2,4
isCreate==0 || isReadWrite,2,2,4
size==0,2,2,4
 1 >= ((pMem->zMalloc && pMem->zMalloc==pMem->z) ? 1 : 0) + (((pMem->flags&MEM_Dyn)&&pMem->xDel) ? 1 : 0) + ((pMem->flags&MEM_Ephem) ? 1 : 0) + ((pMem->flags&MEM_Static) ? 1 : 0) ,2,2,4
page->body_len == 0,2,2,4
inst->ob_type == &PyInstance_Type,2,2,4
 iCur>=0 ,2,2,4
newIdx != -1 || oldIdx != -1,2,2,4
PyList_CheckExact(consts),2,2,4
 &((char*)&likeInfoAlt)[1] == (char*)&likeInfoAlt.matchOne ,2,2,4
encoder->private_->current_sample_number == blocksize+OVERREAD_,2,2,4
 pParse->ckBase>0 ,2,2,4
count_channel_mask_bits(mask) == channels,2,2,4
 i<MERGE_COUNT ,2,2,4
q[4] == FORBIDDENBYTE && q[5] == FORBIDDENBYTE && q[6] == FORBIDDENBYTE && q[7] == FORBIDDENBYTE,2,2,4
norig >= 0,2,2,4
 pVal->db==0 || sqlite3_mutex_held(pVal->db->mutex) ,2,2,4
(vm->state).pgcN == pgcN,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_HEIGHT_LEN%8,2,2,4
s0->current_picture_ptr,2,2,4
 zPattern==sqlite3_value_text(argv[1]) ,2,2,4
 TK_GE==TK_LE+2 ,2,2,4
 CURSOR_VALID < CURSOR_REQUIRESEEK ,2,2,4
 pOrderBy ,2,2,4
 cursorHoldsMutex(pCsr) ,2,2,4
 p->pNext==0 || p->pNext->pBt>p->pBt ,2,2,4
s->buf_ptr == s->buf_end,2,2,4
 p->rc!=SQLITE_ROW && p->rc!=SQLITE_DONE ,2,2,4
 pOp->p1 <= SQLITE_MAX_LENGTH ,2,2,4
 pPager->dbSize>=nPage ,2,2,4
(result == NULL) ^ (masterdict == NULL),2,2,4
JAS_STREAM_MAXPUTBACK >= JPG_MAGICLEN,2,2,4
 xleft1<=xright1 && (xleft1<xright1 || xleft2<=xright2) ,2,2,4
s->buffer != 0xff,2,2,4
page->header == 0,2,2,4
 pPage->pgno==pgno ,2,2,4
PyList_Check(mro),2,2,4
0 != streaminfo,2,2,4
gc_refs > 0 || gc_refs == GC_REACHABLE || gc_refs == GC_UNTRACKED,2,2,4
stream->ptr_ - stream->bufbase_ <= stream->bufsize_ + JAS_STREAM_MAXPUTBACK,2,2,4
 pLater->pNext==0 || pLater->pNext->pBt>pLater->pBt ,2,2,4
 sqlite3PagerIswriteable(pPage1->pDbPage) ,2,2,4
0 <= *us && *us < 1000000,2,2,4
 pOp->p4type==P4_FUNCDEF || pOp->p4type==P4_VDBEFUNC ,2,2,4
 cnt==db->activeVdbeCnt ,2,2,4
 iDoclistData>=n+nTerm ,2,2,4
"""free: attempted to free memory when no blocks available""",2,2,4
bw->bits,2,2,4
 iMeta==0 || iMeta==1 ,2,2,4
"charset_mbtowc(charset, &wc, ""\302\000"", 2) == -1",2,2,4
i < LINKCELLS,2,2,4
 pWriter->data.nData>iData+1+n+nStartingTerm ,2,2,4
 0==(*ppExpr) ,2,2,4
 pbegin>addr || pbegin==0 ,2,2,4
nPage>0,2,2,4
age,2,2,4
 u<=pKeyInfo->nField + 1 ,2,2,4
"charset_mbtowc(charset, &wc, ""\340\040\200"", 9) == -1",2,2,4
 db->nStatement==0 ,2,2,4
(long)j == jj,2,2,4
 TK_GE==TK_GT+3 ,2,2,4
0 <= c && c < 1 << s->bits,2,2,4
accumbits < 8,2,2,4
"IN ((size - footer_start), 0, 4096)",2,2,4
 db->activeVdbeCnt>0 || db->autoCommit==0 || db->nStatement==0 ,2,2,4
 pBt->isPending==0 || pBt->pWriter ,2,2,4
!s->packet_buffer,2,2,4
 p->l_whence==SEEK_SET ,2,2,4
 x<mem5.nBlock ,2,2,4
 pPager->pInJournal!=0 ,2,2,4
object->data.vorbis_comment.num_comments == 0,2,2,4
 p && p->pPrior ,2,2,4
(vm->state).cellN <= (vm->state).pgc->nr_of_cells,2,2,4
(vm->state).pgN == (vm->state).pgc->nr_of_programs + 1,2,2,4
 v || db->mallocFailed ,2,2,4
minused >= 0,2,2,4
value >= 0,2,2,4
PyUnicode_Check(tmp),2,2,4
Zreplacement != NULL,2,2,4
index==0 || ie[-1].timestamp < timestamp,2,2,4
 pCur->iPage<BTCURSOR_MAX_DEPTH ,2,2,4
inst->ob_refcnt > 0,2,2,4
start_x < end_x && block_w > 0,2,2,4
page->body_len != 0,2,2,4
!((stream->bufmode_ & JAS_STREAM_RDBUF) && (stream->bufmode_ & JAS_STREAM_WRBUF)),2,2,4
td->td_photometric == PHOTOMETRIC_LOGLUV,2,2,4
"charset_mbtowc(charset, 0, (char *)(-1), 0) == 0",2,2,4
 (pQuery->flags&MEM_Int)!=0 && pArgc->flags==MEM_Int ,2,2,4
cblk->flags,2,2,4
new_blocksize > 0,2,2,4
ipcm<4,2,2,4
best_idx >= 0,2,2,4
bitstream->cnt_ <= 0,2,2,4
pass && *pass,2,2,4
fbits <= 8388608,2,2,4
lo == hi,2,2,4
options->args.checks.num_major_ops == options->ops.num_operations,2,2,4
 -1-pOp->p2<p->nLabel ,2,2,4
v1.type != flag,2,2,4
map[(index+1)&(ME_MAP_SIZE-1)] == key,2,2,4
 i<pTab->nCol ,2,2,4
0 <= temp && temp < 24*3600,2,2,4
 TK_LE==TK_GT+1 ,2,2,4
h->slice_type_nos == AV_PICTURE_TYPE_P,2,2,4
 pExpr->op==TK_OR ,2,2,4
!plrAtEnd(pLeft) || !plrAtEnd(pRight),2,2,4
 pTerm->eOperator & (WO_EQ|WO_LT|WO_LE|WO_GT|WO_GE|WO_MATCH) ,2,2,4
 sizeof(x)==8 && sizeof(pMem->r)==8 ,2,2,4
cmptno >= 0 && cmptno < image->numcmpts_,2,2,4
*bytes >= FLAC__STREAM_SYNC_LENGTH,2,2,4
 !p || p->xCmp ,2,2,4
 pIdx->aSortOrder!=0 ,2,2,4
" SQLITE_OK==querySharedCacheTableLock(p, iTable, eLock) ",2,2,4
t->gilstate_counter == 0,2,2,4
"charset_mbtowc(charset, &wc, ""\302\200"", 3) == 2 && wc == 128",2,2,4
 pTab->iPKey<0 ,2,2,4
 rc2==SQLITE_OK ,2,2,4
p > 0,2,2,4
blockstack_top == 0,2,2,4
(unsigned int) (col-0x21) < 94,2,2,4
 isOpen(pPager->fd) || tempFile ,2,2,4
 pC->pseudoTable==0 ,2,2,4
track->num_indices == 0,2,2,4
self->ob_refcnt == 0,2,2,4
 pWriter->iLastChildBlock==iChildBlock ,2,2,4
do_independent && do_mid_side,2,2,4
 TK_CONCAT==OP_Concat ,2,2,4
num_instructions == 1,2,2,4
 info.nHeader==nHeader ,2,2,4
0 != specification,2,2,4
 zName!=0 ,2,2,4
 i==nReaders ,2,2,4
"charset_convert(""iso-8859-1"", ""iso-8859-1"", ""\000\200\377"", 3, &q, &n) == 0 && n == 3 && !memcmp(q, ""\000\200\377"", 3)",2,2,4
FLAC__STREAM_METADATA_PICTURE_DEPTH_LEN % 8 == 0,2,2,4
bp != NULL,2,2,4
 op!=0 ,2,2,4
 p->sharable==0 || p->locked==0 || p->wantToLock>0 ,2,2,4
s == end,2,2,4
"charset_convert(""iso-8859-1"", ""UTF-8"", ""\000\200\377"", 3, &q, &n) == 0 && n == 5 && !memcmp(q, ""\000\302\200\303\277"", 5)",2,2,4
 p1>0 && p1+n<=p->nMem+1 ,2,2,4
vrc7.ym3812,2,2,4
 p2->xUnlockNotify==p->xUnlockNotify || !seen ,2,2,4
 yymsp[-2].minor.yy145!=0 ,2,2,4
 pTable->pSelect ,2,2,4
 scratchAllocOut==0 ,2,2,4
 (sizeof(struct MemBlockHdr)&7) == 0 ,2,2,4
 pPage->intKey || nKey>=0 ,2,2,4
0 != cue_spec,2,2,4
BLOCKLEN >= 2,2,2,4
inbuf + inbytes_left == channel->read_buf->str + channel->read_buf->len,2,2,4
0 != iterator->current->data,2,2,4
bm_g && bm_o && bm_s,2,2,4
 eAuto>=0 && eAuto<=2 ,2,2,4
to_copy < size,2,2,4
flag,2,2,4
 pIn1<=&p->aMem[p->nMem] ,2,2,4
info->enctype == BMP_ENC_RGB,2,2,4
iterator->depth+1 < SIMPLE_ITERATOR_MAX_PUSH_DEPTH,2,2,4
 !(pDest->flags & MEM_Dyn) ,2,2,4
"c, n",2,2,4
model->numchildren < INT_MAX,2,2,4
!options.common.sector_align || options.bps == 16,2,2,4
result,2,2,4
 pzBuffer==0 || isReduced ,2,2,4
 WO_LT==SQLITE_INDEX_CONSTRAINT_LT ,2,2,4
borrow == 0,2,2,4
max_len >= 0,2,2,4
PyTuple_Check(seq),2,2,4
 pPrior->pOrderBy==0 ,2,2,4
codestr[n*3] == BUILD_TUPLE,2,2,4
 nArg==1 ,2,2,4
 pIn2->flags & MEM_Blob ,2,2,4
!data->req.newurl,2,2,4
 pRoot->pgno==pCur->pgnoRoot ,2,2,4
numleafsh > 0 && numleafsv > 0,2,2,4
 (m.flags & MEM_Term)!=0 || db->mallocFailed ,2,2,4
op != NULL,2,2,4
mro != NULL,2,2,4
 (rc & p->db->errMask)==rc ,2,2,4
 isSavepnt ,2,2,4
"! SIGNED_ADD_OVERFLOWED(new_hi, *hi, num_hi)",2,2,4
 objectsPerPage >= 16 ,2,2,4
(vm->state).domain == VTSM_DOMAIN,2,2,4
metadata->data.stream_info.channels > 0,2,2,4
 n+nTerm<=pReader->nData ,2,2,4
 op!=TK_LE || c==WO_LE ,2,2,4
 pMem->n + ((pMem->flags & MEM_Zero)?pMem->u.nZero:0) == sqlite3VdbeSerialTypeLen(serial_type) ,2,2,4
retries >= 0,2,2,4
 *length >= 0 && *length < 5 ,2,2,4
 pOp->p4type==P4_COLLSEQ || pOp->p4.pColl==0 ,2,2,4
 op!=TK_LT || c==WO_LT ,2,2,4
 pOp->p1>0 && pOp->p1<=p->nVar ,2,2,4
base->ob_size == 0,2,2,4
 (sqlite3BtreeFlags(pC->pCursor) & BTREE_INTKEY)!=0 ,2,2,4
 to_op==OP_ToBlob || aff!=SQLITE_AFF_NONE ,2,2,4
l < r,2,2,4
delta_t != 0.,2,2,4
 pPage->leaf==0 || pPage->leaf==1 ,2,2,4
pass->type == JPC_SEG_RAW,2,2,4
!((x) & (~0x1f)),2,2,4
sizeof(buffer) >= ID_LEN,2,2,4
 pBt->autoVacuum || iMeta==0 ,2,2,4
s->avctx->noise_reduction && s->encoding,2,2,4
self->ob_item != NULL || self->allocated == 0 || self->allocated == -1,2,2,4
 eType!=PTRMAP_FREEPAGE ,2,2,4
compparms->stepsizes,2,2,4
decoder,2,2,4
it->b->leftlink != NULL,2,2,4
!buf,2,2,4
 nOut<SQLITE_MAX_LENGTH ,2,2,4
pict->data[0] || !*data_size,2,2,4
!pCur->isIncrblobHandle,2,2,4
 sqlite3BtreeHoldsMutex(pBt) ,2,2,4
 db->init.busy==0 || saveSqlFlag==0 ,2,2,4
 pNew->pgno==pgnoNew[i] ,2,2,4
decoder_session->total_samples != 0,2,2,4
!parent || parent->left == node || parent->right == node,2,2,4
 nActual<=n ,2,2,4
render->mv_blocks,2,2,4
br->consumed_words <= br->words,2,2,4
nbits < ctx->cid_table->bit_depth + 4,2,2,4
"charset_wctomb(charset, s, 255) == 1 && !strcmp(s, ""\377."")",2,2,4
tcmpt->numstepsizes <= JPC_MAXBANDS,2,2,4
 ii<(NCELL(pNode)-1) ,2,2,4
it->b->rightlink != NULL,2,2,4
ret == 1,2,2,4
 sqlite3BtreeHoldsMutex(pRef) ,2,2,4
 !pPager->pTmpSpace ,2,2,4
pe->next_node < envelope->n_nodes,2,2,4
 !z || !sqlite3Isdigit(z[n]) ,2,2,4
topBand <= INT_MAX && topBand >= 0,2,2,4
wr->wr_object == op,2,2,4
*m > 0,2,2,4
size_v >= size_w && size_w > 1,2,2,4
0 != object_array && num_comments > 0,2,2,4
 0==(1&SQLITE_PTR_TO_INT(pVal->z)) ,2,2,4
 pBt->pPage1==0 ,2,2,4
 desiredAutoCommit==1 || desiredAutoCommit==0 ,2,2,4
 pC->isIndex || pOp->opcode==OP_RowData ,2,2,4
" !strcmp(ctx->filter->name, ""buffersink"") || !strcmp(ctx->filter->name, ""abuffersink"") || !strcmp(ctx->filter->name, ""ffbuffersink"") || !strcmp(ctx->filter->name, ""ffabuffersink"")",2,2,4
w->j_dc_vlc,2,2,4
g->gc.gc_refs != _PyGC_REFS_UNTRACKED,2,2,4
 idx>=-1 && idx<MERGE_COUNT ,2,2,4
 sqlite3_mutex_held(pBt->db->mutex) ,2,2,4
 rc==SQLITE_ROW || rc==SQLITE_DONE || rc==SQLITE_ERROR || rc==SQLITE_BUSY || rc==SQLITE_MISUSE ,2,2,4
"charset_mbtowc(charset, &wc, ""\340\340\200"", 9) == -1",2,2,4
 zIn==sqlite3_value_text(argv[0]) ,2,2,4
"charset_wctomb(charset, s, 0xffff) == 3 && !strcmp(s, ""\357\277\277...."")",2,2,4
 enc==SQLITE_UTF8 || enc==SQLITE_UTF16LE || enc==SQLITE_UTF16BE ,2,2,4
 pTrigger->pSchema==pTab->pSchema || pTrigger->pSchema==db->aDb[1].pSchema ,2,2,4
 pc>=-1 && pc<p->nOp ,2,2,4
 (pVal->flags & MEM_Int)!=0 ,2,2,4
info->depth == 8 || info->depth == 24,2,2,4
 (size&1)==0 ,2,2,4
"charset_mbtowc(charset, 0, ""a"", 0) == 0",2,2,4
 TK_PLUS==OP_Add ,2,2,4
(n >= '1') && (n <= '4'),2,2,4
x[0] <= IXMAX_VAL && x[1] <= IXMAX_VAL && x[2] <= IXMAX_VAL && x[3] <= IXMAX_VAL,2,2,4
length <= sizeof(temp),2,2,4
 desiredAutoCommit==1 || rollback==0 ,2,2,4
 pTest!=0 ,2,2,4
 EIGHT_BYTE_ALIGNMENT(aCopy[0]) ,2,2,4
 pParse->pNewTrigger==pTrigger ,2,2,4
(sys_page_size & (sys_page_size - 1)) == 0,2,2,4
PyString_Check(code),2,2,4
 end <= get2byte(&data[hdr+5]) ,2,2,4
"charset_wctomb(charset, s, 127) == 1 && !strcmp(s, ""\177......"")",2,2,4
 iPos>=pWriter->iPos ,2,2,4
lyrno == numlyrs - 1,2,2,4
 db->activeVdbeCnt>=db->writeVdbeCnt ,2,2,4
"bufsize > 0 && (size_t)bufsize > strlen(""nothing"")",2,2,4
vbrsf[sfb] >= vbrsfmin[sfb],2,2,4
 p->db==0 || sqlite3_mutex_held(p->db->mutex) ,2,2,4
 !sqlite3Isdigit(z[n]) ,2,2,4
 pRes!=0 ,2,2,4
 mem5.currentCount>0 ,2,2,4
table != NULL,2,2,4
 eType!=FTSQUERY_PHRASE || !p->pPhrase->isNot ,2,2,4
i < s->internal_buffer_count,2,2,4
 bestPlan.plan.u.pIdx==pIdx ,2,2,4
 pPager->state==PAGER_UNLOCK ,2,2,4
subframe->data.lpc.entropy_coding_method.type <= FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2,2,2,4
w->j_orient_vlc,2,2,4
 p->nRef || (p->flags&PGHDR_NEED_SYNC) ,2,2,4
0 != tempfile,2,2,4
header->channels > 0 && header->channels <= (1u << FLAC__STREAM_METADATA_STREAMINFO_CHANNELS_LEN) && header->channels <= FLAC__MAX_CHANNELS,2,2,4
 p2<=p->nMem ,2,2,4
 !pMem->xDel ,2,2,4
 pOp->p4type==P4_KEYINFO ,2,2,4
uPattern!=0,2,2,4
 i<=p->iSize ,2,2,4
newsize - (p - PyString_AS_STRING(v)) >= 1,2,2,4
factor > 0,2,2,4
0 <= *r && *r < y,2,2,4
 pPage->nCell<=MX_CELL(pPage->pBt) && MX_CELL(pPage->pBt)<=5460 ,2,2,4
from->length == 0,2,2,4
a->multiplier == +TURN_STEPS,2,2,4
 p->sharable==0 || p->locked==0 || p->db==p->pBt->db ,2,2,4
 mem.nCurrent[i]>=0 ,2,2,4
 ALWAYS_was_false_or_NEVER_was_true ,2,2,4
bitstream->cnt_ >= 0 && bitstream->cnt_ < 8,2,2,4
(status == G_IO_STATUS_NORMAL) || (read_size == 0),2,2,4
 db->pSavepoint==0 || db->autoCommit==0 ,2,2,4
 zStr==sqlite3_value_text(argv[0]) ,2,2,4
 EIGHT_BYTE_ALIGNMENT(zCsr) ,2,2,4
DI4Y == 4 * 365 + 1,2,2,4
object->capacity_by_order > 0 || (0 == object->parameters && 0 == object->raw_bits),2,2,4
 TOKEN.z[0] ,2,2,4
 nArg>1 && apArg[0] && (apArg[0]->flags&MEM_Null) ,2,2,4
PyString_Check(tmp),2,2,4
suggested_rice_parameter < FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_ESCAPE_PARAMETER,2,2,4
 !pRtree->aHash[ii] ,2,2,4
0 != long_option,2,2,4
buflen >= 1,2,2,4
nb == 1 && na > 0,2,2,4
!bparent || bparent->left == node || bparent->right == node,2,2,4
 pLevel->plan.wsFlags & WHERE_INDEXED ,2,2,4
dirp->dirname != NULL,2,2,4
 PAGER_LOCKINGMODE_EXCLUSIVE==1 ,2,2,4
 pItem->iCol>0 && pItem->iCol<=p->pEList->nExpr ,2,2,4
 zBlob==sqlite3_value_blob(argv[0]) ,2,2,4
 zTabName && zTabName[0] ,2,2,4
 pPage->nFree>=nByte ,2,2,4
 nRef==sqlite3PagerRefcount(pPager) ,2,2,4
 desiredEnc==SQLITE_UTF8 || desiredEnc==SQLITE_UTF16LE || desiredEnc==SQLITE_UTF16BE ,2,2,4
buf[sign + 1] == 'x',2,2,4
 sqlite3_mutex_notheld(pBt->mutex) ,2,2,4
"! ""op unknown""",2,2,4
i < blocksize,2,2,4
rc==SQLITE_OK || pPage==0,2,2,4
decoder->private_->cpuinfo.type == FLAC__CPUINFO_TYPE_PPC,2,2,4
obj->ob_type->tp_weaklistoffset + sizeof(PyObject *) <= (size_t)(obj->ob_type->tp_basicsize),2,2,4
 pgnoChild<=pagerPagecount(pPage->pBt) ,2,2,4
!r->long_ref,2,2,4
 iPage>1 ,2,2,4
"charset_mbtowc(charset, 0, """", 1) == 0",2,2,4
pParse->nTab==1,2,2,4
"charset_convert(""iso-8859-2"", ""utf-8"", s, 256, &q, &n) == 0",2,2,4
 pSel ,2,2,4
pkt[3] & 0x20,2,2,4
tree,2,2,4
 sz > (int)sizeof(LookasideSlot*) ,2,2,4
 pBt->pPage1 ,2,2,4
PyList_CheckExact(op),2,2,4
 !pPager->aSavepoint && !pPager->pInJournal ,2,2,4
reloff >= 0,2,2,4
 locktype==NO_LOCK ,2,2,4
s->width && s->height,2,2,4
 newPgno>0 ,2,2,4
 eMode==PAGER_LOCKINGMODE_QUERY || eMode==PAGER_LOCKINGMODE_NORMAL || eMode==PAGER_LOCKINGMODE_EXCLUSIVE ,2,2,4
 WO_GE==SQLITE_INDEX_CONSTRAINT_GE ,2,2,4
fhi < 268435456,2,2,4
map[(index-1)&(ME_MAP_SIZE-1)] == key,2,2,4
 TK_REM==OP_Remainder ,2,2,4
 pOrWc->nTerm>=2 ,2,2,4
 pTopNC!=0 ,2,2,4
from != to,2,2,4
"DL_DEFAULT, pWriter->data.pData+iDoclistData+n, pWriter->data.nData-iDoclistData-n, NULL",2,2,4
0 <= from && from < d->d_nstates,2,2,4
 sizeof(res.azResult[0])>= sizeof(res.nData) ,2,2,4
br->crc16_align <= br->consumed_bits,2,2,4
d->ma_table == NULL && d->ma_fill == 0 && d->ma_used == 0,2,2,4
deque->leftblock == deque->rightblock && deque->leftindex - 1 == deque->rightindex && deque->len == 0,2,2,4
xstart <= xend && ystart <= yend,2,2,4
 i+size<=mem3.nPool+1 ,2,2,4
 pOp->p3<SQLITE_N_BTREE_META ,2,2,4
 rc!=0 || !zName || (pColName->flags&MEM_Term)!=0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\375\377\277\277\277\277"", 9) == -1",2,2,4
 pName==0 ,2,2,4
 nCell>=0 && nCell<=MX_CELL(pPage->pBt) && MX_CELL(pPage->pBt)<=5460 ,2,2,4
size_w == ABS(w->ob_size),2,2,4
gfc->nsPsy.last_en_subshort[chn][i + 4] > 0,2,2,4
 p1==SAVEPOINT_BEGIN||p1==SAVEPOINT_RELEASE||p1==SAVEPOINT_ROLLBACK ,2,2,4
 a!=0 ,2,2,4
*pp,2,2,4
mp->ma_table[0].me_value == NULL,2,2,4
 !pParse->pNewTrigger ,2,2,4
from->num_indices > 0,2,2,4
 pAndTerm->pExpr ,2,2,4
 sqlite3SafetyCheckSickOrOk(db) ,2,2,4
 rc!=SQLITE_OK || isOpen(pFile) ,2,2,4
tok->decoding_state == 1,2,2,4
metadata->data.stream_info.min_blocksize < (1u << FLAC__STREAM_METADATA_STREAMINFO_MIN_BLOCK_SIZE_LEN),2,2,4
 EIGHT_BYTE_ALIGNMENT(aSpace1) ,2,2,4
wrasgc != next,2,2,4
nArg==2,2,2,4
metadata->data.stream_info.bits_per_sample > 0,2,2,4
pVtab && pModule,2,2,4
FLAC__STREAM_METADATA_APPLICATION_ID_LEN == sizeof(id)*8,2,2,4
encoder->protected_->qlp_coeff_precision <= FLAC__MAX_QLP_COEFF_PRECISION,2,2,4
DI400Y == 4 * DI100Y + 1,2,2,4
 zTab==0 && zDb==0 ,2,2,4
 argc==2 || argc==3 ,2,2,4
 leafCursorInvalid || !leafCur.pagesShuffled || !pCur->pagesShuffled ,2,2,4
!stream->bufbase_,2,2,4
 i==0 ,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_DESCRIPTION_LENGTH_LEN%8,2,2,4
 iType-2 < ArraySize(staticMutexes) ,2,2,4
hp - (s->lhp[s->highres[plane]][plane] + (stripe * hl + i) * hbpl) == (ptrdiff_t) j >> 3,2,2,4
!p->pLruPrev || p->pLruPrev->pLruNext==p,2,2,4
 autoInc==0 || autoInc==1 ,2,2,4
 r<nMaxCells ,2,2,4
 !pS ,2,2,4
v->ob_refcnt == 1,2,2,4
x[0] <= IXMAX_VAL && x[1] <= IXMAX_VAL,2,2,4
0 != s,2,2,4
_best_subframe == 0,2,2,4
 pOut<=&p->aMem[p->nMem] ,2,2,4
 pItem->isPopulated==0 ,2,2,4
 rc==SQLITE_BUSY || rc==SQLITE_OK ,2,2,4
 !pCsr->pBt->readOnly && pCsr->pBt->inTransaction==TRANS_WRITE ,2,2,4
c,2,2,4
 iReader<i ,2,2,4
frame->format == link->format,2,2,4
 (m.flags & MEM_Str)!=0 || db->mallocFailed ,2,2,4
 nAddCapacity>0 ,2,2,4
!(it->b == it->deque->leftblock && it->index < it->deque->leftindex),2,2,4
PyInstance_Check(pinst),2,2,4
pCsr->isIncrblobHandle,2,2,4
 pItem->iCol>0 ,2,2,4
 !pColl || pColl->xCmp ,2,2,4
id != ENCA_CS_UNKNOWN,2,2,4
cblk->passes,2,2,4
 p->wantToLock==0 ,2,2,4
 pExpr->affinity == OE_Ignore ,2,2,4
 pcache1.pLruHead!=pPage && pcache1.pLruTail!=pPage ,2,2,4
 pVfs->mxPathname==MAX_PATHNAME ,2,2,4
 !(pDest->flags & (MEM_Blob|MEM_Str)) || pDest->z==sMem.z ,2,2,4
best_i >= 0,2,2,4
 pPage==p->pDirty ,2,2,4
 !pTrigger ,2,2,4
q->bitrate == SILENCE,2,2,4
colIndex >= 0,2,2,4
 pSavepoint==db->pSavepoint ,2,2,4
 ppDb ,2,2,4
 p->sharable==0 || p->locked==0 || sqlite3_mutex_held(p->db->mutex) ,2,2,4
 sizeof(u64)==8 || sizeof(u64)==4 ,2,2,4
 pMem->flags&MEM_Str ,2,2,4
i < avci->buffer_count,2,2,4
 piEndChild!=NULL ,2,2,4
tcur->gilstate_counter >= 0,2,2,4
 i==MERGE_COUNT ,2,2,4
 eType!=SQLITE_OPEN_MASTER_JOURNAL || !isDelete ,2,2,4
 (int)strlen(conchPath) == len+7 ,2,2,4
 p->pFirst ,2,2,4
vorbis_data,2,2,4
enca_charset_is_known(ascii),2,2,4
 CURSOR_FAULT > CURSOR_REQUIRESEEK ,2,2,4
av_fifo_size(stream->fifo) == trailer_size,2,2,4
 pDel==0 || pDel==pColl ,2,2,4
asf_st,2,2,4
 (pnErr->flags & MEM_Int)!=0 ,2,2,4
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_DATA_LENGTH_LEN/8,2,2,4
 0==pTable->pIndex ,2,2,4
 WO_LE==SQLITE_INDEX_CONSTRAINT_LE ,2,2,4
 leafCorrection==0 || leafCorrection==4 ,2,2,4
in_len >= 0,2,2,4
qmfbid == JPC_COX_RFT,2,2,4
index <= branch->n_entries,2,2,4
 CURSOR_INVALID < CURSOR_REQUIRESEEK ,2,2,4
 pPager->dbOrigSize==0 ,2,2,4
 pOp->p5==0 || pOp->p5==1 ,2,2,4
 s->reordered_input_picture[0]->type==FF_BUFFER_TYPE_USER || s->reordered_input_picture[0]->type==FF_BUFFER_TYPE_INTERNAL,2,2,4
 pPg->nRef>0 || pPg->pPager->memDb ,2,2,4
 pOp->p3<pOp->p1 || pOp->p3>=pOp->p1+pOp->p2 ,2,2,4
siz->width && siz->height && siz->tilewidth && siz->tileheight && siz->numcomps,2,2,4
0x40 <= IN2 && IN2 <= 0xfe,2,2,4
 get4byte(pTemp)==pgnoOld[i] ,2,2,4
 pTab->nCol>cnum ,2,2,4
interpreter_lock,2,2,4
"PyType_IsSubtype(type, &PyTuple_Type)",2,2,4
mb_y || linesize <= block_offset[i],2,2,4
 pSchema || (j==1 && !db->aDb[1].pBt) ,2,2,4
 regRow!=pDest->iMem+i ,2,2,4
 pBt->nRef>0 ,2,2,4
 0==(pMem->flags&MEM_Dyn) && !pMem->xDel ,2,2,4
p != NULL,2,2,4
channel->partial_write_buf[0] == '\0',2,2,4
 offset%JOURNAL_HDR_SZ(pPager)==0 ,2,2,4
 pExcept==0 || pExcept->pBt==pBt ,2,2,4
 pOp->p2>0 && pOp->p2<p->nOp ,2,2,4
 pPager->journalMode==PAGER_JOURNALMODE_DELETE || rc ,2,2,4
sp->content.type == string,2,2,4
 len==sqlite3_value_bytes(argv[0]) ,2,2,4
block->length < (1u << FLAC__STREAM_METADATA_LENGTH_LEN),2,2,4
0 != reference,2,2,4
 (WO_EQ<<(op-TK_EQ)) < 0x7fff ,2,2,4
 pName2!=0 ,2,2,4
 first != NULL ,2,2,4
 yymsp[-1].minor.yy145!=0 ,2,2,4
offset >= 0,2,2,4
 pMem->enc!=0 ,2,2,4
 nKey==4 ,2,2,4
compare != NULL,2,2,4
array_Check(op),2,2,4
i == ms->n - 2 || i == ms->n - 3,2,2,4
cx >= 0 && cx < 4096,2,2,4
ihigh != NULL,2,2,4
0 == object->data.vorbis_comment.comments,2,2,4
errCode,2,2,4
 pc>=0 && pc<p->nOp ,2,2,4
"charset_wctomb(charset, s, 258) == 1 && !strcmp(s, ""\303."")",2,2,4
s->pb_time > 0 && s->pb_time < s->pp_time,2,2,4
 pSelect->pEList ,2,2,4
"charset_convert(""UTF-8"", ""UTF-8"", ""x\301\277y"", 4, &q, 0) == 2 && !strcmp(q, ""x##y"")",2,2,4
src_apu,2,2,4
 pPage->nOverflow==0 || sqlite3PagerPageRefcount(pPage->pDbPage)>1 ,2,2,4
0 <= to && to < d->d_nstates,2,2,4
 locktype==SHARED_LOCK ,2,2,4
value != NULL,2,2,4
 pModule->xColumn ,2,2,4
 to_op==OP_ToInt || aff!=SQLITE_AFF_INTEGER ,2,2,4
"charset_wctomb(charset, s, 255) == -1 && !strcmp(s, "".."")",2,2,4
 db->pDfltColl!=0 ,2,2,4
" iDb==sqlite3SchemaToIndex(pParse->db, pIdx->pSchema) ",2,2,4
"charset_wctomb(charset, s, 0x800) == 3 && !strcmp(s, ""\340\240\200...."")",2,2,4
FLAC__STREAM_METADATA_PICTURE_TYPE_LEN % 8 == 0,2,2,4
pDup,2,2,4
 WO_MATCH==SQLITE_INDEX_CONSTRAINT_MATCH ,2,2,4
mp->ma_fill > mp->ma_used,2,2,4
 useTempTable==0 ,2,2,4
!IsVirtual(pTab),2,2,4
pps,2,2,4
s->tx[plane] >= 0,2,2,4
 pDef!=0 ,2,2,4
"charset_wctomb(charset, s, 127) == 1 && !strcmp(s, ""\177."")",2,2,4
TYPE(n) == (type),2,2,4
 !pBt->pPage1 && !pBt->pCursor ,2,2,4
m_groupTransform.size() > 1,2,2,4
 p2==0 ,2,2,4
 pLock->locktype==pFile->locktype ,2,2,4
 pOp->p2!=0 ,2,2,4
!IS_EPSILON_NODE (type),2,2,4
0 <= microseconds && microseconds < 1000000,2,2,4
 iCell<NCELL(pNode) ,2,2,4
 pParse==pWalker->pParse ,2,2,4
 iStartLeaf<=iEndLeaf ,2,2,4
"charset_mbtowc(charset, &wc, ""\177"", 1) == 1 && wc == 127",2,2,4
 EIGHT_BYTE_ALIGNMENT(pPager->jfd) ,2,2,4
cblk->stream,2,2,4
 mem5.currentCount>0 || mem5.currentOut==0 ,2,2,4
 TK_MINUS==OP_Subtract ,2,2,4
 pSrcList->a[i].iCursor>=0 && pSrcList->a[i].iCursor<pParse->nTab,2,2,4
s->pict_type == FF_I_TYPE || (s->last_picture_ptr && s->last_picture_ptr->data[0]),2,2,4
 pColl!=0 || pLeft->iColumn==-1 ,2,2,4
 pOrTerm->leftCursor==iCursor ,2,2,4
bytes < (1 << 24),2,2,4
 pNew->pOpen==NULL ,2,2,4
 pOp->p4type==P4_INTARRAY ,2,2,4
JPC_FIX_FRACBITS >= JPC_NUMEXTRABITS,2,2,4
s->num_frames <= s->max_frames_per_packet,2,2,4
point_num <= object->data.seek_table.num_points,2,2,4
0 == (new_capacity - bw->capacity) % FLAC__BITWRITER_DEFAULT_INCREMENT,2,2,4
PyGILState_GetThisThreadState()==tstate,2,2,4
 iCur<p->nCursor ,2,2,4
object->num_indices > 0,2,2,4
 face ,2,2,4
active,2,2,4
 db->nDb>iDb ,2,2,4
oldcmpt->tlx_ == 0 && oldcmpt->tly_ == 0,2,2,4
 pNew->nCol>0 ,2,2,4
f->f_back == NULL,2,2,4
sizeof(buffer) >= (FLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_RESERVED_LEN) / 8,2,2,4
 iType!=DL_POSITIONS_OFFSETS ,2,2,4
leftBand <= INT_MAX && leftBand >= 0,2,2,4
 db->nDb<=2 ,2,2,4
s->pict_type!=FF_I_TYPE,2,2,4
"charset_mbtowc(charset, &wc, ""\340\240\300"", 9) == -1",2,2,4
 zFilename ,2,2,4
 db->lookaside.nOut==0 ,2,2,4
 db->activeVdbeCnt>0 ,2,2,4
pEList == 0 || pSelect == 0,2,2,4
 pStart->leftCursor==iCur ,2,2,4
 bRev==0 || bRev==1 ,2,2,4
rice_parameters[0] == 0,2,2,4
e->timestamp >= target_ts,2,2,4
queue->head,2,2,4
Py_LT <= op && op <= Py_GE,2,2,4
 pPager->dbFileSize>0 ,2,2,4
lhs,2,2,4
 pTerm->leftCursor==iCur ,2,2,4
dsize <= size / 4 * 3 + 2,2,2,4
 pPager->doNotSync==1 ,2,2,4
 pPayload<pPage->aData || pPayload>=&pPage->aData[pBt->pageSize] || sqlite3PagerIswriteable(pPage->pDbPage) ,2,2,4
"n2 == 256 && !memcmp(r, s, n2)",2,2,4
 p==pOld ,2,2,4
factor != 0,2,2,4
 argc==2 ,2,2,4
 i==n ,2,2,4
 p->magic==VDBE_MAGIC_RUN ,2,2,4
 (int)strlen((char*)pFile->lockingContext)<=MAXPATHLEN ,2,2,4
accumbits == 0,2,2,4
 eOp==SAVEPOINT_ROLLBACK || eOp==SAVEPOINT_RELEASE,2,2,4
size >= 0 && pos >= 0,2,2,4
 iStmt<MAX_STMT ,2,2,4
"PyType_IsSubtype(type, &PyUnicode_Type)",2,2,4
balance == node->balance,2,2,4
 pToken->n>=1 ,2,2,4
 pPg->nRef>0 ,2,2,4
0 != gain,2,2,4
 p==pBt->pWriter ,2,2,4
 pArray->nMutex<ArraySize(pArray->aBtree)-1 ,2,2,4
s->nb_inputs > 1,2,2,4
 rc!=SQLITE_IOERR_BLOCKED ,2,2,4
t2->ob_size >= 0,2,2,4
 pNew->pLock==NULL ,2,2,4
mag->chunks == NULL,2,2,4
nptr != NULL,2,2,4
inst->ob_refcnt == 0,2,2,4
 sizeof(AllocatedType) * objectPerAllocation >= sizeof(AllocatedType *) ,2,2,4
sd && sd->sample && i >= 0 && i < sd->n_samples,2,2,4
tableName && *tableName,2,2,4
s->mb_y < s->mb_height,2,2,4
 pToken ,2,2,4
 rc!=SQLITE_BUSY && rc!=SQLITE_LOCKED ,2,2,4
 p->iStatement==0 || db->flags&SQLITE_CountRows ,2,2,4
 pPage->nOverflow<=ArraySize(pPage->aOvfl) ,2,2,4
0 != val,2,2,4
 idx>0 ,2,2,4
 PAGER_EXCLUSIVE==EXCLUSIVE_LOCK ,2,2,4
(int16_t)a[AV_INTEGER_SIZE-1] >= 0 && (int16_t)b[AV_INTEGER_SIZE-1] >= 0,2,2,4
cmptno >= 0 && cmptno <= image->numcmpts_,2,2,4
from->length > 0,2,2,4
put_bits_count(&src->pb) % 8 ==0,2,2,4
obj != NULL,2,2,4
 nOld>0 ,2,2,4
 pPrior!=0 ,2,2,4
zType[i-1]==' ',2,2,4
 p->pMod && p->pMod->pModule ,2,2,4
prevblock != NULL,2,2,4
 pId->nRef>0 ,2,2,4
val!=0U,2,2,4
y == -1,2,2,4
 pSplit->pParent->pRight==pSplit ,2,2,4
 iFirst>=0 ,2,2,4
 pExpr->x.pSelect==0 ,2,2,4
 sqlite3_mutex_held(mem5.mutex) ,2,2,4
0 <= seconds && seconds < 24*3600,2,2,4
 isDeferred==0 || isDeferred==1 ,2,2,4
 pCell<pPage->aData || pCell>=&pPage->aData[pBt->pageSize] || sqlite3PagerIswriteable(pPage->pDbPage) ,2,2,4
 (vm->state.TTN_REG) != 0 ,2,2,4
 iBlockid==pWriter->iEndBlockid ,2,2,4
 pB==0 || pB->pNext==0 || pB->v<=pB->pNext->v ,2,2,4
 zP4!=0 ,2,2,4
autoc[0] != 0.0,2,2,4
 n<=pTab->nCol ,2,2,4
!options.common.replay_gain || grabbag__replaygain_is_valid_sample_frequency(options.sample_rate),2,2,4
(cc & 3) == 0,2,2,4
 pPager->tempFile && rc==SQLITE_OK ,2,2,4
 pPg->pgno==pgno ,2,2,4
! g_thread_supported(),2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\377\277\277\277"", 9) == -1",2,2,4
(br->capacity*FLAC__BITS_PER_WORD) * 2 >= bits,2,2,4
0 < *max_order,2,2,4
FLAC__CHANNEL_ASSIGNMENT_LEFT_SIDE == 1,2,2,4
builtins != NULL && PyDict_Check(builtins),2,2,4
 i!=YY_REDUCE_USE_DFLT ,2,2,4
 nBlock>=2 ,2,2,4
 pTab==pOld ,2,2,4
 pTerm!=NULL ,2,2,4
 pDest && pSrc ,2,2,4
0 == chain->filename,2,2,4
z,2,2,4
 to_op==OP_ToReal || aff!=SQLITE_AFF_REAL ,2,2,4
 pCx!=0 ,2,2,4
s->mb_num == s->mb_width * s->mb_height,2,2,4
 pIndex->pSchema==pTable->pSchema ,2,2,4
denom != 0,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_MIME_TYPE_LENGTH_LEN%8,2,2,4
(size_t)i < sizeof(decomp),2,2,4
 fg&(MEM_Int|MEM_Real) ,2,2,4
 pLock->cnt==0 ,2,2,4
 pExpr->pRight->eType==FTSQUERY_PHRASE ,2,2,4
 pLeft->pColl ,2,2,4
 pgno!=0 ,2,2,4
i==1 || (pDb->pBt && sqlite3BtreeHoldsMutex(pDb->pBt)),2,2,4
index==0,2,2,4
(WIDE)(NARROW)(VALUE) == (VALUE),2,2,4
(vm->state).cellN > 1,2,2,4
" get4byte(findCell(pParent, iIdx))==iChild ",2,2,4
newbufsize >= 0,2,2,4
 pOpen->pPrev->pNext==pOpen ,2,2,4
 to_op==OP_ToNumeric || aff!=SQLITE_AFF_NUMERIC ,2,2,4
 pWriter->iPos!=-1 ,2,2,4
block_length >= sizeof(block1->id),2,2,4
pEList != 0 || pSelect != 0 || db->mallocFailed,2,2,4
!s0->current_picture_ptr,2,2,4
 db->aDb==db->aDbStatic ,2,2,4
 pBt->readOnly==0 ,2,2,4
ptoappend != NULL,2,2,4
i < (1u << FLAC__STREAM_METADATA_LENGTH_LEN),2,2,4
 (pBlock[-1].u.hdr.size4x&1)!=0 ,2,2,4
channel >= 0 && channel < DUMB_IT_N_CHANNELS,2,2,4
"charset_convert(""UTF-8"", ""UTF-8"", ""x\301\277y"", 4, &q, &n) == 2 && n == 4 && !strcmp(q, ""x##y"")",2,2,4
nextvp->target_clock >= vp->target_clock,2,2,4
FLAC__STREAM_SYNC_LENGTH == sizeof(buffer),2,2,4
 db->init.busy==0 ,2,2,4
leaf,2,2,4
 pList->nAlloc==0 ,2,2,4
!(it->b == it->deque->rightblock && it->index > it->deque->rightindex),2,2,4
newsize - (p - PyString_AS_STRING(v)) >= 5,2,2,4
until >= input_samples_passed,2,2,4
seg->numpasses >= seg->maxpasses || dopartial,2,2,4
 bufpt>buf ,2,2,4
 pData!=NULL && nData>0 ,2,2,4
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_MIME_TYPE_LENGTH_LEN/8,2,2,4
 p->rc==SQLITE_OK || p->rc==SQLITE_BUSY ,2,2,4
tmp->left == node,2,2,4
 pColumnToken && pColumnToken->z ,2,2,4
FLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN == 1,2,2,4
 nearby>0 ,2,2,4
sep != NULL && PyString_Check(sep),2,2,4
 pHdr->pNext->pPrev==pHdr ,2,2,4
block1->tracks[i].num_indices > 0,2,2,4
 pList->nExpr<=pList->nAlloc ,2,2,4
PyIter_Check(iter),2,2,4
 sz==info.nPayload ,2,2,4
 n>=1 ,2,2,4
 p->pRightmost==p ,2,2,4
 pOrderBy==0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\302\300"", 2) == -1",2,2,4
render_ref,2,2,4
 pPrevTrunk==0 ,2,2,4
 db->aDb[iDb].pSchema==pTab->pSchema ,2,2,4
 p->pPrev==0 || p->pPrev->pBt<p->pBt ,2,2,4
 sqlite3_mutex_held(mutexOpen) ,2,2,4
ref->buf->data[0],2,2,4
(0 != src->indices && src->num_indices > 0) || (0 == src->indices && src->num_indices == 0),2,2,4
 parentSize<64 ,2,2,4
encoder->protected_->sample_rate <= 655350,2,2,4
PyWeakref_Check(op),2,2,4
 pPager->state>=PAGER_SHARED || pPager->dbSizeValid==0 ,2,2,4
 nReserve>=0 && nReserve<=255 ,2,2,4
 pParse->nVarExpr==0 ,2,2,4
 pIdx->nColumn==1 ,2,2,4
 pRight->pColl ,2,2,4
 pBt->db ,2,2,4
 pPager->state == (tempFile ? PAGER_EXCLUSIVE : PAGER_UNLOCK) ,2,2,4
g_quark_seq_id == 0,2,2,4
 opcode>0 && opcode<(int)sizeof(opcodeProperty) ,2,2,4
current_length != chain->initial_length,2,2,4
"charset_mbtowc(charset, &wc, ""c"", 2) == 1 && wc == 'c'",2,2,4
exp_min >= 0 && exp_min <= 24,2,2,4
compat || (args != (PyObject*)NULL),2,2,4
sizeof (struct iso_path_table) == 8,2,2,4
temp == (MPC_SAMPLE_FORMAT_MULTIPLY)(MPC_SAMPLE_FORMAT)temp,2,2,4
 c==t ,2,2,4
 eLock==READ_LOCK || (p==pBt->pWriter && p->inTrans==TRANS_WRITE) ,2,2,4
siz->comps,2,2,4
 nData>2 ,2,2,4
source_bps <= 32,2,2,4
!isView || pTrigger,2,2,4
 sqlite3_mutex_held(pCsr->pBtree->db->mutex) ,2,2,4
fr->stereo == 1 || fr->stereo == 2,2,2,4
 (mem5.aCtrl[iBlock] & CTRL_FREE)==0 ,2,2,4
 pIdx->nColumn>=nEq ,2,2,4
 p->zErrMsg==0 ,2,2,4
(start_code & 0xffffff00) == 0x00000100,2,2,4
 pCur->eState>=CURSOR_REQUIRESEEK ,2,2,4
numfree > 0,2,2,4
0 != max_order,2,2,4
 p->pParent->pRight==p ,2,2,4
data_bytes >= 16,2,2,4
 pTableName->nSrc==1 ,2,2,4
 !pMemPage || pMemPage->pgno==iPage ,2,2,4
 p->inTrans>0 ,2,2,4
 p->bDestLocked ,2,2,4
nextchar == lastchar,2,2,4
 iTerm<nTerms ,2,2,4
avctx->thread_count > 1,2,2,4
j < MAX_LENGTH - 2,2,2,4
carry <= (MASK << 1),2,2,4
i && t,2,2,4
0 != filenames[i],2,2,4
bpno >= 0 && bpno < 31,2,2,4
 p->sharable || p->wantToLock==0 ,2,2,4
 encnames[SQLITE_UTF16BE].enc==SQLITE_UTF16BE ,2,2,4
 pCost->plan.wsFlags & WHERE_INDEXED ,2,2,4
pBuffers!=NULL,2,2,4
 pExpr->iColumn<pTab->nCol ,2,2,4
 i<nReaders ,2,2,4
 pIter->eLock==READ_LOCK || pIter->eLock==WRITE_LOCK ,2,2,4
!isDistinct,2,2,4
(pExpr->x.pList->nExpr % 2) == 0,2,2,4
SQLITE_MAX_DEFAULT_PAGE_SIZE<=65536,2,2,4
 pTo!=0 ,2,2,4
 sizeof(db->aLimit)==sizeof(aHardLimit) ,2,2,4
 pUnpacked->flags & UNPACKED_IGNORE_ROWID ,2,2,4
node->parent != node,2,2,4
(flags&0x0F)==SQLITE_SYNC_NORMAL || (flags&0x0F)==SQLITE_SYNC_FULL ,2,2,4
base >= 2 && base <= 36,2,2,4
!(x & 0x80),2,2,4
 sqlite3PagerGetData(pPage->pDbPage) == data ,2,2,4
 matchSet<0x80 ,2,2,4
 iCnt==1 ,2,2,4
 pBt->usableSize > 4 ,2,2,4
0 == options->ops.operations || options->ops.num_operations > 0,2,2,4
map[(index-(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key,2,2,4
 sqlite3_mutex_held(mem0.mutex) ,2,2,4
 iNode!=0 ,2,2,4
!base->tp_itemsize,2,2,4
"charset_mbtowc(charset, &wc, ""a"", 0) == 0 && wc == 'x'",2,2,4
 pExpr->op!=TK_NOTNULL || op==OP_IsNull ,2,2,4
 pParse->nVar==0 ,2,2,4
 pageSize==0 || (pageSize>=512 && pageSize<=SQLITE_MAX_PAGE_SIZE) ,2,2,4
s->end >= s->ptr,2,2,4
(cc & 7) == 0,2,2,4
sps,2,2,4
 pList->a!=0 ,2,2,4
 p->pRight==0 || p->pRight->token.z==0 || p->pRight->token.z[0]!=0 ,2,2,4
 pzOriginTab && pzOriginCol ,2,2,4
col <= 0x7f,2,2,4
bw->words <= bw->capacity,2,2,4
 pOp->p4type==P4_COLLSEQ ,2,2,4
 !isOpen(pPager->jfd) || pPager->journalOff>0 || rc!=SQLITE_OK ,2,2,4
 pSel!=0 ,2,2,4
 nCapacity>=0 ,2,2,4
"!strcmp(mode, ""r"") || !strcmp(mode, ""w"") || !strcmp(mode, ""r+"") || !strcmp(mode, ""w+"")",2,2,4
 nExtra>=1 ,2,2,4
 v!=0 || db->mallocFailed ,2,2,4
 TK_GT>TK_EQ && TK_GT<TK_GE ,2,2,4
 sqlite3SafetyCheckOk(db) ,2,2,4
 p->pUnlockConnection || p->pBlockingConnection ,2,2,4
 pTo->db==0 || sqlite3_mutex_held(pTo->db->mutex) ,2,2,4
PyList_Check(raw),2,2,4
autoInterpreterState,2,2,4
 pPage->pDirtyNext==0 && pPage->pDirtyPrev==0 && p->pDirty!=pPage ,2,2,4
 f1&MEM_Int ,2,2,4
metadata->data.stream_info.bits_per_sample <= (1u << FLAC__STREAM_METADATA_STREAMINFO_BITS_PER_SAMPLE_LEN),2,2,4
 pIn3->flags & MEM_Blob ,2,2,4
 pTriggerStep!=0 ,2,2,4
ms.n < MAX_MERGE_PENDING,2,2,4
sizeof(x)==sizeof(y),2,2,4
g_once_mutex,2,2,4
 pCur!=0 && pCur->iPage>=0 && pCur->apPage[pCur->iPage],2,2,4
(iOffset+nAlloc)>mem5.nBlock,2,2,4
"error_code == 0 && ""Failed to register operator[]""",2,2,4
 (pIn3->flags & MEM_Real)!=0 ,2,2,4
 opcode==OP_OpenWrite || opcode==OP_OpenRead ,2,2,4
 !isOpen(pPager->jfd) && !isOpen(pPager->sjfd) ,2,2,4
 sqlite3GlobalConfig.nRefInitMutex==0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\360\220\200\000"", 9) == -1",2,2,4
iStart<=iEnd,2,2,4
pExpr->x.pList->nExpr > 0,2,2,4
"charset_mbtowc(charset, &wc, ""\177"", 2) == 1 && wc == 127",2,2,4
 p2==p1 ,2,2,4
" szNew==cellSizePtr(pPage, newCell) ",2,2,4
 nSource>0 && pSource!=NULL ,2,2,4
 sizeof(*p)==BITVEC_SZ ,2,2,4
m->buf_,2,2,4
pCsr->pNode,2,2,4
 j==nCell ,2,2,4
 compatible[RTREE_GE & 7]==2 ,2,2,4
expected != NULL,2,2,4
0 != skip_spec,2,2,4
sizeof(struct iso_volume_descriptor) == ISO_BLOCKSIZE,2,2,4
 pBt->autoVacuum==1 || pBt->autoVacuum==0 ,2,2,4
 pPrior ,2,2,4
s->pict_type != AV_PICTURE_TYPE_B || !s->low_delay,2,2,4
 sizeof(RtreeCoord)==4 ,2,2,4
 TK_BITOR==OP_BitOr ,2,2,4
bases && PyTuple_Check(bases),2,2,4
"charset_mbtowc(charset, 0, """", 2) == 0",2,2,4
(vm->state).pgc->next_pgc_nr != 0,2,2,4
0 != encoder->private_->frame,2,2,4
arg < 0x4000,2,2,4
 pList==0 ,2,2,4
modNameSize >= 0,2,2,4
max_order >= MIN_LPC_ORDER && max_order <= MAX_LPC_ORDER && lpc_type > FF_LPC_TYPE_FIXED,2,2,4
 pCell!=0 ,2,2,4
 op==TK_INSERT || op==TK_UPDATE || op==TK_DELETE ,2,2,4
FLAC__format_sample_rate_is_valid(header->sample_rate),2,2,4
sizeof(FLAC__uint64) <= sizeof(buffer),2,2,4
 pName1 && pName2 ,2,2,4
 iSpace1<=pBt->pageSize ,2,2,4
avail_space >= s->packet_size || ignore_constraints,2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\277\277\277\077"", 9) == -1",2,2,4
f->f_back != NULL,2,2,4
lo != hi,2,2,4
 !isView ,2,2,4
b == 0 && f == 0,2,2,4
 pRoot->pgno==1 ,2,2,4
rightBand <= INT_MAX && rightBand >= 0,2,2,4
 db == v->db ,2,2,4
 j<(int)(sizeof(pPage->aOvfl)/sizeof(pPage->aOvfl[0])) ,2,2,4
(status != G_IO_STATUS_NORMAL) || (channel->encoded_read_buf->len > 0),2,2,4
 !pPrior->pOrderBy ,2,2,4
 p1>=0 && p2>=0 ,2,2,4
 pParent ,2,2,4
wp->nonce,2,2,4
 iTarget>0 ,2,2,4
(*block)->type == FLAC__METADATA_TYPE_VORBIS_COMMENT,2,2,4
 rc!=SQLITE_OK || pPager->journalOff==szJ ,2,2,4
"charset_mbtowc(charset, &wc, ""\360\217\277\277"", 9) == -1",2,2,4
 j==1 ,2,2,4
iOfst==p->endpoint.iOffset,2,2,4
rel > 0,2,2,4
 PTF_LEAF == 1<<3 ,2,2,4
node->right,2,2,4
 pBt->incrVacuum==1 || pBt->incrVacuum==0 ,2,2,4
 sqlite3PagerPagenumber(pPage->pDbPage)==pPage->pgno ,2,2,4
ref->buf->refcount > 0,2,2,4
boxinfo,2,2,4
MB_LEN_MAX >= pstr->mb_cur_max,2,2,4
t_size >= b_size,2,2,4
 pNC->nRef>=nRef ,2,2,4
 pKeyInfo!=0 ,2,2,4
 iFreePg==iLastPg ,2,2,4
 i<nMaxCells ,2,2,4
nch == 5 || nch == 6,2,2,4
mms->remaining_in_len==0,2,2,4
 (rc & (v->db->errMask))==rc ,2,2,4
numfree == 0,2,2,4
tx >= 0,2,2,4
options->args.checks.num_shorthand_ops == options->ops.num_operations,2,2,4
 PAGER_SHARED==SHARED_LOCK ,2,2,4
 pExpr->x.pList==0 && pExpr->x.pSelect==0 ,2,2,4
maxctxs > 0,2,2,4
 sqlite3IsNaN(y) ,2,2,4
!(perms & ~(full_perms | AV_PERM_NEG_LINESIZES)),2,2,4
 pNew ,2,2,4
flo <= 16777216,2,2,4
v != NULL && PyLong_Check(v),2,2,4
 rcauth==SQLITE_OK || rcauth==SQLITE_DENY || rcauth==SQLITE_IGNORE ,2,2,4
!options->args.checks.has_except_block_type,2,2,4
 pLock->pNext->pPrev==pLock ,2,2,4
 &((char*)&likeInfoAlt)[2] == (char*)&likeInfoAlt.matchSet ,2,2,4
na > 0 && nb > 0,2,2,4
 pOp->p4.pVtab!=0 ,2,2,4
 p->owner==GetCurrentThreadId() ,2,2,4
td->td_photometric == PHOTOMETRIC_LOGL,2,2,4
!((x) & (~0x7ff)),2,2,4
scheme == COMPRESSION_JPEG,2,2,4
nch >= 1 && nch % 2 == 1,2,2,4
(fracbits & 0x3) == 0,2,2,4
 nCol==pSelect->pEList->nExpr || db->mallocFailed ,2,2,4
 pMem->zMalloc ,2,2,4
 pOp || pParse->db->mallocFailed ,2,2,4
"pool_is_in_list(p, freepools)",2,2,4
 pTempCur->pKey==0 ,2,2,4
 pPage->pCache==pCache ,2,2,4
(bitstream)->openmode_ & JPC_BITSTREAM_WRITE,2,2,4
n < JPC_NUMSCCTXS,2,2,4
new_mem != NULL,2,2,4
 pExpr->iTable==pStack->newIdx || pExpr->iTable==pStack->oldIdx ,2,2,4
 azCols[i]!=0 ,2,2,4
 pNC ,2,2,4
 n+nSuffix<pReader->nData ,2,2,4
PyString_Check(name),2,2,4
 encnames[SQLITE_UTF8].enc==SQLITE_UTF8 ,2,2,4
 eMode==PAGER_JOURNALMODE_QUERY || eMode==PAGER_JOURNALMODE_DELETE || eMode==PAGER_JOURNALMODE_TRUNCATE || eMode==PAGER_JOURNALMODE_PERSIST || eMode==PAGER_JOURNALMODE_OFF || eMode==PAGER_JOURNALMODE_MEMORY ,2,2,4
 end + sz <= top ,2,2,4
 pExpr->pLeft ,2,2,4
string,2,2,4
c >= -1 && c <= 1,2,2,4
 pPager->nRec==0 ,2,2,4
" sqlite3HashFind(&pTable->pSchema->aFKey, pFKey->zTo, sqlite3Strlen30(pFKey->zTo)+1)!=pFKey ",2,2,4
 (p->selFlags & SF_Aggregate)==0 ,2,2,4
 !pPager->setMaster ,2,2,4
FLAC__STREAM_METADATA_PICTURE_WIDTH_LEN % 8 == 0,2,2,4
pic->type == 0 || pic->type == FF_BUFFER_TYPE_SHARED,2,2,4
 nTemp>=20 ,2,2,4
 (pOrTerm->wtFlags & (TERM_ANDINFO|TERM_ORINFO))==0 ,2,2,4
pMaster,2,2,4
 p->aMem[n].db==db ,2,2,4
status != NULL,2,2,4
PyThreadState_IsCurrent(tcur),2,2,4
 pWriter->has_parent ,2,2,4
 pOrTerm->eOperator==0 ,2,2,4
 PAGER_RESERVED==RESERVED_LOCK ,2,2,4
" 0==strcmp(sqlite3_errmsg(db), ""unknown tokenizer: nosuchtokenizer"") ",2,2,4
 TRANS_WRITE==pBt->inTransaction ,2,2,4
!options.common.sector_align || infilesize >= 0,2,2,4
 pSubSrc ,2,2,4
 p2>0 && p2+n<=p->nMem+1 ,2,2,4
0 <= *lo && *lo < factor,2,2,4
!PyType_IS_GC(self->ob_type) || _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED,2,2,4
 idx>=0 && idx<=15 ,2,2,4
" 0==PTRMAP_ISPAGE(pBt, PENDING_BYTE_PAGE(pBt)) ",2,2,4
 sqlite3BtreeHoldsMutex(pBtree) ,2,2,4
 p->pBt->inTransaction>=p->inTrans ,2,2,4
 pNew->nOverflow==0 ,2,2,4
base >= 2 && base <= 32 && (base & (base - 1)) == 0,2,2,4
leapyear == is_leap(*year),2,2,4
pColl || pParse->nErr,2,2,4
FLAC__metadata_iterator_get_block(iterator) == *block,2,2,4
 pParse->apVarExpr==0 ,2,2,4
gbo->currkey != NULL,2,2,4
 (idxStr==0 && argc==0) || strlen(idxStr)==argc*2 ,2,2,4
ilow != NULL,2,2,4
 pDb!=0 ,2,2,4
pic->data[0],2,2,4
 pParse->nVarExprAlloc==0 ,2,2,4
 rc!=SQLITE_OK || !pCsr->pNode || pCsr->iCell<NCELL(pCsr->pNode) ,2,2,4
 rc!=SQLITE_OK || iPageSize16==(u16)iPageSize ,2,2,4
0 != aligned_address,2,2,4
DI100Y == days_before_year(100+1),2,2,4
h->sps.direct_8x8_inference_flag,2,2,4
 s->input_picture[0]->type==FF_BUFFER_TYPE_USER || s->input_picture[0]->type==FF_BUFFER_TYPE_INTERNAL,2,2,4
decoder_session->until_specification->value_is_samples,2,2,4
 p->wantToLock==0 && p->locked==0 ,2,2,4
 i==nOld ,2,2,4
-bits_left <= MAD_BUFFER_GUARD * CHAR_BIT,2,2,4
 debugMutexHeld(p) ,2,2,4
"charset_wctomb(charset, s, 'x') == 1 && s[0] == 'x' && s[1] == '.'",2,2,4
 iDb<SQLITE_MAX_ATTACHED+2 ,2,2,4
 pTab->iPKey<pTab->nCol ,2,2,4
 (p->btreeMask & (1<<pOp->p5))!=0 ,2,2,4
 p->iForeGuard==(int)FOREGUARD ,2,2,4
 iSpace2<=pBt->pageSize ,2,2,4
 pFile->inNormalWrite==0 || pFile->dbUpdate==0 || pFile->transCntrChng==1 ,2,2,4
i == tdo->numread,2,2,4
 mem3.aPool[i-1].u.hdr.size4x/4==nBlock ,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_COLORS_LEN%8,2,2,4
h0->cur_pic_ptr,2,2,4
 pPager->memDb==0 ,2,2,4
 (pBt->pageSize & 7)==0 ,2,2,4
 nField>0 ,2,2,4
carry == 0,2,2,4
result == NULL,2,2,4
p->pLruPrev || p==sqlite3LruStatements.pFirst,2,2,4
num_controls == sizeof(control_names) / sizeof(control_names[0]),2,2,4
PyDict_Check(path_importer_cache),2,2,4
rhs,2,2,4
 nFirstOld<nData || (nFirstOld==nData && pWriter->iType==DL_DOCIDS) ,2,2,4
p->pLruNext || p==sqlite3LruStatements.pLast,2,2,4
tzinfo && name && tzinfoarg,2,2,4
track->n_styles <= track->max_styles,2,2,4
(stream->bufmode_ & JAS_STREAM_WRBUF) == 0,2,2,4
 pzErrMsg!=0 ,2,2,4
track->n_events <= track->max_events,2,2,4
 pLeft->iType==pOut->iType ,2,2,4
 pTab!=0 && pTab->zName!=0 ,2,2,4
 rc ,2,2,4
 enc>=SQLITE_UTF8 && enc<=SQLITE_UTF16BE ,2,2,4
 !pWriter->has_iPrevDocid || iDocid>pWriter->iPrevDocid ,2,2,4
FLAC__STREAM_METADATA_PICTURE_HEIGHT_LEN % 8 == 0,2,2,4
scheme == COMPRESSION_LZW,2,2,4
 yyact == YYNSTATE + YYNRULE + 1 ,2,2,4
s->maxbits >= 9 && s->maxbits <= LZW_MAXBITS,2,2,4
rn % 2 == 0,2,2,4
min <= max,2,2,4
 pSrc!=0 ,2,2,4
object->data.seek_table.num_points > 0,2,2,4
 enc!=0 ,2,2,4
 pOld==0 || pOld==p ,2,2,4
(row >= 0) && (row < pTable->nRows),2,2,4
lpath && *lpath,2,2,4
2*shift + t1->ob_size <= ret->ob_size,2,2,4
 desiredAutoCommit==1 ,2,2,4
FLAC__CHANNEL_ASSIGNMENT_MID_SIDE == 3,2,2,4
nCell<=nMaxCell,2,2,4
 mem.pLast==pHdr ,2,2,4
 xtype==etINVALID ,2,2,4
g_thread_supported(),2,2,4
 pPager->nSavepoint>0 ,2,2,4
thmM + thmS > 0,2,2,4
desc->sigrenderer_generate_samples && desc->sigrenderer_get_current_sample,2,2,4
 PAGER_JOURNALMODE_QUERY<0 ,2,2,4
 lockList==pLock ,2,2,4
 pPage ,2,2,4
 eLock==READ_LOCK || pIter->pBtree==p || pIter->eLock==READ_LOCK,2,2,4
!pic->data[0],2,2,4
 d<nMaxCells ,2,2,4
xmv->video.stream_index < s->nb_streams,2,2,4
 eMode==PAGER_JOURNALMODE_DELETE || eMode==PAGER_JOURNALMODE_TRUNCATE || eMode==PAGER_JOURNALMODE_PERSIST || eMode==PAGER_JOURNALMODE_OFF || eMode==PAGER_JOURNALMODE_MEMORY ,2,2,4
 pPager->errCode==SQLITE_FULL || pPager->errCode==SQLITE_OK || (pPager->errCode & 0xff)==SQLITE_IOERR ,2,2,4
 MX_CELL_SIZE(pBt)>=szNext+4 ,2,2,4
" chngToIN==getMask(pMaskSet, iColumn) ",2,2,4
"charset_wctomb(charset, 0, 0) == 0",2,2,4
" pPager->fd->pMethods==0 || sqlite3OsFileControl(pPager->fd,SQLITE_FCNTL_DB_UNCHANGED,0)>=SQLITE_OK ",2,2,4
 nReserve>=-1 && nReserve<=255 ,2,2,4
 pPage->pgno>1 ,2,2,4
 isMainJrnl || pDone ,2,2,4
 pRight->op==TK_DOT ,2,2,4
keywords == NULL || PyDict_Check(keywords),2,2,4
 !pPgOld || pPgOld->nRef==1 ,2,2,4
"charset_convert(""utf-8"", ""iso-8859-2"", q, n, &r, &n2) == 0",2,2,4
DI100Y == 25 * DI4Y - 1,2,2,4
 ovflPgno==0 || nOvfl>0 ,2,2,4
 pLock->pPrev->pNext==pLock ,2,2,4
 !yyendofinput ,2,2,4
 desiredEnc==SQLITE_UTF8 ,2,2,4
 pId2 ,2,2,4
 pExpr->pLeft==0 ,2,2,4
 p==0 ,2,2,4
 iSavepoint>=0 || (iSavepoint==-1 && op==SAVEPOINT_ROLLBACK) ,2,2,4
"charset_mbtowc(charset, &wc, ""\376\277\277\277\277\277"", 9) == -1",2,2,4
" !ExprHasProperty(p->pEList->a[0].pExpr, EP_xIsSelect) ",2,2,4
num_points > 0,2,2,4
(vm->state).pgN > 0,2,2,4
got_bytes > 0,2,2,4
 pIndex->onError!=OE_None ,2,2,4
wp->wsp,2,2,4
dirlen <= MAXPATHLEN,2,2,4
mp->ma_lookup != NULL,2,2,4
out - result <= len,2,2,4
FLAC__CHANNEL_ASSIGNMENT_INDEPENDENT == 0,2,2,4
utf8 != ENCA_CS_UNKNOWN,2,2,4
"charset_mbtowc(charset, &wc, ""\377"", 2) == 1 && wc == 0x2d9",2,2,4
mp->ma_mask == PyDict_MINSIZE - 1,2,2,4
(put_bits_ptr(&s->pb) == s->pb.buf),2,2,4
attrval->ops->output,2,2,4
PyInt_Check(pyyear),2,2,4
 *pData=='\0' ,2,2,4
FLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN == 1,2,2,4
 pRight->eType==FTSQUERY_PHRASE ,2,2,4
0 != until_spec,2,2,4
mp->ma_table == mp->ma_smalltable,2,2,4
s->avctx->rc_max_rate,2,2,4
newtable != oldtable,2,2,4
 pPager->nSavepoint==0 || isOpen(pPager->sjfd) || pPager->journalMode==PAGER_JOURNALMODE_MEMORY ,2,2,4
 (start + size)<=pPage->pBt->usableSize ,2,2,4
 pExpr->affinity==OE_Rollback || pExpr->affinity == OE_Abort || pExpr->affinity == OE_Fail ,2,2,4
s->dither.method < SWR_DITHER_NB,2,2,4
 db->nStatement>0 ,2,2,4
idx >= 0,2,2,4
 !pParent || !pNode->pParent || pNode->pParent==pParent ,2,2,4
"charset_mbtowc(charset, &wc, ""\340\240\200"", 9) == 3 && wc == 1 << 11",2,2,4
 compatible[RTREE_LE & 7]==1 ,2,2,4
 pPage!=0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\360\320\200\200"", 9) == -1",2,2,4
!did_encode,2,2,4
 pParent==p ,2,2,4
 once ,2,2,4
!aval,2,2,4
(bitstream->buf_ & 0xff) != 0xff,2,2,4
charset_id[i] != ENCA_CS_UNKNOWN,2,2,4
pass->type == JPC_SEG_MQ,2,2,4
 p && p->pFunc && p->pFunc->xStep ,2,2,4
" sz==cellSizePtr(pPage, pCell) ",2,2,4
 xConstruct ,2,2,4
 pPage->aData == sqlite3PagerGetData(pPage->pDbPage) ,2,2,4
tzinfo && methname && tzinfoarg,2,2,4
*position >= FLAC__stream_decoder_get_input_bytes_unconsumed(decoder),2,2,4
 pCursor->pNode==pChild ,2,2,4
aType,2,2,4
s->pict_type != FF_B_TYPE || !s->low_delay,2,2,4
 TK_LT>TK_EQ && TK_LT<TK_GE ,2,2,4
nbits <= BITS_MAX,2,2,4
buffer,2,2,4
 nData==(pRtree->nDim*2 + 3) ,2,2,4
text,2,2,4
cmptno >= hdr->numcmpts,2,2,4
DI400Y == days_before_year(400+1),2,2,4
eMode==PAGER_LOCKINGMODE_NORMAL||eMode==PAGER_LOCKINGMODE_EXCLUSIVE,2,2,4
FLAC__CHANNEL_ASSIGNMENT_RIGHT_SIDE == 2,2,2,4
 offset>=c ,2,2,4
 nRoot>0 ,2,2,4
FLAC__STREAM_METADATA_VORBIS_COMMENT_ENTRY_LENGTH_LEN / 8 == sizeof(buffer),2,2,4
num_indices > 0,2,2,4
 pBt->pPage1->aData ,2,2,4
"charset_wctomb(charset, s, 0x7fffffff) == 6 && !strcmp(s, ""\375\277\277\277\277\277."")",2,2,4
 pOp->p2>0 && pOp->p2<=p->nMem ,2,2,4
 sizeof(Pgno)==4 ,2,2,4
 p1==p2 ,2,2,4
 pOrig!=0 ,2,2,4
 newi > mem3.iMaster+1 ,2,2,4
iterator->depth == 0,2,2,4
bucket,2,2,4
 pSub!=0 ,2,2,4
 pOrTerm->u.leftColumn==iColumn ,2,2,4
 eType!=SQLITE_OPEN_MAIN_DB || !isDelete ,2,2,4
 pLock->cnt!=0 ,2,2,4
 pVtab->pModule->xRename ,2,2,4
retval,2,2,4
 k<nMaxCells ,2,2,4
blocksize != 0,2,2,4
scheme == COMPRESSION_PIXARLOG,2,2,4
 aff1==0 || aff2==0 ,2,2,4
cbits + parameter <= br->bytes*8,2,2,4
 pName1!=0 ,2,2,4
bits < FLAC__BITS_PER_WORD,2,2,4
ncharsets > 0,2,2,4
!channel->read_buf || channel->read_buf->len == 0,2,2,4
 pNode->nRef>0 ,2,2,4
nData>=1,2,2,4
 pCrsr!=0 ,2,2,4
"!av_cmp_q(s->chapters[i]->time_base, s->chapters[i+1]->time_base)",2,2,4
 pEnd->leftCursor==iCur ,2,2,4
wp->docfd >= 0,2,2,4
samples <= 0xffffffff,2,2,4
result == 0,2,2,4
 db->mutex!=0 || isThreadsafe==0 || sqlite3GlobalConfig.bFullMutex==0 ,2,2,4
" ExprHasProperty(p, EP_Reduced)==0 ",2,2,4
s->current_picture_ptr->long_ref==0,2,2,4
w->j_orient_vlc->table,2,2,4
 mem5.currentOut>0 || mem5.currentCount==0 ,2,2,4
socketList[sid],2,2,4
 iStatement>0 ,2,2,4
" notReady & getMask(pMaskSet, pTabList->a[bestJ].iCursor) ",2,2,4
"charset_wctomb(charset, s, 0x1fffff) == 4 && !strcmp(s, ""\367\277\277\277..."")",2,2,4
s->buffer[0] == MARKER_ESC,2,2,4
 pCur->apPage[pCur->iPage]->nCell>0 ,2,2,4
object && format && timetuple,2,2,4
 iHeight>0 ,2,2,4
 pPage->pBt->usableSize <= SQLITE_MAX_PAGE_SIZE ,2,2,4
0 != block || append == false,2,2,4
 (enc&3)==(enc&~SQLITE_UTF16_ALIGNED) ,2,2,4
 p->xUnlockNotify ,2,2,4
*max_order <= FLAC__MAX_LPC_ORDER,2,2,4
"charset_mbtowc(charset, &wc, ""\340\237\200"", 9) == -1",2,2,4
 pCache->nRef==0 && pCache->pDirty==0 ,2,2,4
 p==pColl ,2,2,4
 idxNum<=QUERY_FULLTEXT+v->nColumn,2,2,4
 pPrior->pRightmost==p->pRightmost ,2,2,4
s->internal_buffer_count,2,2,4
 iIdx<=pParent->nCell ,2,2,4
 p->nRef==1 ,2,2,4
ep->me_key == dummy,2,2,4
seqs,2,2,4
 op!=TK_IN || c==WO_IN ,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_TYPE_LEN%8,2,2,4
 (addr>=0 && addr<p->nOp) || p->db->mallocFailed ,2,2,4
"charset_mbtowc(charset, &wc, """", 1) == 0 && wc == 0",2,2,4
 affinity==SQLITE_AFF_INTEGER || affinity==SQLITE_AFF_REAL || affinity==SQLITE_AFF_NUMERIC ,2,2,4
 pVtab ,2,2,4
next_avc - buf_index + consumed == nalsize,2,2,4
 pParse->pVdbe || pParse->db->mallocFailed ,2,2,4
IS_REACHABLE(op),2,2,4
n > 128,2,2,4
"!""unknown operation""",2,2,4
 iDb<pParse->db->nDb ,2,2,4
 pExpr->op!=TK_GE || op==OP_Lt ,2,2,4
encoder->private_->cpuinfo.type == FLAC__CPUINFO_TYPE_IA32,2,2,4
db,2,2,4
 pVtab!=0 ,2,2,4
 pTab->nCol>0 ,2,2,4
 !pBt->pWriter ,2,2,4
 pBt && pBt->pPager ,2,2,4
 iStartChild<=iLeavesEnd ,2,2,4
 pWC->op==TK_AND ,2,2,4
MODE_4k75 <= mode && mode <= MODE_12k2,2,2,4
ordinal >= 1,2,2,4
 pTable->nCol>=0 ,2,2,4
sizeof(buffer) >= (FLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN + FLAC__STREAM_METADATA_CUESHEET_IS_CD_LEN + FLAC__STREAM_METADATA_CUESHEET_TRACK_RESERVED_LEN)/8,2,2,4
t1->ob_size >= 0,2,2,4
 pOp[-1].opcode==OP_Integer ,2,2,4
 pMem->flags&MEM_Blob ,2,2,4
 pExpr->op!=TK_LE || op==OP_Gt ,2,2,4
ah->ob_size > 0,2,2,4
wrote_len == char_len || status != G_IO_STATUS_NORMAL,2,2,4
"GETARG(codestr, (n*3)) == n",2,2,4
 !isOpen(pJournal) ,2,2,4
 iDummy==0 ,2,2,4
!(val & FLAC__U64L(0xFFFFFFF000000000)),2,2,4
 p->explain==0 ,2,2,4
 p->cnt==0 ,2,2,4
 pChild->nCell==pPage->nCell ,2,2,4
page->body != 0,2,2,4
PyString_Check(s),2,2,4
!elbg->cells[i],2,2,4
" sz==cellSize(pPage, idx) ",2,2,4
 iIdx>=0 ,2,2,4
PyArrayIter_Check(it),2,2,4
seektable_template->type = FLAC__METADATA_TYPE_SEEKTABLE,2,2,4
 nTerms>0 ,2,2,4
0 <= gi->region0_count && gi->region0_count < 16,2,2,4
 (pMem->flags & (MEM_Blob|MEM_Str))!=0 ,2,2,4
subframe->data.fixed.entropy_coding_method.type <= FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2,2,2,4
 pRtree->eCoordType==RTREE_COORD_INT32 ,2,2,4
 p->nResColumn==pOp->p2 ,2,2,4
 iSrcPg!=PENDING_BYTE_PAGE(p->pSrc->pBt) ,2,2,4
 rc!=SQLITE_OK || leafCur.aiIdx[leafCur.iPage]==0 ,2,2,4
p == NULL,2,2,4
map[(index+(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key,2,2,4
ms->n >= 2,2,2,4
 pMem->enc!=desiredEnc ,2,2,4
 p->pLimit==0 ,2,2,4
 pgno>0 ,2,2,4
"charset_convert(""UTF-8"", ""UTF-8"", ""x\301\277y"", 4, 0, &n) == 2 && n == 4",2,2,4
!pExpr,2,2,4
 pData[0]=='\0' ,2,2,4
err == REG_ESPACE,2,2,4
IOOOBJECT(self)->pos <= INT_MAX - l,2,2,4
 n+nData<=pReader->nData ,2,2,4
 pParse->nested<10 ,2,2,4
channels > 0 && channels <= FLAC_SHARE__MAX_SUPPORTED_CHANNELS,2,2,4
 argc>=3 ,2,2,4
 iEndOffset>=iStartOffset ,2,2,4
 (isTemp & 1)==isTemp ,2,2,4
header->blocksize > 0 && header->blocksize <= FLAC__MAX_BLOCK_SIZE,2,2,4
stack_pointer >= f->f_valuestack,2,2,4
 p->isTable ,2,2,4
nChars >= 0,2,2,4
 EIGHT_BYTE_ALIGNMENT(p) ,2,2,4
s->duration > 0,2,2,4
 pC->nullRow==0 ,2,2,4
 p->addrOpenEphm[1] == -1 ,2,2,4
 pK->flags & MEM_Blob ,2,2,4
"charset_wctomb(charset, s, 0x4000000) == 6 && !strcmp(s, ""\374\204\200\200\200\200."")",2,2,4
 start>=pPage->hdrOffset+6+(pPage->leaf?0:4) ,2,2,4
 p==0 || sqlite3_mutex_held(p->db->mutex) ,2,2,4
h0->cur_pic_ptr->f.data[0],2,2,4
 pOp->p4.i>0 && pOp->p4.i<=p->nMem ,2,2,4
!pCur->aOverflow[iIdx] || pCur->aOverflow[iIdx]==nextPage,2,2,4
pos >= 0 && size >= 0,2,2,4
 cbrk>=cellOffset+2*nCell ,2,2,4
"charset_mbtowc(charset, &wc, ""\374\204\200\200\200\200"", 9) == 6 && wc == 1 << 26",2,2,4
result != input,2,2,4
 compatible[RTREE_EQ & 7]==0 ,2,2,4
combining_prefixes_len < sizeof(combining_prefixes)/sizeof(combining_prefixes[0]),2,2,4
 isOpen(pPager->jfd) || pPager->pInJournal==0 ,2,2,4
!attr->unknown1,2,2,4
 (pTerm->wtFlags & TERM_ORINFO)!=0 ,2,2,4
delim != NULL,2,2,4
 (db->flags & SQLITE_InTrans)==0 || db->autoCommit ,2,2,4
 EIGHT_BYTE_ALIGNMENT(*ppFrom) ,2,2,4
 TK_SLASH==OP_Divide ,2,2,4
 WO_EQ==SQLITE_INDEX_CONSTRAINT_EQ ,2,2,4
h->ref_list[1][0].f.reference & 3,2,2,4
avctx,2,2,4
flags == AVIO_FLAG_WRITE || flags == AVIO_FLAG_READ,2,2,4
FLAC__format_sample_rate_is_valid(metadata->data.stream_info.sample_rate),2,2,4
 sizeof(i64)==8 || sizeof(i64)==4 ,2,2,4
 pPager->doNotSync==0 ,2,2,4
source_bps >= 4,2,2,4
 db->init.iDb==0 || db->init.busy ,2,2,4
 TK_LSHIFT==OP_ShiftLeft ,2,2,4
 countWriteCursors(pBt)==0 ,2,2,4
lp2 - (s->lhp[1-s->highres[plane]][plane] + (stripe * ll + (i>>1)) * lbpl) == (ptrdiff_t) j >> 4,2,2,4
 p->isSorted==0 ,2,2,4
 pTo->db==pFrom->db ,2,2,4
decoder->private_->tell_callback,2,2,4
 (p->flags & MEM_Agg)==0 ,2,2,4
iterator->depth > 0,2,2,4
 pModule->xNext ,2,2,4
 stateno<=YY_REDUCE_MAX ,2,2,4
order <= FLAC__MAX_LPC_ORDER,2,2,4
min >= 0,2,2,4
 pMem1->enc==SQLITE_UTF8 || pMem1->enc==SQLITE_UTF16LE || pMem1->enc==SQLITE_UTF16BE ,2,2,4
!pic->hwaccel_picture_private,2,2,4
 iOutType<=iType ,2,2,4
 mem3.aPool[i+nBlock-1].u.hdr.prevSize==nBlock ,2,2,4
 (chngToIN&(chngToIN-1))==0 ,2,2,4
 1+n<=nData ,2,2,4
 c->iCursorType==idxNum ,2,2,4
 nNew>0 ,2,2,4
 1+n+nTerm<nData ,2,2,4
 pList==0 || IsVirtual(pTab)==0 ,2,2,4
 sqlite3PagerIswriteable(pPage->pDbPage) || pPage->nOverflow==1 ,2,2,4
!(x & (~JAS_ONES(bitpos + 1))),2,2,4
(best_mean >= 0 && best_mean<256) || !intra,2,2,4
 pPg->pPager==pPager || pPg->pPager==0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\360\220\200\300"", 9) == -1",2,2,4
"charset_convert(""iso-8859-2"", ""utf-8"", ""\300"", 1, &q, &n) == 0 && n == 2 && !strcmp(q, ""\305\224"")",2,2,4
 isDirectMode==0 ,2,2,4
 pPager->exclusiveMode || pPager->state==PAGER_SHARED ,2,2,4
val >= 0,2,2,4
 pToken->n<=nToken ,2,2,4
 payloadSize==0 || zRec!=0 ,2,2,4
pb->seekable,2,2,4
 pChild->isInit==0 ,2,2,4
offset<=LONG_MAX,2,2,4
 pTo->nVar==pFrom->nVar ,2,2,4
PyList_Check(names),2,2,4
node *tree,2,2,4
 nSource1>0 && pSource1!=NULL ,2,2,4
 pOpen->pNext->pPrev==pOpen ,2,2,4
 iLastDocid==iFirstDocid-iDocid+iLastDocidDelta ,2,2,4
nch >= 3,2,2,4
b.imag != 0.0,2,2,4
bufsize > 1,2,2,4
gbo->currkey == NULL,2,2,4
!options.common.sector_align || options.sample_rate == 44100,2,2,4
 pcacheCheckSynced(pCache) ,2,2,4
0 != decoder->private_->input,2,2,4
 db->u1.isInterrupted ,2,2,4
!accum,2,2,4
(unsigned int) row_convert(row) < 120,2,2,4
 pOp->p3==0 ,2,2,4
max_order > 0,2,2,4
attrname,2,2,4
tmp->right == node,2,2,4
 zData!=0 ,2,2,4
columnName && *columnName,2,2,4
packet_hdr_size <= asf->packet_size_left,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_WIDTH_LEN%8,2,2,4
 nField>0 && pOp->p2>0 && pOp->p2+nField<=p->nMem+1 ,2,2,4
 !isRowid ,2,2,4
accumbits >= basebits,2,2,4
object_array[i].num_indices > 0,2,2,4
PyList_Check(consts),2,2,4
 nTerm!=0 ,2,2,4
 db==0 || p->pUnlockConnection!=db ,2,2,4
p_va != NULL,2,2,4
IS_REACHABLE(wr),2,2,4
s->linesize >= 32,2,2,4
"charset_mbtowc(charset, &wc, ""b"", 1) == 1 && wc == 'b'",2,2,4
!(d->test_only && d->analysis_mode),2,2,4
 pLock->pBtree->inTrans>=pLock->eLock ,2,2,4
s != NULL,2,2,4
 !pPage->intKey ,2,2,4
 pVtab->nRef>0 ,2,2,4
 ppStmt ,2,2,4
dsg->mark != '\0',2,2,4
PyString_Check(repr),2,2,4
 pDbPage->pBt==pBt ,2,2,4
0 == decoder_session->cue_specification,2,2,4
 pPage->pLruPrev==0 && pPage->pLruNext==0 ,2,2,4
 r == result + len ,2,2,4
 pSelect!=0 ,2,2,4
 pTab->addColOffset>0 ,2,2,4
prof->numchans == 3 && prof->numrefchans == 3,2,2,4
ret == cnt,2,2,4
dbOther,2,2,4
codestr[i*3] == LOAD_CONST,2,2,4
callback != NULL,2,2,4
!(v & (~JAS_ONES(n))),2,2,4
 get4byte(&pParent->aData[pParent->hdrOffset+8])==iChild ,2,2,4
 aArg==aDyn || (aDyn==0 && aArg==aStatic) ,2,2,4
 iData+nData<=pWriter->data.nData ,2,2,4
s->unrestricted_mv == 0,2,2,4
PyInt_Check(factor) || PyLong_Check(factor),2,2,4
 pOp->p1>=0 && pOp->p1<p->nCursor ,2,2,4
"charset_wctomb(charset, s, 1 << 31) == -1 && !strcmp(s, ""......."")",2,2,4
 pOp!=0 ,2,2,4
options->args.checks.num_shorthand_ops == 0,2,2,4
 rc==SQLITE_OK || rc==SQLITE_LOCKED_SHAREDCACHE ,2,2,4
 pCol->iMem>0 ,2,2,4
 READ_LOCK+1==WRITE_LOCK ,2,2,4
coc->compparms.numdlvls <= 32,2,2,4
 TK_BITNOT==OP_BitNot ,2,2,4
 pSrcIdx ,2,2,4
p != end,2,2,4
"charset_mbtowc(charset, 0, 0, 0) == 0",2,2,4
compinfos,2,2,4
 pOp->opcode==OP_IdxGE ,2,2,4
 pMem1->enc==pMem2->enc ,2,2,4
qmin <= qmax,2,2,4
vsign != 0,2,2,4
 !sqlite3LruStatements.pLast ,2,2,4
dir_len >= sizeof (iso9660_dir_t),2,2,4
 p->locked || !p->sharable ,2,2,4
!IS_INTRA(s->current_picture.mb_type[mb_xy]),2,2,4
 sqlite3_mutex_held(p->s.db->mutex) ,2,2,4
pchg,2,2,4
0 != chain->tail,2,2,4
sizeof(common_options.compression_settings) >= sizeof(option_values.compression_settings),2,2,4
iBuffer<nBuffers && pBuffers[iBuffer].nData==0,2,2,4
pos >= 0 && pos <= size,2,2,4
 (max_rice_partition_order == 0 && blocksize >= predictor_order) || (max_rice_partition_order > 0 && blocksize >> max_rice_partition_order > predictor_order) ,2,2,4
errno,2,2,4
wr->wr_object == Py_None,2,2,4
prof->refclrspc == JAS_CLRSPC_CIEXYZ,2,2,4
 p2>0 ,2,2,4
 p->iStatement==(db->nStatement+db->nSavepoint) ,2,2,4
l < len,2,2,4
sizeof(buffer) >= FLAC__STREAM_METADATA_CUESHEET_RESERVED_LEN/8,2,2,4
 p->eType==FTSQUERY_AND ,2,2,4
sd && sd->instrument && i >= 0 && i < sd->n_instruments,2,2,4
 left<=right ,2,2,4
 rc!=SQLITE_OK || pLeafPage->pgno==leafPgno ,2,2,4
 pKey->flags & MEM_Int ,2,2,4
gc->gc.gc_refs > 0,2,2,4
 TK_GE==TK_EQ+4 ,2,2,4
y > 0,2,2,4
fm->format_block < fm->audio_block,2,2,4
mp->ma_used == 0,2,2,4
 sb->b.nData>0 ,2,2,4
 pChild->nOverflow==0 ,2,2,4
write_len == data_len,2,2,4
sizeof(common_options.pictures) >= sizeof(option_values.pictures),2,2,4
 allowedOp(pExpr->op) && pExpr->op!=TK_IN ,2,2,4
!builtins || PyDict_Check(builtins),2,2,4
 db->aDb[1].pSchema ,2,2,4
 pPage->nCell>0 ,2,2,4
 pFrom->db==0 || sqlite3_mutex_held(pFrom->db->mutex) ,2,2,4
 n==4-4*pPage->leaf ,2,2,4
 pEType!=0 ,2,2,4
share__optind <= argc,2,2,4
select_rv != 0,2,2,4
 pPager->tempFile==0 || pPager->state>=PAGER_EXCLUSIVE ,2,2,4
source,2,2,4
usednew <= totalnew,2,2,4
delstr != NULL,2,2,4
"PyType_IsSubtype(type, &PyString_Type)",2,2,4
pPager,2,2,4
"!""'type' not in [duoxX]""",2,2,4
 pbegin>addr ,2,2,4
i >= 0 && i <= pxformseq->numpxforms,2,2,4
outcmptfmts,2,2,4
0 != peak,2,2,4
 !isSavepnt ,2,2,4
 (pVal->flags & (MEM_Ephem|MEM_Static))!=0 ,2,2,4
 iStart>=0 ,2,2,4
comment_num <= object->data.vorbis_comment.num_comments,2,2,4
dfs->getc,2,2,4
num_jumps == 0,2,2,4
 (pMem->flags & (MEM_Int|MEM_Real|MEM_Null))==0 ,2,2,4
 tempFile==PAGER_LOCKINGMODE_NORMAL || tempFile==PAGER_LOCKINGMODE_EXCLUSIVE ,2,2,4
PyTuple_CheckExact(t),2,2,4
 pName1->z ,2,2,4
"charset_mbtowc(charset, &wc, ""\374\203\277\277\277\277"", 9) == -1",2,2,4
s->picture_ptr == &s->picture,2,2,4
gc->gc.gc_refs == GC_REACHABLE,2,2,4
oldstate == PyGILState_UNLOCKED,2,2,4
encoder_session->total_samples_to_encode > 0,2,2,4
 N >= sizeof(*p) ,2,2,4
avg[b] >= 0,2,2,4
(cc & 1) == 0,2,2,4
 rc==SQLITE_ERROR ,2,2,4
i >= 0 && i < pxformseq->numpxforms,2,2,4
 nCellKey>intKey ,2,2,4
"pool_is_in_list(p, usedpools[sz + sz])",2,2,4
"charset_mbtowc(charset, 0, 0, 1) == 0",2,2,4
iDb<=0,2,2,4
 n==0 || (pOp->p2>0 && pOp->p2+n<=p->nMem+1) ,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_DEPTH_LEN%8,2,2,4
 p1+n<=p2 || p2+n<=p1 ,2,2,4
"charset_convert(""utf-8"", ""iso-8859-2"", ""\305\224"", 2, &q, &n) == 0 && n == 1 && !strcmp(q, ""\300"")",2,2,4
"FD_ISSET(s->sock_fd, &fds_exc)",2,2,4
s->unrestricted_mv == 1,2,2,4
 offset==ii*(4+pPager->pageSize) ,2,2,4
attr->lang_code == 0 || attr->lang_code == 0xffff,2,2,4
decoder->private_->seek_callback,2,2,4
!options.common.sector_align || options.channels == 2,2,2,4
 pKeyDup==0 ,2,2,4
x == lastx,2,2,4
src_mgr->data,2,2,4
hashIsEmpty(pRtree),2,2,4
 *pp==pId ,2,2,4
page->header != 0,2,2,4
target_bps < 32,2,2,4
compparms->numdlvls <= 32,2,2,4
 idx>=0 && idx<pPage->nCell ,2,2,4
s->version >= 2,2,2,4
 pTable->aCol==0 ,2,2,4
 pExpr->op==TK_EQ || pExpr->op==TK_IN || pExpr->op==TK_LT || pExpr->op==TK_GT || pExpr->op==TK_GE || pExpr->op==TK_LE || pExpr->op==TK_NE ,2,2,4
 (p->selFlags & SF_Expanded)!=0 ,2,2,4
 (pMem->flags & MEM_Null)==0 ,2,2,4
table[u1] >= 0,2,2,4
 p->owner==tid ,2,2,4
header->bits_per_sample > 0 && header->bits_per_sample <= (1u << FLAC__STREAM_METADATA_STREAMINFO_BITS_PER_SAMPLE_LEN),2,2,4
 isSavepnt || pDone==0 ,2,2,4
0 != *block,2,2,4
pBt[0],2,2,4
 (h>='0' && h<='9') || (h>='a' && h<='f') || (h>='A' && h<='F') ,2,2,4
new_capacity >= bw->words + ((bw->bits + bits_to_add + FLAC__BITS_PER_WORD - 1) / FLAC__BITS_PER_WORD),2,2,4
 sizeof(v)==sizeof(pMem->r) ,2,2,4
pX->pLeft,2,2,4
td->td_planarconfig == PLANARCONFIG_CONTIG,2,2,4
 sqlite3PagerIswriteable(pNew->pDbPage) ,2,2,4
self->ob_size <= self->allocated || self->allocated == -1,2,2,4
bit_depth<=8,2,2,4
 !db->pVTab ,2,2,4
langname != NULL,2,2,4
 nBytes>0 ,2,2,4
i >= 0 && i < deque->len,2,2,4
index_num <= object->data.cue_sheet.tracks[track_num].num_indices,2,2,4
!channel->write_buf || channel->write_buf->len == 0,2,2,4
page->header_len == 0,2,2,4
ncs <= ncharsets,2,2,4
 (char*)&likeInfoAlt == (char*)&likeInfoAlt.matchAll ,2,2,4
parameter < 8*sizeof(uval),2,2,4
0 != object->data.cue_sheet.tracks,2,2,4
(desc->start_sigrenderer && desc->end_sigrenderer) || (!desc->start_sigrenderer && !desc->end_sigrenderer),2,2,4
outbuf + outbytes_left == channel->encoded_read_buf->str + channel->encoded_read_buf->len,2,2,4
colr->iccp,2,2,4
 iDb>=2 ,2,2,4
USE_BUF (channel) == channel->encoded_read_buf,2,2,4
PyFile_Check(self),2,2,4
tx > 31 || a == ((line_h1 >> (tx - 3)) & 0x004),2,2,4
*p == ';',2,2,4
narenas < maxarenas,2,2,4
cblk->mqenc,2,2,4
 pArray->nMutex>=0 ,2,2,4
av_fifo_size(stream->fifo) > 0,2,2,4
 &pKey->aSortOrder[nCol]==&(((u8 *)pKey)[nBytes]) ,2,2,4
PyString_AsString(repr)[PyString_Size(repr)-1] == ',2,2,4
 MAX_SECTOR_SIZE>=512 ,2,2,4
 rc==SQLITE_OK || pFile->pMethods==0 ,2,2,4
row <= 0x7f,2,2,4
 (pExpr->iTable&0x0000FFFF)==pExpr->iTable ,2,2,4
"charset_wctomb(charset, s, 0) == 1 && s[0] == '\0' && s[1] == '.'",2,2,4
 yyact == YY_ERROR_ACTION ,2,2,4
 pLock->cnt>0 ,2,2,4
 rc!=SQLITE_OK ,2,2,4
 iCol>=0 && iCol<pEList->nExpr ,2,2,4
1 <= *m && *m <= 12,2,2,4
 pOp->p4.z==0 || pOp->p3==1 ,2,2,4
got_ownership,2,2,4
from->num_indices == 0,2,2,4
 iByte==nResultBytes ,2,2,4
"charset_mbtowc(charset, 0, ""b"", 1) == 1",2,2,4
codec->codec_id == CODEC_ID_VORBIS,2,2,4
cod->numlyrs > 0 && cod->compparms.numdlvls <= 32,2,2,4
metadata->data.stream_info.max_blocksize < (1u << FLAC__STREAM_METADATA_STREAMINFO_MAX_BLOCK_SIZE_LEN),2,2,4
 pOp->p4.pI64!=0 ,2,2,4
itemsize <= sizeof(tmp),2,2,4
cod->compparms.numdlvls == cod->compparms.numrlvls - 1,2,2,4
0 != mime_type,2,2,4
 len<=nBuf ,2,2,4
count == tuples->len,2,2,4
 n>5 && n<=9 ,2,2,4
value-pagestart[index] < 0x100,2,2,4
seg->stream,2,2,4
 pBt->inTransaction==TRANS_WRITE && p->inTrans==TRANS_WRITE ,2,2,4
tzinfo,2,2,4
0 != description,2,2,4
 idx>=1 && idx<=15 ,2,2,4
 zSql!=0 ,2,2,4
 keyClass>=FTS3_HASH_STRING && keyClass<=FTS3_HASH_BINARY ,2,2,4
sizeof(*src) == sizeof(**dst),2,2,4
(vm->state).pgc->cell_playback[(vm->state).cellN - 1].block_type == 1,2,2,4
 PAGER_LOCKINGMODE_QUERY<0 ,2,2,4
 pReader->nData>=0 ,2,2,4
context->tag_stack == NULL,2,2,4
 !pWriter->dlw->has_iPrevDocid || iDocid>pWriter->dlw->iPrevDocid ,2,2,4
PyString_CheckExact(tmp),2,2,4
lang != NULL,2,2,4
BtCursor *pCur,2,2,4
"charset_mbtowc(charset, &wc, ""\360\220\300\200"", 9) == -1",2,2,4
av_log2(b)>=0,2,2,4
mp->ob_type == &PyDict_Type,2,2,4
!tile->cp,2,2,4
 pVtab->pModule!=0 ,2,2,4
 pTerm->eOperator==WO_OR ,2,2,4
got_bytes > 0 || count < 6,2,2,4
 pC->pVtabCursor==0 ,2,2,4
(code & 0x8000) == 0,2,2,4
options->args.checks.num_major_ops == 1,2,2,4
ch == 0 && token != G_TOKEN_NONE,2,2,4
 z<=zTerm ,2,2,4
 1==sqlite3BtreeIsInTrans(pMain) ,2,2,4
bit_count == 8,2,2,4
 zColl ,2,2,4
blockstack_top > 0,2,2,4
l == r,2,2,4
 pPager->noSync==0 && !MEMDB ,2,2,4
 pPager->tempFile==0 || pPager->changeCountDone ,2,2,4
 (pMem->n+(desiredEnc==SQLITE_UTF8?1:2))<=len ,2,2,4
(size_t) i < dimension_of(gfc->scalefac_band.l),2,2,4
bw->capacity == bw->words,2,2,4
 !MEMDB && pPager->noSync==0 ,2,2,4
(isReadonly==0 || isReadWrite==0) && (isReadWrite || isReadonly),2,2,4
(sockindex <= 1) && (sockindex >= -1),2,2,4
 sqlite3BtreeIsInTrans(pBt) ,2,2,4
 i>=0 && i<sqlite3GlobalConfig.nScratch ,2,2,4
 maxRootPgno!=PENDING_BYTE_PAGE(pBt) ,2,2,4
n == 0,2,2,4
 TK_LE>TK_EQ && TK_LE<TK_GE ,2,2,4
 j+nStr-i+1==nOut ,2,2,4
 pItem && pSrc->nSrc==1 ,2,2,4
"pParent, idx, pPage->pgno",2,2,4
!options.common.replay_gain || options.channels <= 2,2,2,4
render->filled_mv_blocks_num <= render->allocated_mv_blocks,2,2,4
 iIdx<sizeof(zIdxStr)-1 ,2,2,4
PyTuple_Check(slots),2,2,4
 pBt->usableSize<=pBt->pageSize && pBt->usableSize+255>=pBt->pageSize,2,2,4
 mem0.nScratchFree<(u32)sqlite3GlobalConfig.nScratch ,2,2,4
 pPager->state>=PAGER_EXCLUSIVE ,2,2,4
wrote_bytes == 0,2,2,4
 srcType==MEM_Ephem || srcType==MEM_Static ,2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\277\277\377\277"", 9) == -1",2,2,4
n >= 2,2,2,4
op == TK_UPDATE || op == TK_INSERT || op == TK_DELETE,2,2,4
 op!=TK_GE || c==WO_GE ,2,2,4
"charset_convert(""UTF-8"", ""UTF-8"", p, 10, &q, &n) == 0 && n == 10 && !strcmp(p, q)",2,2,4
decoder->private_->cpuinfo.type == FLAC__CPUINFO_TYPE_IA32,2,2,4
pa + na == pb,2,2,4
" NULL==""Unhandled DL_DEFAULT value""",2,2,4
lo && hi,2,2,4
 pExpr->op!=TK_LT || op==OP_Ge ,2,2,4
bases != NULL,2,2,4
 pX->op==TK_IN ,2,2,4
 pLevel->plan.wsFlags & WHERE_IN_ABLE ,2,2,4
__argc >= ARG_COUNT,2,2,4
 rc==SQLITE_OK || pStmt==0 ,2,2,4
 cellbody==pPage->pBt->usableSize ,2,2,4
"charset_wctomb(charset, s, 0x3ffffff) == 5 && !strcmp(s, ""\373\277\277\277\277.."")",2,2,4
encoder->private_->verify.input_fifo.tail <= OVERREAD_,2,2,4
context->awaiting_pop,2,2,4
lookahead_length <= wanted,2,2,4
 argc>1 ,2,2,4
!pic->f.hwaccel_picture_private,2,2,4
dsg->width == 1 || dsg->width == 2,2,2,4
 pTerm->sortOrder==0 || pTerm->sortOrder==1 ,2,2,4
sizeof(buffer) >= FLAC__STREAM_METADATA_PICTURE_DESCRIPTION_LENGTH_LEN/8,2,2,4
frame_header->blocksize > 0,2,2,4
target_bps >= 4,2,2,4
!bparent || bparent->left == balance || bparent->right == balance,2,2,4
*code == Cfailure_jump,2,2,4
jambuf,2,2,4
 var<COLNAME_N ,2,2,4
object->data.cue_sheet.num_tracks == 0,2,2,4
 z==0 ,2,2,4
 k>=1 && k+n-1<=p->nMem ,2,2,4
left_xy[LTOP] == left_xy[LBOT],2,2,4
 pCrsr ,2,2,4
 pList->nExpr==2 ,2,2,4
s0->current_picture_ptr->data[0],2,2,4
 pCur->apPage[pCur->iPage]->isInit ,2,2,4
" pCur->apPage[pCur->iPage-1], pCur->aiIdx[pCur->iPage-1], pCur->apPage[pCur->iPage]->pgno ",2,2,4
 (pVal->flags&MEM_Blob)==0 ,2,2,4
PyString_Check(lineno_obj),2,2,4
 pParent!=p ,2,2,4
 pPrev && pPrev->pLeft && pPrev->pRight==0 ,2,2,4
put_bits_count(&dst->pb) % 8 ==0,2,2,4
bitpos >= 0,2,2,4
(size_t)nBuf>=(sizeof(time_t)+sizeof(int)),2,2,4
fip != NULL,2,2,4
 nByte>=0 ,2,2,4
" sqlite3ExprIsInteger(pE, &i)==0 ",2,2,4
JAS_STREAM_MAXPUTBACK >= JP2_VALIDATELEN,2,2,4
do_independent || do_mid_side,2,2,4
0 == FLAC__STREAM_METADATA_PICTURE_DATA_LENGTH_LEN%8,2,2,4
fracbits < 32,2,2,4
 pToken->z!=0 ,2,2,4
map_created,2,2,4
peak >= 0.0,2,2,4
seg->type == JPC_SEG_MQ,2,2,4
sinfo->n_allocated > 0,2,2,4
prfprof,2,2,4
 pBlob==sqlite3_value_blob(argv[0]) ,2,2,4
 p->pPrev==0 || p->pPrev->db==p->db ,2,2,4
 pTab && !pTab->pSelect && pExpr ,2,2,4
 !pBt->pCursor ,2,2,4
 pIdx->onError!=OE_None ,2,2,4
start_y < end_y && block_h > 0,2,2,4
 (pPager->state==PAGER_SHARED) || (pPager->exclusiveMode && pPager->state>PAGER_SHARED) ,2,2,4
"PyType_IsSubtype(type, &PyInt_Type)",2,2,4
 sqlite3PagerIswriteable(pRoot->pDbPage) ,2,2,4
 n>0 && p1>0 && p2>0 ,2,2,4
 i>=0 && i<6 ,2,2,4
0 <= temp && temp < 1000000,2,2,4
0 <= gi->region1_count && gi->region1_count < 8,2,2,4
orient == JPC_TSFB_LL,2,2,4
 pColl ,2,2,4
 pPage->pDirtyNext || pPage==p->pDirtyTail ,2,2,4
 pIx->pSchema==pTab->pSchema ,2,2,4
 pExpr->pTab && j<pExpr->pTab->nCol ,2,2,4
 cntNew[0]>0 || (pParent->pgno==1 && pParent->nCell==0) ,2,2,4
 pModule->xRowid ,2,2,4
(bitstream)->openmode_ & JPC_BITSTREAM_READ,2,2,4
 sqlite3_mutex_held(p->pBt->mutex) ,2,2,4
ts != AV_NOPTS_VALUE,2,2,4
mp->ma_fill <= mp->ma_mask,2,2,4
PyObject_IS_GC(op),2,2,4
PyList_Check(self),2,2,4
context->attr_names == NULL || context->attr_names[0] == NULL,2,2,4
" !ExprHasProperty(sAggInfo.aFunc[i].pExpr, EP_xIsSelect) ",2,2,4
 pLater->sharable ,2,2,4
 !pLater->locked || pLater->wantToLock>0 ,2,2,4
s->picture_number==0 || s->pp_time > 0,2,2,4
 idx<pPage->nCell ,2,2,4
lo < hi,2,2,4
metadata->data.stream_info.channels <= (1u << FLAC__STREAM_METADATA_STREAMINFO_CHANNELS_LEN),2,2,4
keyused < keymax,2,2,4
max_order >= MIN_LPC_ORDER && max_order <= MAX_LPC_ORDER && lpc_type > AV_LPC_TYPE_FIXED,2,2,4
encoder->protected_->blocksize <= 65535,2,2,4
 !zName || xDel!=SQLITE_DYNAMIC ,2,2,4
" strcmp(db->aDb[db->nDb-1].zName,""vacuum_db"")==0 ",2,2,4
 pPager->state>=SHARED_LOCK ,2,2,4
 nWrite==db->writeVdbeCnt ,2,2,4
metadata->data.stream_info.min_framesize < (1u << FLAC__STREAM_METADATA_STREAMINFO_MIN_FRAME_SIZE_LEN),2,2,4
aclass,2,2,4
 sqlite3_value_type(argv[1])==SQLITE_NULL || sqlite3_context_db_handle(context)->mallocFailed ,2,2,4
enc->codec_type == AVMEDIA_TYPE_AUDIO,2,2,4
kwlist != NULL,2,2,4
GET_TD_MICROSECONDS(self) >= 0,2,2,4
toobig <= 40,2,2,4
mp != NULL,2,2,4
p && p->eType==FTSQUERY_PHRASE ,2,2,4
 fg & MEM_Real ,2,2,4
 checkSavepointCount(db) ,2,2,4
x > 0.0,2,2,4
 p->op==TK_UNION ,2,2,4
 piStartChild!=NULL ,2,2,4
(vm->state).cellN > 0,2,2,4
len == numnondigits + numdigits,2,2,4
 db->nStatement>=0 && db->nSavepoint>=0 ,2,2,4
sc.c_encoding == NULL,2,2,4
*d > 0,2,2,4
block1->num_tracks > 0,2,2,4
 pTerm->pExpr ,2,2,4
fm->format_block,2,2,4
inbuf != channel->read_buf->str,2,2,4
 pCur->apPage[0]->nOverflow>0 ,2,2,4
 SQLITE_UTF8==1 && SQLITE_UTF16LE==2 && SQLITE_UTF16BE==3 ,2,2,4
 !(fg&(MEM_Str|MEM_Blob)) ,2,2,4
 n<=9 ,2,2,4
jpc_firstone(datalen) < cblk->numlenbits + jpc_floorlog2(passcount),2,2,4
 n+pWriter->data.nData-iDoclistData<iDoclistData ,2,2,4
nKey==elem->nKey,2,2,4
 !isFatalError(p->rc) ,2,2,4
 pNode->pNext==0 ,2,2,4
tx > 31 || a == ((line_h1 >> (tx - 5)) & 0x010),2,2,4
 db->aDb[iDb].pBt!=0 || iDb==1 ,2,2,4
0 != picture,2,2,4
 to_op==OP_ToText || aff!=SQLITE_AFF_TEXT ,2,2,4
" !ExprHasProperty(pE, EP_xIsSelect) ",2,2,4
MIN_MAGAZINE_SIZE >= 4,2,2,4
 leafCorrection==0 ,2,2,4
to,2,2,4
 mask==-1 || mask==0 ,2,2,4
 p->aColName!=0 ,2,2,4
p1[-3] == Cfailure_jump,2,2,4
 i > mem3.aPool[i-1].u.hdr.prevSize ,2,2,4
 p==pIndex ,2,2,4
track->num_indices > 0,2,2,4
 (new_size & (new_size-1))==0 ,2,2,4
dfs,2,2,4
 !pSelect && pCons && pEnd ,2,2,4
"charset_wctomb(charset, s, 0x200000) == 5 && !strcmp(s, ""\370\210\200\200\200.."")",2,2,4
*p == B_FILL_CHAR,2,2,4
ms.n == 1,2,2,4
newprof->attrtab,2,2,4
n < JPC_NUMZCCTXS,2,2,4
 pPage->pDirtyNext->pDirtyPrev==0 ,2,2,4
 cellbody>0 ,2,2,4
"charset_mbtowc(charset, 0, ""c"", 2) == 1",2,2,4
 cbrk+size<=usableSize && cbrk>=0 ,2,2,4
 iHeight>=0 ,2,2,4
 n<iDoclistData ,2,2,4
 nSource2>0 && pSource2!=NULL ,2,2,4
 pDest->nMem==nResultCol ,2,2,4
 nPrefix<nTerm ,2,2,4
port > 0,2,2,4
 iDb==1 || sqlite3BtreeHoldsMutex(db->aDb[iDb].pBt) ,2,2,4
 i<pKeyInfo->nField ,2,2,4
 pPg->pgno!=PAGER_MJ_PGNO(pPager) ,2,2,4
 pTabItem->pTab ,2,2,4
new_line - last_line < 255,2,2,4
m2 >= 0,2,2,4
 id-2 < (int)(sizeof(aStatic)/sizeof(aStatic[0])) ,2,2,4
"*fix, ==, 0",2,2,4
0 != data,2,2,4
 iTrigDb==iDb || iTrigDb==1 ,2,2,4
channels == 2,2,2,4
lookahead_length < CHUNK_OF_SAMPLES * bytes_per_wide_sample,2,2,4
 (pVal->flags & MEM_RowSet)==0 ,2,2,4
 p->pRight!=0 ,2,2,4
stack_pointer != NULL,2,2,4
 iData>=0 ,2,2,4
sys_page_size >= 2 * LARGEALIGNMENT,2,2,4
 *pData!='\0' ,2,2,4
kwds == NULL || PyDict_Check(kwds),2,2,4
 iTerm==nTerms ,2,2,4
0 != last_line_read,2,2,4
mp->ma_table != NULL,2,2,4
 pData!=NULL && nData!=0 ,2,2,4
 aData ,2,2,4
 pPage->iKey==iOld ,2,2,4
err_report != NULL,2,2,4
 eType==SQLITE_OPEN_MAIN_DB || eType==SQLITE_OPEN_TEMP_DB || eType==SQLITE_OPEN_MAIN_JOURNAL || eType==SQLITE_OPEN_TEMP_JOURNAL || eType==SQLITE_OPEN_SUBJOURNAL || eType==SQLITE_OPEN_MASTER_JOURNAL || eType==SQLITE_OPEN_TRANSIENT_DB ,2,2,4
 sqlite3GlobalConfig.mutex.xMutexAlloc==0 || sqlite3GlobalConfig.mutex.xMutexAlloc==p->xMutexAlloc ,2,2,4
(vm->state).cellN == (vm->state).pgc->nr_of_cells + 1,2,2,4
textprop.format == 8,2,2,4
 p->sharable==0 || p->locked==0 || sqlite3_mutex_held(p->pBt->mutex) ,2,2,4
 (pnErr->flags & (MEM_Str|MEM_Blob))==0 ,2,2,4
ms.pending[0].len == saved_ob_size,2,2,4
 pInfo->needToFreeIdxStr==0 || db->mallocFailed ,2,2,4
s->current_picture_ptr->pts != AV_NOPTS_VALUE,2,2,4
SQLITE_DEFAULT_PAGE_SIZE<=SQLITE_MAX_DEFAULT_PAGE_SIZE,2,2,4
cblktlx < cblkbrx && cblktly < cblkbry,2,2,4
node->parent,2,2,4
0 != tempfilename,2,2,4
this_frame_sample != target_sample,2,2,4
rv != -1,2,2,4
"charset_mbtowc(charset, &wc, ""\340\240\000"", 9) == -1",2,2,4
 yy_lookahead[i]==iLookAhead ,2,2,4
BUF_LEN (USE_BUF (channel)) != 0,2,2,4
 (db->flags & SQLITE_CommitBusy)==0 ,2,2,4
 pTable->pSchema==pTrigger->pSchema || iDb==1 ,2,2,4
 !pPrior->pLimit ,2,2,4
current->dispatching_sources == &current_source_link,2,2,4
JAS_STREAM_MAXPUTBACK >= MIF_MAGICLEN,2,2,4
 pOp->p5<db->nDb ,2,2,4
match_count==1,2,2,4
 (p->btreeMask & (1<<p1))!=0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\370\207\277\277\277"", 9) == -1",2,2,4
 db->aDb[iDb].pSchema ,2,2,4
 !db->xCollNeeded || !db->xCollNeeded16 ,2,2,4
 pPager->tempFile ,2,2,4
av_fifo_size(stream->fifo) == 0,2,2,4
lp2 - (s->lhp[(layer-1) &1][plane] + (stripe * ll + (s->i>>1)) * lbpl) == (ptrdiff_t) x >> 4,2,2,4
w->j_dc_vlc[mode]->table,2,2,4
hdr->magic == BMP_MAGIC,2,2,4
i > 0.0,2,2,4
 zSrcData ,2,2,4
 pMaskSet->n < ArraySize(pMaskSet->ix) ,2,2,4
 pBt->maxLeaf + 23 <= MX_CELL_SIZE(pBt) ,2,2,4
 totalSize+2*nCell<=pPage->nFree ,2,2,4
ssd >= nodes_next[k]->ssd,2,2,4
FLAC__REFERENCE_CODEC_MAX_BITS_PER_SAMPLE < 32,2,2,4
 i>=0 && i<p->db->nDb ,2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\277\277\277\277"", 9) == 6 && wc == 0x7fffffff",2,2,4
ost->audio_resample || dec->sample_fmt==enc->sample_fmt,2,2,4
 pExpr->op!=TK_NE || op==OP_Eq ,2,2,4
"charset_mbtowc(charset, &wc, ""\360\020\200\200"", 9) == -1",2,2,4
 TK_OR==OP_Or ,2,2,4
c->range > RangeLPS,2,2,4
factor == 1 || factor == -1,2,2,4
pPgnoNext,2,2,4
 !db->init.busy || !pSelect ,2,2,4
 !p->pGroupBy ,2,2,4
track_num <= object->data.cue_sheet.num_tracks,2,2,4
"charset_mbtowc(charset, &wc, ""\302\200"", 2) == 2 && wc == 128",2,2,4
 isPrefix || *piStartChild==*piEndChild ,2,2,4
 i!=POS_COLUMN ,2,2,4
FLAC__STREAM_METADATA_VORBIS_COMMENT_NUM_COMMENTS_LEN / 8 == sizeof(buffer),2,2,4
cpu,2,2,4
s->buf_ptr+3<s->buf_end,2,2,4
fm->audio_block,2,2,4
decoder_session->bps > 0 && decoder_session->bps <= 32,2,2,4
 pExpr->x.pList==0 ,2,2,4
 n+nSuffix<=pReader->nData ,2,2,4
thisaval,2,2,4
cuesheet->type == FLAC__METADATA_TYPE_CUESHEET,2,2,4
boolean == Py_True || boolean == Py_False,2,2,4
 pgnoRoot>=3 ,2,2,4
 pExpr->op!=TK_EQ || op==OP_Ne ,2,2,4
(bp->flags & B_INTEGRITY_MASK) == B_INTEGRITY,2,2,4
(type->tp_flags & Py_TPFLAGS_READYING) == 0,2,2,4
 !pPg->pageHash || pPager->errCode || (pPg->flags&PGHDR_DIRTY) || pPg->pageHash==pager_pagehash(pPg) ,2,2,4
 pPage->pgno==sqlite3PagerPagenumber(pPage->pDbPage) ,2,2,4
ret,2,2,4
index_num < object->data.cue_sheet.tracks[track_num].num_indices,2,2,4
 nKey==(i64)(int)nKey ,2,2,4
 desiredEnc==SQLITE_UTF16BE ,2,2,4
 pParent->isInit ,2,2,4
pTab && (pTab->tabFlags & TF_Virtual)!=0 && !pTab->pVtab,2,2,4
en_subshort[i + 3 - 2] > 0,2,2,4
seq2 != NULL,2,2,4
"charset_mbtowc(charset, &wc, ""\301\277"", 9) == -1",2,2,4
br->consumed_bits + bits <= br->bytes*8,2,2,4
 pOp->p4.ai ,2,2,4
bits_in_accum <= SHIFT,2,2,4
"domain, file, line, func, gstring->str",2,2,4
 addr<p->nOp ,2,2,4
 idx<=pPage->nCell ,2,2,4
0 == object->data.cue_sheet.tracks,2,2,4
!bval,2,2,4
0x88 <= c && c <= 0xfe,2,2,4
 pRight!=0 ,2,2,4
t2->ob_size <= 2*shift,2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\277\277\277\377"", 9) == -1",2,2,4
 lwr==upr+1 ,2,2,4
ms.pending[0].base == saved_ob_item,2,2,4
context->current_text_len > 0,2,2,4
block_length % FLAC__STREAM_METADATA_SEEKPOINT_LENGTH == 0,2,2,4
PyTZInfo_Check(tzinfo),2,2,4
 leafCur.aiIdx[leafCur.iPage]==0 ,2,2,4
asize > KARATSUBA_CUTOFF,2,2,4
 nActualData<=nData ,2,2,4
 p->locked==1 ,2,2,4
lo <= start && start <= hi,2,2,4
"pWriter->iType, pData, nData, &iLastDocidDelta",2,2,4
d != NULL,2,2,4
tok->decoding_state != 0,2,2,4
 pOp->p1+pOp->p2<=p->nMem+1 ,2,2,4
i >= 0 && i <= attrtab->numattrs,2,2,4
bitstream->openmode_ & JPC_BITSTREAM_WRITE,2,2,4
 !leavesReaderAtEnd(pReader) ,2,2,4
 TK_NOT==OP_Not ,2,2,4
 TK_BITAND==OP_BitAnd ,2,2,4
x & 0x80,2,2,4
path && *path == '/',2,2,4
 openList==pOpen ,2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\077\277\277\277"", 9) == -1",2,2,4
 pDest->pTable!=pSrc->pTable ,2,2,4
m_NumHashSlots > 0,4,0,4
 pEList->a[0].pExpr ,2,2,4
true != 2,2,2,4
 pPage == sqlite3PagerGetExtra(pPage->pDbPage) ,2,2,4
ch >= 'A',2,2,4
 !p || (p->locked==0 && p->sharable) || p->pBt->db==p->db ,2,2,4
self->proto >= 0 && self->proto < 256,2,2,4
render && render->xvmc_id == AV_XVMC_ID,2,2,4
 iStatement>p->db->nSavepoint ,2,2,4
 fd!=0 ,2,2,4
cbits + bits <= br->bytes*8,2,2,4
2 * asize <= bsize,2,2,4
channel->read_buf->len > 0,2,2,4
(pTab->tabFlags & TF_Virtual)!=0 && pTab->nCol==0 && pTab->aCol==0,2,2,4
 pCx->deferredMoveto==0 ,2,2,4
 pData[0]!='\0' ,2,2,4
tr_tm == TRIGGER_BEFORE || tr_tm == TRIGGER_AFTER ,2,2,4
 sqlite3_value_type(argv[1])!=SQLITE_NULL ,2,2,4
obj2,2,2,4
 azResult!=0 ,2,2,4
!decoder_session->until_specification->is_relative,2,2,4
outptr [2] != 0,2,2,4
 rc==SQLITE_OK || nPage==-1 ,2,2,4
num_files > 0,2,2,4
 pList->a!=0 || (pList->nExpr==0 && pList->nAlloc==0) ,2,2,4
0 != object_array && num_tracks > 0,2,2,4
 pPg || !MEMDB ,2,2,4
index >= 0,2,2,4
"!""winsound's whichOS has insane value""",2,2,4
self->ob_refcnt > 0,2,2,4
 sqlite3PagerPageRefcount(pData)>0 ,2,2,4
mctx->state_log != NULL,2,2,4
pxformseq->numpxforms < pxformseq->maxpxforms,2,2,4
used_bits % 8 == 0,2,2,4
 p->aCol==0 ,2,2,4
array_Check(a),2,2,4
 argc==3 || argc==2 ,2,2,4
aspect == 0 || aspect == 3,2,2,4
 pItem->notIndexed==0 && pItem->zIndex==0 ,2,2,4
 p && p->pMem && p->pFunc && p->pFunc->xStep ,2,2,4
0 != genres,2,2,4
"charset_mbtowc(charset, &wc, """", 2) == 0 && wc == 0",2,2,4
 pB!=0 ,2,2,4
 pToken->z[0]!=0 ,2,2,4
 pMatch->iCursor==pExpr->iTable ,2,2,4
 zAbsoluteName[0]=='/' ,2,2,4
payload_size - stuffing_size <= av_fifo_size(stream->fifo),2,2,4
 nReaders>0 ,2,2,4
i <= 576,2,2,4
 assert_pager_state(pPager) ,2,2,4
*codec_id != CODEC_ID_NONE,2,2,4
bitstream->openmode_ & JPC_BITSTREAM_READ,2,2,4
incomplete_len < 6,2,2,4
 p->zSql==0 ,2,2,4
 (offset-c)<JOURNAL_HDR_SZ(pPager) ,2,2,4
 pPage->pBt==pCur->pBt ,2,2,4
 ppStmt && *ppStmt==0 ,2,2,4
new_capacity > bw->capacity,2,2,4
 TK_AND==OP_And ,2,2,4
0 != seektable_template,2,2,4
mstabent,2,2,4
 eType!=PTRMAP_ROOTPAGE ,2,2,4
 nByte <= ( get2byte(&data[hdr+5])-(hdr+8+(pPage->leaf?0:4)+2*get2byte(&data[hdr+3])) ),2,2,4
 pNode->nRef==1 ,2,2,4
 pTable->nRef==0 ,2,2,4
"charset_mbtowc(charset, &wc, ""\375\077\277\277\277\277"", 9) == -1",2,2,4
render->next_free_data_block_num <= render->allocated_data_blocks,2,2,4
dopartial ? (!cblk->curseg) : 1,2,2,4
!pic->f.data[0],2,2,4
 szNew<=MX_CELL_SIZE(pBt) ,2,2,4
 pIdx!=0 ,2,2,4
scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG,2,2,4
f->f_name != NULL,2,2,4
 p->flags&PGHDR_DIRTY ,2,2,4
 !isOpen(pPager->jfd) ,2,2,4
hc >= -1 && hc <= 1 && vc >= -1 && vc <= 1,2,2,4
0 <= i,2,2,4
obj.id != -1,2,2,4
fn,2,2,4
bytes == 0,2,2,4
 pOrig->flags & EP_Resolved ,2,2,4
 p->wantToLock==1 ,2,2,4
(FLAC__STREAM_METADATA_CUESHEET_IS_CD_LEN + FLAC__STREAM_METADATA_CUESHEET_RESERVED_LEN)/8 <= sizeof(buffer),2,2,4
 db->aDb[i].pBt!=0 ,2,2,4
context->subparser_stack,2,2,4
 ((aCopy[i] - (u8*)0) & 7)==0 ,2,2,4
s->channels == 2,2,2,4
obj,2,2,4
 PAGER_LOCKINGMODE_NORMAL>=0 && PAGER_LOCKINGMODE_EXCLUSIVE>=0 ,2,2,4
 WO_GT==SQLITE_INDEX_CONSTRAINT_GT ,2,2,4
 iFreePg<iLastPg ,2,2,4
 pMem->u.pRowSet!=0 ,2,2,4
pict_type == rce->new_pict_type,2,2,4
bs->buf_byte_idx < BUFFER_SIZE,2,2,4
 (isSavepnt&~1)==0 ,2,2,4
 ppBtree != 0,2,2,4
0 <= *s && *s < 24*3600,2,2,4
 pU8[nReserve]==0x65 ,2,2,4
 pIdxInfo->idxStr==0 ,2,2,4
 pC->pseudoTable ,2,2,4
mms->header_parsed,2,2,4
JAS_STREAM_MAXPUTBACK >= PGX_MAGICLEN,2,2,4
"charset_mbtowc(charset, &wc, ""\360\220\000\200"", 9) == -1",2,2,4
 compatible[RTREE_LT & 7]==1 ,2,2,4
srctree->numleafsh_ == dsttree->numleafsh_ && srctree->numleafsv_ == dsttree->numleafsv_,2,2,4
block->data.vorbis_comment.num_comments == 0,2,2,4
e->encoder,2,2,4
prefix_index < (sizeof(decomp_prefix)/sizeof(*decomp_prefix)),2,2,4
 p->rc==SQLITE_OK || p->rc==SQLITE_BUSY || p->rc==SQLITE_NOMEM ,2,2,4
 pC->isTable || pOp->opcode==OP_RowKey ,2,2,4
 PENDING_BYTE+1==RESERVED_BYTE ,2,2,4
(signed)*pos != -1,2,2,4
this_time > 0,2,2,4
(vm->state).domain == VTSM_DOMAIN || (vm->state).domain == VMGM_DOMAIN || (vm->state).domain == FP_DOMAIN,2,2,4
clip_bm->bitmap.pitch >= 0,2,2,4
codepage,2,2,4
 j>=0 && j<p->nLabel ,2,2,4
0 != metadata,2,2,4
maxents >= tab->numattrs,2,2,4
 nCell==get2byte(&data[hdr+3]) ,2,2,4
0 <= n,2,2,4
" memcmp(&info, &pCur->info, sizeof(info))==0 ",2,2,4
gfc->blocktype_old[chn] != START_TYPE,2,2,4
 pPage->hdrOffset==(pPage->pgno==1 ? 100 : 0) ,2,2,4
analyser->lang != NULL,2,2,4
node->left,2,2,4
 pPager->state==PAGER_UNLOCK || sqlite3PcacheRefCount(pPager->pPCache)>0 || pgno==1 ,2,2,4
metadata->data.vorbis_comment.vendor_string.length == 0 || 0 != metadata->data.vorbis_comment.vendor_string.entry,2,2,4
 z!=0 || N==0 ,2,2,4
 pEList->nExpr==nColumn ,2,2,4
0 == from,2,2,4
 pOffset == 0 ,2,2,4
 subpage>0 ,2,2,4
 pgnoChild>0 ,2,2,4
 (combined_flags & MEM_RowSet)==0 ,2,2,4
PyTuple_Check(tmp),2,2,4
c->c_code != 0,2,2,4
 !pCur->apPage[0]->intKey || !pCur->pKey ,2,2,4
 sizeof(t)+sizeof(pid)<=(size_t)nBuf ,2,2,4
enc->tmpstream,2,2,4
 oc==OP_SeekLe || oc==OP_SeekGt ,2,2,4
map,2,2,4
pchgno < pchglist->numpchgs,2,2,4
width >= 0,2,2,4
 pCur->cachedRowid==iRowid ,2,2,4
 pSrcList && pSrcList->nSrc==1 ,2,2,4
"(((long)vp)&(FFMIN(w, STRIDE_ALIGN)-1)) == 0",2,2,4
 pOp->opcode==OP_ShiftRight ,2,2,4
 object != 0 ,2,2,4
 iAlias>0 && iAlias<=pParse->nAlias ,2,2,4
r->long_ref,2,2,4
 pSem ,2,2,4
 (pTrigger && tmask) || (pTrigger==0 && tmask==0) ,2,2,4
 z || v==0 || sqlite3VdbeDb(v)->mallocFailed ,2,2,4
hp - (s->lhp[ layer &1][plane] + (stripe * hl + s->i) * hbpl) == (ptrdiff_t) x >> 3,2,2,4
 pCur->apPage[0]->intKey || pIdxKey ,2,2,4
 info.nData==(u32)(nData+nZero) ,2,2,4
url,2,2,4
decoder->private_->frame.header.number_type == FLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER,2,2,4
count <= PY_SIZE_MAX - size,2,2,4
PyTuple_Size(t) == len,2,2,4
nut->next_startcode == 0,2,2,4
!url_is_streamed(pb),2,2,4
object->type == FLAC__METADATA_TYPE_APPLICATION,2,2,4
bits_per_sample >= FLAC__MIN_BITS_PER_SAMPLE && bits_per_sample <= FLAC__MAX_BITS_PER_SAMPLE,2,2,4
 !(fg&MEM_Zero) ,2,2,4
 nOrderBy>=nExpr || db->mallocFailed ,2,2,4
 !sqlite3IsNaN(*pOp->p4.pReal) ,2,2,4
i >= -1,2,2,4
 pPage->pDirtyPrev || pPage==p->pDirty ,2,2,4
left < FLAC__BITS_PER_WORD,2,2,4
 oc==OP_SeekLt || oc==OP_SeekLe ,2,2,4
!st->codec->codec,2,2,4
n >= pxformseq->numpxforms,2,2,4
 (wctrlFlags & WHERE_ONEPASS_DESIRED)==0 || pWInfo->nLevel==1 ,2,2,4
 encnames[SQLITE_UTF16LE].enc==SQLITE_UTF16LE ,2,2,4
pass0,2,2,4
(pg1+nPage)>pPg->pgno,2,2,4
 pPager->state>=PAGER_SHARED && !MEMDB ,2,2,4
 (pSelect->selFlags & SF_Resolved)!=0 ,2,2,4
index < st->nb_index_entries,2,2,4
upper_bound_sample >= lower_bound_sample,2,2,4
id >= 0 && name && ext && ops,2,2,4
child_watch_init_state == CHILD_WATCH_UNINITIALIZED,2,2,4
 db->aDb[i].zName!=0 ,2,2,4
 pBt->isExclusive==0 || pBt->pWriter==pLock->pBtree ,2,2,4
h->left_mb_xy[0] == h->left_mb_xy[1],2,2,4
 *piEndChild>=*piStartChild ,2,2,4
 pMem->db->mallocFailed || flags&(MEM_Str|MEM_Blob) ,2,2,4
j == nslots - add_dict - add_weak,2,2,4
 sqlite3PagerIswriteable(pTrunk->pDbPage) ,2,2,4
PyThread_get_key_value(autoTLSkey) == NULL,2,2,4
 rc!=SQLITE_OK || zErr==0 ,2,2,4
metadata->data.stream_info.max_framesize < (1u << FLAC__STREAM_METADATA_STREAMINFO_MAX_FRAME_SIZE_LEN),2,2,4
 pTab->dbMem==0 ,2,2,4
 cat == 1 || cat == 2 || cat == 4 || cat == 7 || cat == 8 || cat == 11 || cat == 12 ,2,2,4
 sizeof(u16)==2 ,2,2,4
 !db || sqlite3_mutex_held(db->mutex) ,2,2,4
a->multiplier == -TURN_STEPS,2,2,4
 pLoop->addrOpenEphm[1]<0 ,2,2,4
space_in_buf >= MAX_CHAR_SIZE,2,2,4
FLAC__STREAM_METADATA_PICTURE_COLORS_LEN % 8 == 0,2,2,4
aligned_memory == (gpointer) addr,2,2,4
!(stream->bufmode_ & JAS_STREAM_RDBUF),2,2,4
 pRet && pPrev ,2,2,4
 mem5.currentOut>=(size*mem5.nAtom) ,2,2,4
render->xvmc_id == AV_XVMC_ID,2,2,4
 (m-1)==toTheLeft ,2,2,4
nextchar != prevchar,2,2,4
s->last_picture_ptr && s->last_picture_ptr->data[0],2,2,4
pos_limit <= pos_max,2,2,4
b + bytes - synthetic_first_packet_body == sizeof(synthetic_first_packet_body),2,2,4
i <= track->n_events,2,2,4
 (p->locked==0 && p->sharable) || p->pBt->db==p->db ,2,2,4
 (((u8*)p - (u8*)0) & 7)==0 ,2,2,4
inprof,2,2,4
 idx<p->nResColumn ,2,2,4
 db->pSavepoint || db->isTransactionSavepoint==0 ,2,2,4
zreplacement != NULL,2,2,4
 p->selFlags & SF_Resolved ,2,2,4
object->data.seek_table.num_points == 0,2,2,4
streamno < streamlist->numstreams,2,2,4
 !pPager->tempFile && isOpen(pPager->fd) ,2,2,4
 pgno==MASTER_ROOT+1 ,2,2,4
 iStartOffset>=pWriter->iOffset ,2,2,4
0 != ucs2,2,2,4
 k>=0 && k<pSrc->nSrc ,2,2,4
 pPrior<pPage->aData || pPrior>=&pPage->aData[pBt->pageSize] || sqlite3PagerIswriteable(pPage->pDbPage) ,2,2,4
bin_len >= 0,2,2,4
 pCache!=0 ,2,2,4
Py_CHARMASK(*tok->str) == c,2,2,4
FLAC__MAX_SAMPLE_RATE <= 655350,2,2,4
 nArg<=(int)ArraySize(aStatic) || aArg==aDyn ,2,2,4
s->tx[plane] > 23 || a == ((line_h1 >> (6 + s->tx[plane])) & 0x004),2,2,4
 (pMem->flags & ~(MEM_Null|MEM_Agg))==0 ,2,2,4
PyTuple_Size(tuple) == 9,2,2,4
 pSelect->pOffset==0 ,2,2,4
"!""Unexpected return value from ucol_strcoll()""",2,2,4
"charset_mbtowc(charset, &wc, ""\375\277\277\277\077\277"", 9) == -1",2,2,4
self->ob_item != NULL || newsize == 0,2,2,4
"charset_convert(""UTF-8"", ""iso-8859-1"", ""\302\200\304\200x"", 5, &q, &n) == 1 && n == 3 && !strcmp(q, ""\200?x"")",2,2,4
0 != total_samples,2,2,4
 i<nTemp ,2,2,4
obj->ob_type->tp_weaklistoffset > 0,2,2,4
(unsigned)rnd<=5 && rnd!=4,2,2,4
bufmax > 0,2,2,4
s->sde[stripe][layer][plane] != SDE_DONE,2,2,4
 isAgg || pGroupBy ,2,2,4
 j<pTabList->nSrc ,2,2,4
FLAC__MIN_BITS_PER_SAMPLE == 4,2,2,4
pass->term == 1,2,2,4
 zB==sqlite3_value_text(argv[0]) ,2,2,4
pos <= size,2,2,4
 db->mallocFailed || pAuthArg ,2,2,4
 pthreadMutexHeld(p) ,2,2,4
saveFilename && *saveFilename,2,2,4
 TK_GT>TK_EQ ,2,2,4
 rc==SQLITE_CORRUPT ,2,2,4
year >= 0,2,2,4
 sqlite3VdbeDb(v)==db ,2,2,4
 p->z ,2,2,4
 i>=0 && i<YY_SZ_ACTTAB ,2,2,4
 pPrior!=0 && nByte>0 ,2,2,4
 b.rc!=SQLITE_OK ,2,2,4
isExclusive==0 || isCreate,2,2,4
 pMem->n<=nBuf ,2,2,4
 *ppDb || rc==SQLITE_NOMEM ,2,2,4
p < text_end,2,2,4
 pPage->aData ,2,2,4
text_info->n_lines >= 1,2,2,4
"max(FLAC__STREAM_METADATA_VORBIS_COMMENT_ENTRY_LENGTH_LEN, FLAC__STREAM_METADATA_VORBIS_COMMENT_NUM_COMMENTS_LEN) / 8 == sizeof(buffer)",2,2,4
 pHdr->pPrev->pNext==pHdr ,2,2,4
 p->pOffset==0 ,2,2,4
 (pMem->flags & MEM_Null)!=0 || pFunc==pMem->u.pDef ,2,2,4
(mb_type > B_SYM_16X16) && (mb_type < B_8X8),2,2,4
 pB->pNext==0 || pB->v<=pB->pNext->v ,2,2,4
 iDb==0 ,2,2,4
 j<=nOut ,2,2,4
 p->pNext==0 || p->pNext->db==p->db ,2,2,4
 pOp->p2<SQLITE_N_BTREE_META ,2,2,4
 rc!=SQLITE_OK || (nByte>0 && nByte<=nIn) ,2,2,4
 iSortOrder==0 || iSortOrder==1 ,2,2,4
 (pPager->state>=locktype) || (pPager->state==PAGER_UNLOCK && locktype==PAGER_SHARED) || (pPager->state==PAGER_RESERVED && locktype==PAGER_EXCLUSIVE) ,2,2,4
 !leafReaderAtEnd(pReader) ,2,2,4
codestr[i] == LOAD_CONST,2,2,4
bufp->used > 0,2,2,4
nch >= 1,2,2,4
h0->cur_pic_ptr->f.reference != DELAYED_PIC_REF,2,2,4
alignment == sys_page_size,2,2,4
 pCsr->eState!=CURSOR_REQUIRESEEK ,2,2,4
sizeof(options.pictures)/sizeof(options.pictures[0]) <= 64,2,2,4
from_buf_old_len > 0,2,2,4
 pBt->pPage1!=0 ,2,2,4
 pPage->leaf || !pPage->intKey ,2,2,4
cinfo->output_components == jas_image_numcmpts(dinfo->image),2,2,4
RTMP_SIG_SIZE <= len,2,2,4
t3->ob_size >= 0,2,2,4
0 != comment,2,2,4
pSelect->pSrc,2,2,4
 fd>=0 ,2,2,4
parameter <= 31,2,2,4
"PyType_IsSubtype(type, &PyFloat_Type)",2,2,4
 pOut->iType!=DL_POSITIONS_OFFSETS ,2,2,4
to_enc,2,2,4
 nResultBytes>0 ,2,2,4
 zRep==sqlite3_value_text(argv[2]) ,2,2,4
ntoappend >= 0,2,2,4
 pPager->state==PAGER_RESERVED || pPager->state>=PAGER_EXCLUSIVE ,2,2,4
 (p->selFlags & SF_Resolved)==0 ,2,2,4
(vm->state).cellN,2,2,4
0 != q,2,2,4
s->pict_type!=AV_PICTURE_TYPE_I,2,2,4
 eType==DL_POSITIONS || eType==DL_DOCIDS ,2,2,4
 mem3.szMaster>=nBlock ,2,2,4
s->linesize && s->uvlinesize,2,2,4
pad_bytes >= 0,2,2,4
"PyObject_IsInstance(self, (PyObject *)(descr->d_type))",2,2,4
 iBuddy>=0 ,2,2,4
 pExpr->op>=TK_GT && pExpr->op<=TK_GE ,2,2,4
 eDest==SRT_Discard ,2,2,4
" sizeof(r1)==sizeof(t2) && memcmp(&r1, &t2, sizeof(r1))==0 ",2,2,4
0 != sample_numbers || num == 0,2,2,4
bottomBand <= INT_MAX && bottomBand >= 0,2,2,4
 TK_GT<TK_LE ,2,2,4
 pListItem->pExpr->pColl ,2,2,4
j != -1.0 || ! PyErr_Occurred(),2,2,4
 pCur->eState==CURSOR_VALID || pCur->eState==CURSOR_INVALID ,2,2,4
 sMem.z==sMem.zMalloc ,2,2,4
n < JPC_NUMMAGCTXS,2,2,4
 sqlite3PcacheRefCount(pPager->pPCache)==0 ,2,2,4
 p->db==p->pBt->db ,2,2,4
PyString_Check(temp),2,2,4
range <=256 || !(s->codec_id == CODEC_ID_MPEG2VIDEO && s->avctx->strict_std_compliance >= FF_COMPLIANCE_NORMAL),2,2,4
sys_page_size == 0,2,2,4
PySeqIter_Check(iterator),2,2,4
oldx >= 0 && oldx < oldcmpt->width_ && oldy >= 0 && oldy < oldcmpt->height_,2,2,4
 ((u8 *)pOld-mem5.zPool)%mem5.nAtom==0 ,2,2,4
PyLong_Check(new),2,2,4
 pExpr->op!=TK_ISNULL || op==OP_NotNull ,2,2,4
PyWeakref_Check(self),2,2,4
 iEndChild<=iLeavesEnd ,2,2,4
context->state == STATE_ERROR,2,2,4
na == 1 && nb > 0,2,2,4
 pFrom->db==0 || pTo->db==0 || pFrom->db==pTo->db ,2,2,4
certFile,2,2,4
ebb >= 0,2,2,4
 eType!=SQLITE_OPEN_MAIN_JOURNAL || !isDelete ,2,2,4
"checkScalefactor(cod_info, vbrsfmin)",2,2,4
 eType==PTRMAP_OVERFLOW2 || eType==PTRMAP_OVERFLOW1 || eType==PTRMAP_BTREE || eType==PTRMAP_ROOTPAGE ,2,2,4
 pSrc->nSrc==1 ,2,2,4
oldtable != NULL,2,2,4
 (pDest->tabFlags & TF_Autoincrement)==0 ,2,2,4
!pCur->aOverflow,2,2,4
iccstream,2,2,4
PyDict_Size(c->c_freevars) == si.si_nfrees,2,2,4
flags == URL_WRONLY || flags == URL_RDONLY,2,2,4
 (mem3.aPool[i-1].u.hdr.size4x&1)==1 ,2,2,4
(i - offset) < size,2,2,4
 pOp->p3<pOp->p2 || pOp->p3>=pOp->p2+n ,2,2,4
ntostore > 0,2,2,4
 sqlite3_mutex_held(sqlite3VdbeDb(p)->mutex) ,2,2,4
 pIn1!=pOut ,2,2,4
numcolors <= RAS_CMAP_MAXSIZ,2,2,4
0 != object->data.vorbis_comment.comments,2,2,4
FLAC__MAX_BLOCK_SIZE <= 65535,2,2,4
(FLAC__uint64)decoder_session->until_specification->value.samples <= decoder_session->total_samples,2,2,4
l3_side->main_data_begin >= 0,2,2,4
b > 0,2,2,4
"charset_mbtowc(charset, &wc, ""\360\220\200\200"", 9) == 4 && wc == 1 << 16",2,2,4
 (isMainJrnl&~1)==0 ,2,2,4
POOL_SIZE * nfreepools == ARENA_SIZE,2,2,4
from_enc,2,2,4
precision >= FLAC__MIN_QLP_COEFF_PRECISION,2,2,4
 pTab->azModuleArg && pTab->azModuleArg[0] ,2,2,4
 iLastPg>nFin ,2,2,4
JAS_STREAM_MAXPUTBACK >= RAS_MAGICLEN,2,2,4
 pP1!=0 ,2,2,4
 pTerm->pExpr!=0 ,2,2,4
decoder_session->skip_specification->value_is_samples,2,2,4
(vm->state).pgc->cell_playback[(vm->state).cellN - 1].block_mode != 0,2,2,4
PyLong_CheckExact(tmp),2,2,4
last,2,2,4
 p->explain ,2,2,4
outb,2,2,4
 !p->pFirst ,2,2,4
encoder->private_->current_sample_number == 0,2,2,4
 q - (unsigned char *)p <= VARINT_MAX ,2,2,4
 pC->rowidIsValid ,2,2,4
 !pC->isTable ,2,2,4
dec->image->cmprof_,2,2,4
 iBlock+size-1<(u32)mem5.nBlock ,2,2,4
u2 == 0x02E5 || u2 == 0x02E9 || u2 == 0x0300 || u2 == 0x0301 || u2 == 0x309A,2,2,4
avail_data>0,2,2,4
"""out of memory blocks.""",2,2,4
(tmpval & (1 << (wordsize - 1))) == 0,2,2,4
 p->pPrior==0 ,2,2,4
!sf->rc_stat2[i],2,2,4
 iBlock>=0 && iBlock<mem5.nBlock ,2,2,4
best_residual_bits != 0,2,2,4
 (scheme == COMPRESSION_DEFLATE) || (scheme == COMPRESSION_ADOBE_DEFLATE),2,2,4
_Py_AS_GC(op)->gc.gc_refs == _PyGC_REFS_UNTRACKED,2,2,4
byte >= 0 && byte <= 255,2,2,4
 !pParent->leaf ,2,2,4
pg1<=pPg->pgno,2,2,4
 iSavepoint>=0 || op==SAVEPOINT_ROLLBACK ,2,2,4
num != NULL,2,2,4
 p->nOp - i >= 3 ,2,2,4
left_len < 6,2,2,4
pos + range >= 0 && pos + range <= size,2,2,4
decoder->private_->length_callback,2,2,4
 pPgHdr==0 || rc==SQLITE_OK ,2,2,4
h->slice_type_nos == AV_PICTURE_TYPE_B,2,2,4
 pReaders[i].iType==pReaders[0].iType ,2,2,4
pVal->enc==(enc & ~SQLITE_UTF16_ALIGNED) || pVal->db==0 || pVal->db->mallocFailed ,2,2,4
0 != *tempfilename,2,2,4
 pLock->locktype==0 ,2,2,4
 (sqlite3BtreeFlags(pC->pCursor) & BTREE_ZERODATA)==0 ,2,2,4
 p->sharable || 0==*ppIter ,2,2,4
(vm->state).pgc->goup_pgc_nr != 0,2,2,4
 p->apCsr[i]->isTable ,2,2,4
 (p->vvaFlags & EVVA_ReadOnlyToken)==0 ,2,2,4
 result[nResultBytes-1]==' ' ,2,2,4
!p->pLruNext || p->pLruNext->pLruPrev==p,2,2,4
d->d_type == type,2,2,4
pass->lyrno < 0 || pass->lyrno > lyrno,2,2,4
 p->pRightmost!=p ,2,2,4
 wrFlag==0 || wrFlag==1 ,2,2,4
 i==nByte ,2,2,4
PyList_Check(path_hooks),2,2,4
 p->pBt->inTransaction!=TRANS_NONE || p->pBt->nTransaction==0 ,2,2,4
 pParse->apVarExpr!=0 ,2,2,4
ch >= '0' && ch <= '9',2,2,4
decoder->private_->eof_callback,2,2,4
 pOrderBy->nExpr>0 ,2,2,4
ep->me_value == NULL,2,2,4
x != NULL,2,2,4
cs->num_tracks > 0,2,2,4
 op!=TK_EQ || c==WO_EQ ,2,2,4
 dest.nMem==nColumn ,2,2,4
 (pTerm->wtFlags & (TERM_DYNAMIC|TERM_ORINFO|TERM_ANDINFO))==0 ,2,2,4
asf->packet_timestamp_end >= asf->packet_timestamp_start,2,2,4
 pExpr->op!=TK_GT || op==OP_Le ,2,2,4
k < ncharsets,2,2,4
"pWriter->data.pData+iData, nData",2,2,4
"PyType_IsSubtype(type, &PyLong_Type)",2,2,4
s0->current_picture_ptr->reference != DELAYED_PIC_REF,2,2,4
pDest->eDest==SRT_Exists || pDest->eDest==SRT_Union || pDest->eDest==SRT_Except || pDest->eDest==SRT_Discard,2,2,4
 CURSOR_VALID==pCur->eState ,2,2,4
cod_info->width[sfb] >= 0,2,2,4
 sqlite3_mutex_notheld(p->pBt->mutex) ,2,2,4
 pWriter->nTermDistinct<=nStartingTerm ,2,2,4
b == gfc->npart_s,2,2,4
PyString_Check(format),2,2,4
 p->sharable || (p->pNext==0 && p->pPrev==0) ,2,2,4
 pSemantic ,3,0,3
msg != NULL,3,0,3
context->env->locked > 0,3,0,3
info != NULL,2,1,3
node->next == NULL,2,1,3
env != NULL,2,0,2
ucs4 != ENCA_CS_UNKNOWN,1,1,2
urlCheck,1,1,2
pthread_mutex_destroy(&mutex),1,1,2
max,1,1,2
written >= bytes,1,1,2
"pthread_mutex_init(&mutex,getRecusiveAttr())",1,1,2
!afq->frame_count,1,1,2
run >= 0,1,1,2
use_mmx_vfilter != ( yuv2planeX == yuv2planeX_10BE_c || yuv2planeX == yuv2planeX_10LE_c || yuv2planeX == yuv2planeX_9BE_c || yuv2planeX == yuv2planeX_9LE_c || yuv2planeX == yuv2planeX_16BE_c || yuv2planeX == yuv2planeX_16LE_c || yuv2planeX == yuv2planeX_8_c) || !ARCH_X86,1,1,2
pthread_mutex_destroy_result == 0,1,1,2
size == domoff,1,1,2
0 <= gfp->strict_ISO && 1 >= gfp->strict_ISO,1,1,2
mp[H_USED],1,1,2
conn->sockfd != CURL_SOCKET_BAD,1,1,2
pIterator->ppHashSlot >= m_rgpHashEntries && pIterator->ppHashSlot <= ppEnd,2,0,2
avctx->bits_per_coded_sample == 2,1,1,2
0 <= gfp->original && 1 >= gfp->original,1,1,2
s->dither.noise.ch_count == preout->ch_count,1,1,2
s->esc_pos == s->header_bits >> 3,1,1,2
!(mp3count > 0 && lame_get_frameNum(gfp) == pinfo->frameNum),1,1,2
LIBPOSTPROC_VERSION_MICRO >= 100,1,1,2
outlink->format == out_format,1,1,2
pot <= atempo->window,1,1,2
yadif->next || !val,1,1,2
file->name != NULL,1,1,2
password,1,1,2
"NEQ(RadioGain, GAIN_NOT_ENOUGH_SAMPLES)",1,1,2
0 <= gfp->VBR_q && 10 > gfp->VBR_q,1,1,2
res != NULL,2,0,2
 ( decoder->len_buildchar == 0 ) == ( decoder->buildchar == NULL ) ,1,1,2
out->bps == in->bps,1,1,2
size() > static_cast<MYSIZE>(nIndex),1,1,2
frame->video->h == link->h,1,1,2
(frame->perms & src->min_perms) == src->min_perms,1,1,2
 face && face->bdffont ,1,1,2
size >= 16,1,1,2
ratings,1,1,2
buf->audio->nb_samples > offset,1,1,2
"pthread_key_create(&key,NULL)",1,1,2
 err > 0 && err < TIXML_ERROR_STRING_COUNT ,1,1,2
0 <= gfp->findReplayGain && 1 >= gfp->findReplayGain,1,1,2
channels,1,1,2
data_bits == gi->part2_3_length,1,1,2
"(((long)vp)&(FFMIN(w, 8<<(HAVE_NEON|ARCH_PPC|HAVE_MMX))-1)) == 0",1,1,2
s->in_buffer.fmt == in_param->fmt,1,1,2
!_entered,1,1,2
tmp != buf,1,1,2
0 <= gfc->bitrate_index && gfc->bitrate_index < 16,1,1,2
sb < dimension_of(regcoef_l),1,1,2
s->samples_per_frame <= WMALL_BLOCK_MAX_SIZE,1,1,2
pathn < max_paths,1,1,2
conversion_map[i].fmt && inlink->w && inlink->h,1,1,2
"error_code == 0 && ""Failed to register destructor""",1,1,2
delta0 >= 0 && delta0 <= 4,1,1,2
utf7 != ENCA_CS_UNKNOWN,1,1,2
h->cur_pic_ptr->long_ref == 0,1,1,2
AV_CODEC_ID_ADPCM_G722==69660,1,1,2
moved <= source->nodecount,2,0,2
h == -1 || h >= vf->h,1,1,2
envelope->n_nodes > 0,1,1,2
elbg->cells[i],1,1,2
s->midbuf.ch_count == s->used_ch_count,1,1,2
bio,1,1,2
0 <= eid && eid < ejMax,1,1,2
yadif->next,1,1,2
diff >= 0 && diff <= 120,1,1,2
delta1 >= 0 && delta1 <= 4,1,1,2
returnValue,1,1,2
token,1,1,2
buf && charCnt > 0,1,1,2
gfp->VBR_q >= 0,1,1,2
channel < DUMB_IT_TOTAL_CHANNELS,1,1,2
frame->video->w == link->w,1,1,2
0 <= bigvalues && bigvalues <= 576,1,1,2
0 <= gfp->force_ms && 1 >= gfp->force_ms,1,1,2
order>=0,1,1,2
0 <= gfc->substep_shaping && gfc->substep_shaping <= 7,1,1,2
0 <= gfp->VBR_hard_min && 1 >= gfp->VBR_hard_min,1,1,2
maxcount != 0,2,0,2
LIBAVCODEC_VERSION_MICRO >= 100,1,1,2
s->frame_list->nb_frames > 0,1,1,2
 known_othersubr_result_cnt == 0 || unknown_othersubr_result_cnt == 0 ,1,1,2
!ff_avcodec_locked,1,1,2
s->input_picture[0]->f.type == FF_BUFFER_TYPE_USER || s->input_picture[0]->f.type == FF_BUFFER_TYPE_INTERNAL,1,1,2
s->subframe_len <= WMAPRO_BLOCK_MAX_SIZE,1,1,2
(gfc->numlines_l[b - 1] + gfc->numlines_l[b] + gfc->numlines_l[b + 1] - 1) > 0,1,1,2
LIBAVDEVICE_VERSION_MICRO >= 100,1,1,2
tp->hash_table,1,1,2
pthread_mutex_unlock_result == 0,1,1,2
j == *num_used,1,1,2
a->ch_count,1,1,2
0 <= gfp->disable_reservoir && 1 >= gfp->disable_reservoir,1,1,2
context_count > 0,1,1,2
v1.type == v2.type,1,1,2
s->samples >= 0,1,1,2
column >= 0,1,1,2
CODEC_ID_V410==164,1,1,2
index >= 0 && index < (ctx->buf_size>>1),1,1,2
TeX != ENCA_CS_UNKNOWN,1,1,2
pthread_mutex_unlock(&mutex),1,1,2
pmatch[0].rm_so == start,1,1,2
enca_isspace(fill_char),1,1,2
!picref->video->qp_table,1,1,2
CurrentStep,1,1,2
c->felem_size == sizeof(FELEM),1,1,2
analyser->utfbuf == NULL,1,1,2
gfc->bo_s[SBMAX_s - 1] <= gfc->npart_s,1,1,2
(start&1) == 0,1,1,2
a1,1,1,2
mctx.input.offsets_needed == 0,1,1,2
AV_CODEC_ID_PCM_S8_PLANAR==65563,1,1,2
 globals->metrics[nn]->clazz == clazz ,1,1,2
0 <= size,1,1,2
sb < dimension_of(regcoef_s),1,1,2
outsamplesref->audio->nb_samples == n_out,1,1,2
enc->codec_type == AVMEDIA_TYPE_DATA,1,1,2
out->planar == in->planar,1,1,2
read_size <= atempo->ring,1,1,2
s->in_buffer.ch_count == in_param->ch_count,1,1,2
i < 128,1,1,2
list->nodecount <= list->maxcount,2,0,2
entry == pattern->entry + n_entries,1,1,2
l_rc == 0,1,1,2
enca_charset_is_known(utf8),1,1,2
frame->audio->channels == link->channels,1,1,2
s->picture_ptr->data[0],1,1,2
charsets[i] != ENCA_CS_UNKNOWN,1,1,2
"av_image_check_size(avctx->width, avctx->height, 0, avctx) >= 0",1,1,2
 !input->filter_frame || (!input->start_frame && !input->end_frame),1,1,2
xrpow != NULL,1,1,2
queue->available,1,1,2
(1 << LOG2_SIZE_L2) == LOG2_SIZE,1,1,2
gfc->bs.totbit % 8 == 0,1,1,2
(cod_info->global_gain - s) >= 0,1,1,2
max_nonzero_coeff < 576,1,1,2
 cur[0]->clazz ,1,1,2
 FT_ABS( point->out_dir ) == major_dir && point->in_dir != point->out_dir ,1,1,2
mp[H_LEN] >= H_INCR,1,1,2
sizeof(*src) >= 2,1,1,2
"(IN_RANGE(from[i], old_base, sizeof(*old_base)) || IN_RANGE(from[i], old_base->picture, sizeof(Picture) * old_base->picture_count) || !from[i])",1,1,2
p1,1,1,2
!(*l && (*l)->all_layouts),1,1,2
ctx->filter-> inputs[0].filter_frame == avfilter_asink_ffabuffersink.inputs[0].filter_frame,1,1,2
bioSSL,1,1,2
pthread_mutex_init_result == 0,1,1,2
frame_list->end != NULL,1,1,2
AV_SAMPLE_FMT_DBLP == 9,1,1,2
mp[handle + H_OFFSET],1,1,2
flags>=0,1,1,2
cpi_is_context_locked(ctx),2,0,2
ctx->filter-> inputs[0].end_frame == avfilter_vsink_ffbuffersink. inputs[0].end_frame || ctx->filter-> inputs[0].filter_frame == avfilter_asink_ffabuffersink.inputs[0].filter_frame,1,1,2
hdr.frame_size <= sizeof(buf3),1,1,2
sfwork[i] >= 0,1,1,2
dirname != NULL,1,1,2
c->dstBpc>8,1,1,2
wp->password,1,1,2
(void*)&h->cabac == &h->mb_padding + 1,1,1,2
offset == avccontext->extradata_size,1,1,2
pkt->pts != DVD_NOPTS_VALUE,1,1,2
remainingBits == 0,1,1,2
mctx->state_log != NULL && mctx->state_log[str_idx] != NULL,1,1,2
size<=INT_MAX && p - pkt->data > size,1,1,2
dfs->open,1,1,2
out.remainingBits() == 0,1,1,2
vf->next == NULL,1,1,2
sockconn,1,1,2
s->frame_bits >= s->stuffing_bits,1,1,2
input_number < am->nb_inputs,1,1,2
this_bits <= max_bits,1,1,2
0 <= gfp->extension && 1 >= gfp->extension,1,1,2
len < sizeof(header),1,1,2
f->linesize[1] == f->linesize[2],1,1,2
len,1,1,2
"error_code == 0 && ""Failed to register pop_back""",1,1,2
pict->data[0] || !*got_frame,1,1,2
x_s >= 0 && y_s >= 0,1,1,2
context_count >= 0,1,1,2
websMime >= 0,1,1,2
max[b] >= 0,1,1,2
analyser->ncharsets <= 8,1,1,2
use_nbits_ch[gr][ch] <= max_nbits_ch[gr][ch],1,1,2
book->dimensions,1,1,2
mctx->sub_tops != NULL,1,1,2
(ret >= 0) >= !!*got_sub_ptr && !!*got_sub_ptr >= !!sub->num_rects,1,1,2
 index < sizeof(tab)/sizeof(*tab) ,1,1,2
filter_limit < 128U,1,1,2
dfs->close,1,1,2
count < 4,1,1,2
toWrite > 0,1,1,2
s->frame != NULL,1,1,2
"error_code == 0 && ""Failed to register size""",1,1,2
fname != NULL,1,1,2
sample < 1 << (bits - 1),1,1,2
(bp->flags & ~B_MALLOCED) == B_INTEGRITY || bp->flags == B_FILL_WORD,1,1,2
offset == avctx->extradata_size,1,1,2
 axis_count <= T1_MAX_MM_AXIS ,1,1,2
 block == NULL ,1,1,2
(size - footer_start) <= 4096,1,1,2
frame->audio->sample_rate == link->sample_rate,1,1,2
(unsigned)pkt->size <= INT_MAX - FF_INPUT_BUFFER_PADDING_SIZE,1,1,2
gfc->npart_s <= CBANDS,1,1,2
c->srcFormat == AV_PIX_FMT_BGR4_BYTE,1,1,2
ptext,1,1,2
buf->refcount,1,1,2
used_bits <= fullframebits,1,1,2
s1->pts == AV_NOPTS_VALUE,1,1,2
avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ440P || avctx->pix_fmt == AV_PIX_FMT_YUV440P,1,1,2
src->channel,1,1,2
rnd >=0 && rnd<=5 && rnd!=4,1,1,2
websLogFd >= 0,1,1,2
ssl_connect_3 == connssl->connecting_state,1,1,2
c->map[(index+(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key,1,1,2
that->cod_info->max_nonzero_coeff >= 0,1,1,2
cbits == my_log2(s->mclms_scaling + 1),1,1,2
size < FF_ARRAY_ELEMS(p),1,1,2
source->nodecount - moved <= source->nodecount,2,0,2
a1 + a2 + 2 < SBPSY_l,1,1,2
ascii != ENCA_CS_UNKNOWN,1,1,2
wpf > 0 && wpf <= 2048,1,1,2
hz != ENCA_CS_UNKNOWN,1,1,2
string && *string,1,1,2
 scaling ,1,1,2
gfp->VBR < vbr_max_indicator,1,1,2
res,1,1,2
0 <= pref_type && pref_type < 99,1,1,2
digestCalc,1,1,2
size == useroff,1,1,2
!IS_INTRA(s->current_picture.f.mb_type[mb_xy]),1,1,2
gfc->header[last_ptr].write_timing + getframebits(gfp) == gfc->bs.totbit,1,1,2
nb_channels <= 8,1,1,2
a1prime,1,1,2
len < sizeof(buffer),1,1,2
cod_info->global_gain < 256,1,1,2
max_bits <= MAX_BITS_PER_GRANULE,1,1,2
(A) != 0,1,1,2
picref,1,1,2
ost->source_index >= 0,1,1,2
ucs2c < 0x10000,1,1,2
scale_bits == gi->part2_length,1,1,2
gfc->rnumlines_l[b] >= 0,1,1,2
av_get_bits_per_sample(avctx->codec_id) != 0,1,1,2
bit_spend <= 0.5f && bit_spend >= -0.1f,1,1,2
!data->req.location,1,1,2
f->slice_count > 0,1,1,2
(unsigned)(rnd&~AV_ROUND_PASS_MINMAX)<=5 && (rnd&~AV_ROUND_PASS_MINMAX)!=4,1,1,2
(httpcode == 401) || (httpcode == 407),1,1,2
handler,1,1,2
(httpreq > HTTPREQ_NONE) && (httpreq < HTTPREQ_LAST),1,1,2
vf->w > 0,1,1,2
in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout),1,1,2
abs(src_linesize) >= bytewidth,1,1,2
st->codec->extradata_size >= IFF_EXTRA_VIDEO_SIZE,1,1,2
cur_nodes->nelem,1,1,2
gfc->VBR_seek_table.bag,1,1,2
enca_charset_has_ucs2_map(analyser->charsets[j]),1,1,2
dyn_vlc.table_size <= vlc->table_allocated,1,1,2
index == size,1,1,2
mb_type < B_8X8,1,1,2
n == 32 || value < (1U << n),1,1,2
!s->in_ch_layout,1,1,2
s->used_ch_count,1,1,2
data_bits == gi->part2_3_length + gi->part2_length,1,1,2
j2 < len,1,1,2
w == 4,1,1,2
i == nb_codecs,1,1,2
wctx->nb_index < MAX_NB_INDEX,1,1,2
pHashEntry != 0,2,0,2
" sizeof(DDS_HEADER_DXT10) == 20, ""DDS DX10 Extended Header size mismatch""",1,1,2
nsamples == 0,1,1,2
pthread_setspecific_result == 0,1,1,2
pstr->valid_len > 0,1,1,2
atempo->position[0] <= stop_here,1,1,2
dfa->nexts[cur_node_idx] != -1,1,1,2
h->mb_y || linesize <= block_offset[i],1,1,2
"(0 <= gfp->interChRatio && gfp->interChRatio <= 1.0) || EQ(gfp->interChRatio, -1)",1,1,2
gfp->VBR_q <= 9,1,1,2
fifo->root.next,1,1,2
tinterlace->next,1,1,2
pair2bits,1,1,2
conn != NULL,1,1,2
(int16_t)a.v[AV_INTEGER_SIZE-1] >= 0 && (int16_t)b.v[AV_INTEGER_SIZE-1] >= 0,1,1,2
regs->num_regs >= nregs,1,1,2
nb_components>=1 && nb_components<=3,1,1,2
0 <= gfp->decode_only && 1 >= gfp->decode_only,1,1,2
gfc->ResvMax >= 0,1,1,2
gfc->bo_l[SBMAX_l - 1] <= gfc->npart_l,1,1,2
scalefac[sfb] >= 0,1,1,2
pthread_mutex_trylock_result == 0 || pthread_mutex_trylock_result == EBUSY,1,1,2
 (slot->internal->flags & FT_GLYPH_OWN_BITMAP) == 0 ,1,1,2
k <= 13,1,1,2
hash_size > 2,1,1,2
 (FT_ULong)IP <= coderange->size ,1,1,2
gfc->mf_size <= MFSIZE,1,1,2
pch->prev_energy_subshort[i + ((AAC_NUM_BLOCKS_SHORT - 2) * PSY_LAME_NUM_SUBBLOCKS + 1)] > 0,1,1,2
avctx->pix_fmt == PIX_FMT_YUVJ444P || avctx->pix_fmt == PIX_FMT_YUV444P || avctx->pix_fmt == PIX_FMT_YUVJ422P || avctx->pix_fmt == PIX_FMT_YUV422P,1,1,2
dfa->nodes_len > 0,1,1,2
cod_info->part2_3_length <= targ_bits[ch],1,1,2
preDigest,1,1,2
bytes < pkt->size / f->slice_count,1,1,2
m <= 255,1,1,2
c->map[(index-1)&(ME_MAP_SIZE-1)] == key,1,1,2
order[0] == FILL_CHARACTER,1,1,2
LIBSWSCALE_VERSION_MICRO >= 100,1,1,2
st->request_probe <= 0,1,1,2
gi->count1table_select < 2,1,1,2
s->avctx->sample_aspect_ratio.den,1,1,2
wctx->level < SECTION_MAX_NB_LEVELS,1,1,2
pthread_key_delete(key),1,1,2
gfc->header[old].ptr == gfc->sideinfo_len * 8,1,1,2
out->ch_count == in->ch_count,1,1,2
tableindex < 32u,1,1,2
limit >= 0,1,1,2
string && width > 0,1,1,2
c->srcBpc == 16,1,1,2
((bp->flags & ~B_MALLOCED) == B_INTEGRITY) || bp->flags == B_FILL_WORD,1,1,2
xdata.ncharsets > 1,1,1,2
b == gfc->npart_l - 1,1,1,2
size == (size_t)ntrespoff,1,1,2
avctx_enc->codec,1,1,2
(desc->load_sigdata && desc->unload_sigdata) || (!desc->load_sigdata && !desc->unload_sigdata),1,1,2
"engine && ""Passed NULL engine pointer to registerVector""",1,1,2
cbits <= MAX_LENGTH,1,1,2
m_refCount == 0,1,1,2
 state->free_ent < state->prefix_size ,1,1,2
"ost->st->codec, 1",1,1,2
nsp,1,1,2
0 <= gfp->analysis && 1 >= gfp->analysis,1,1,2
LIBAVFILTER_VERSION_MICRO >= 100,1,1,2
size == hostoff,1,1,2
size<=INT_MAX && p - pkt->data >= size,1,1,2
ff_avcodec_locked,1,1,2
sizeof(short) == 2,1,1,2
Max_bits <= MAX_BITS_PER_CHANNEL,1,1,2
b == (gfc->npart_l - 1),1,1,2
a->bps,1,1,2
j < HBLKSIZE,1,1,2
(taps&3) != 3 || s->dither.ns_coeffs[taps] == 0,1,1,2
tracknum>=0 && tracknum<num_tracks,1,1,2
over_bits >= 0,1,1,2
sbr->kx[1] <= table[0],1,1,2
delta2 >= 0 && delta2 <= 4,1,1,2
"av_rescale_rnd(track->cluster[0].dts, MOV_TIMESCALE, track->timescale, AV_ROUND_DOWN) <= 0",1,1,2
tls_set_value_result,1,1,2
*pkt_buffer,1,1,2
0 <= x && x < Q_MAX,1,1,2
"pthread_cond_init(&cond,NULL)",1,1,2
0 == over_bits % 8,1,1,2
NULL,1,1,2
s->pict_type != FF_B_TYPE,1,1,2
s->frame_size * 8 - put_bits_count(&s->pb) >= 18,1,1,2
sizeof(iso_volume_descriptor_t) == ISO_BLOCKSIZE,1,1,2
(gfc->numlines_s[b - 1] + gfc->numlines_s[b] - 1) > 0,1,1,2
desc->flags & PIX_FMT_PLANAR,1,1,2
pthread_cond_signal(&cond),1,1,2
CODEC_ID_PCM_S8_PLANAR==65563,1,1,2
pthread_cond_broadcast_result == 0,1,1,2
y%(2<<scale->vsub) == 0,1,1,2
cb->ndimensions >= 2,1,1,2
i < ctx->nb_inputs,1,1,2
av_log2_i(b)>=0,1,1,2
avci->buffer_count,1,1,2
src->video,1,1,2
"this == list_nil(list) || list_contains(list, this)",2,0,2
b>=-128 && b<=255,1,1,2
left > -1,1,1,2
conn->handler->connect_it,1,1,2
cod_info->global_gain >= 0,1,1,2
 encoding->code_first <= encoding->code_last ,1,1,2
avc_context->pix_fmt == PIX_FMT_YUV420P,1,1,2
(cod_info->global_gain + cod_info->scalefac_scale) <= 255,1,1,2
list_verify(source),2,0,2
lumSrcPtr + vLumFilterSize - 1 < (const int16_t **)lumPixBuf + vLumBufSize * 2,1,1,2
ssl_connect_2 == connssl->connecting_state || ssl_connect_2_reading == connssl->connecting_state || ssl_connect_2_writing == connssl->connecting_state,1,1,2
 coderange->base != NULL ,1,1,2
cod_info->sfb_partition_table,1,1,2
key != TLS_OUT_OF_INDEXES,1,1,2
codec->codec_id == AV_CODEC_ID_H264,1,1,2
range <=256 || !(s->codec_id == AV_CODEC_ID_MPEG2VIDEO && s->avctx->strict_std_compliance >= FF_COMPLIANCE_NORMAL),1,1,2
 flag != NULL ,1,1,2
s->current_picture_ptr->f.pts != AV_NOPTS_VALUE,1,1,2
width>0 && height>0,1,1,2
num >= 0,1,1,2
!m_texture.size(),1,1,2
 **acur == '{' ,1,1,2
mp->changes_map[0],1,1,2
pthread_cond_broadcast(&cond),1,1,2
AV_PIX_FMT_VDA_VLD == 81,1,1,2
" sizeof(DDS_HEADER) == 124, ""DDS Header size mismatch"" ",1,1,2
en_short[i] > 0,1,1,2
rq->servp,1,1,2
strlen (_getdirname (&dirp->current)) <= NAME_MAX,1,1,2
outsamples,1,1,2
file_from->buffer == file_to->buffer,1,1,2
size==64,1,1,2
(Alignment & (Alignment - 1)) == 0,2,0,2
list->nodecount + 1 > list->nodecount,2,0,2
power <= 0x8000 * 0x8000,1,1,2
data_bits == gi->part2_length,1,1,2
match_last != -1,1,1,2
websMax >= 0,1,1,2
n_channels > 0,1,1,2
s->last_picture[i].data[0] != s->current_picture.data[0],1,1,2
 module->clazz && module->clazz->get_interface ,1,1,2
x_s < width && y_s < height,1,1,2
pthread_cond_timedwait_result == 0 || pthread_cond_timedwait_result == ETIMEDOUT,1,1,2
realmName,1,1,2
outpicref->buf->w>0 && outpicref->buf->h>0,1,1,2
 stream && stream->cursor == 0 ,1,1,2
duration >= 0,1,1,2
c >= -m,1,1,2
i<99,1,1,2
conn && td,1,1,2
ncharsets <= 8,1,1,2
0 <= upper && upper <= 575,1,1,2
pktl,1,1,2
 FALSE ,1,1,2
best_bitrate_idx >= 0,1,1,2
"TlsSetValue(key,(LPVOID)val)",1,1,2
s1 && s2,1,1,2
s0->current_picture_ptr->f.reference != DELAYED_PIC_REF,1,1,2
0 <= gfp->emphasis && 4 > gfp->emphasis,1,1,2
dbMaxTables > 0,1,1,2
!vf->get_image,1,1,2
j2 + BLACKSIZE >= 0,1,1,2
keyword && *keyword,1,1,2
page && *page,1,1,2
!ctx->have_sse,1,1,2
ebur128->graph.h == ebur128->gauge.h,1,1,2
channel_layout == 0 || channels == av_get_channel_layout_nb_channels(channel_layout),1,1,2
vf->next,1,1,2
s->in_buffer.planar == in_param->planar,1,1,2
m1 >= 0,1,1,2
off<=len,1,1,2
ptr+BUFSIZE-nread <= data->state.buffer+BUFSIZE+1,1,1,2
0 <= gfc->mode_ext && gfc->mode_ext < 4,1,1,2
r2==r,1,1,2
en_short[i - 1] > 0,1,1,2
s->last_picture_ptr && s->last_picture_ptr->f.data[0],1,1,2
out,1,1,2
 snode->count <= FTC_SBIT_ITEMS_PER_NODE ,1,1,2
i >= last,1,1,2
v>0 && v<=ALIGN,1,1,2
ip->putBackTokenId == 0,1,1,2
0 < size && size < rq->buflen,1,1,2
m >= 0,1,1,2
ist && !ost->filter,1,1,2
avctx->codec->encode2,1,1,2
avctx->pix_fmt == PIX_FMT_YUVJ444P || avctx->pix_fmt == PIX_FMT_YUV444P || avctx->pix_fmt == PIX_FMT_YUVJ440P || avctx->pix_fmt == PIX_FMT_YUV440P,1,1,2
digestLen == 32,1,1,2
s->midbuf.ch_count == s->out.ch_count,1,1,2
zeros != nsamples,1,1,2
entry == pattern->entry + pattern->n_entries,1,1,2
(gfc->numlines_s[b - 1] + gfc->numlines_s[b] + gfc->numlines_s[b + 1] - 1) > 0,1,1,2
nmatch > 1,1,1,2
!avctx->internal->frame_thread_encoder,1,1,2
fabs(offset) <= .501,1,1,2
hints,1,1,2
"error_code == 0 && ""Failed to register construct(size)""",1,1,2
size > included_body_bytes,1,1,2
(bp->flags & ~B_MALLOCED) == B_INTEGRITY,1,1,2
ctx,1,1,2
outsamplesref->audio->sample_rate == outlink->sample_rate,1,1,2
MFSIZE >= mf_needed,1,1,2
!*got_packet_ptr,1,1,2
i < size,1,1,2
" !strcmp(ctx->filter->name, ""buffersink"") || !strcmp(ctx->filter->name, ""ffbuffersink"")",1,1,2
pkt.size || !pkt.data,1,1,2
n == sink_links_count,1,1,2
h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * h->linesize * ((scan8[15] - scan8[0]) >> 3),1,1,2
src->audio,1,1,2
dbListTables,1,1,2
pthread_mutex_lock_result == 0,1,1,2
!thread_avctx->internal->frame_thread_encoder,1,1,2
new != NULL,2,0,2
n <= 256,1,1,2
samples_out <= 1152,1,1,2
s->mb_y || linesize <= block_offset[i],1,1,2
tmp_num_channels >= 1 && tmp_num_channels <= 2,1,1,2
ssl_connect_1 == connssl->connecting_state,1,1,2
0 <= gfp->error_protection && 1 >= gfp->error_protection,1,1,2
avi->frames_hdr_strm[n],1,1,2
AV_CODEC_ID_SRT==94216,1,1,2
!avresample_available(s->avr),1,1,2
nsamples <= zeros + na + nb,1,1,2
"!""Invalid list type""",1,1,2
right > -1,1,1,2
p-pkt->data == pkt->size,1,1,2
b + 1 < gfc->npart_s,1,1,2
 num_args >= 0 ,1,1,2
s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f.data[0]),1,1,2
cod_info->max_nonzero_coeff >= 0,1,1,2
!IS_EPSILON_NODE (node->token.type),1,1,2
 node ,1,1,2
chrUSrcPtr + vChrFilterSize - 1 < (const int16_t **)chrUPixBuf + vChrBufSize * 2,1,1,2
stream_index < ogg->nstreams,1,1,2
normalize || !fail,1,1,2
h->linesize && h->uvlinesize,1,1,2
LIBSWRESAMPLE_VERSION_MICRO >= 100,1,1,2
HAVE_MMX2 == HAVE_MMXEXT,1,1,2
AV_PIX_FMT_NONE == -1 && AV_SAMPLE_FMT_NONE == -1,1,1,2
height >= 0,1,1,2
buf_index <= buf_size,1,1,2
s->last_pic && s->last_pic->f.data[0],1,1,2
!av_fifo_size(sink->fifo),1,1,2
size == (size_t)lmrespoff,1,1,2
keyLast && *keyLast,1,1,2
i == size,1,1,2
tsecs >= (time_t)0,1,1,2
nbytes > 0,1,1,2
!(sample->flags & IT_SAMPLE_STEREO),1,1,2
c->map[(index+1)&(ME_MAP_SIZE-1)] == key,1,1,2
LIBAVFORMAT_VERSION_MICRO >= 100,1,1,2
mid_count==0,1,1,2
bit_save <= 0.3f && bit_save >= -0.05000001f,1,1,2
in_ts != AV_NOPTS_VALUE,1,1,2
pitch_delay_frac >= 0 && pitch_delay_frac < precision,1,1,2
"ist->st->codec, 0",1,1,2
analyser->lang->ratinghook,1,1,2
argv,1,1,2
out->buf->w > 0 && out->buf->h > 0,1,1,2
"(IN_RANGE(from[i], old_base, sizeof(*old_base)) || IN_RANGE(from[i], old_base->DPB, sizeof(Picture) * old_base->picture_count) || !from[i])",1,1,2
start + range >= 0 && start + range <= length,1,1,2
"error_code == 0 && ""Failed to register insert""",1,1,2
0 <= (x+Q_MAX2) && x < Q_MAX,1,1,2
h->mb_y < h->mb_height,1,1,2
i <= seekhead_list->nb_elem,1,1,2
sizeof(tmp) >= av_sha_size,1,1,2
filters,1,1,2
state->halt,1,1,2
(ptr+BUFSIZE-ftpc->nread_resp) <= (buf+BUFSIZE+1),1,1,2
"!""requesting subtitles recoding without iconv""",1,1,2
gfc->npart_s < CBANDS,1,1,2
start_here <= stop_here && frag->position[1] <= start_here && overlap <= frag->nsamples,1,1,2
h->avctx->sample_aspect_ratio.den,1,1,2
err == REG_NOERROR,1,1,2
gfc->npart_l < CBANDS,1,1,2
h->sps.bit_depth_chroma == 0,1,1,2
outlink->sample_rate == out_rate,1,1,2
bits == 8 || bits == 16,1,1,2
"hash_lookup(hash, node->key) == node",2,0,2
method,1,1,2
"pthread_setspecific(key,(void*)val)",1,1,2
short_words == 0,1,1,2
remainingBits >= 0,1,1,2
gfc->npart_l <= CBANDS,1,1,2
0 <= gfp->copyright && 1 >= gfp->copyright,1,1,2
avio_tell(pb) % ffm->packet_size == 0,1,1,2
pthread_cond_wait_result == 0,1,1,2
i,1,1,2
j == 513,1,1,2
f->version > 2,1,1,2
c->start[channel] + i < 512,1,1,2
sum <= MAX_BITS_PER_GRANULE,1,1,2
FF_INPUT_BUFFER_PADDING_SIZE <= 52,1,1,2
cod_info->part2_3_length <= MAX_BITS_PER_CHANNEL,1,1,2
 point <= end_point && ( point->flags & touch_flag ) != 0 ,1,1,2
(taps&3) != 2,1,1,2
sizeof (iso_path_table_t) == 8,1,1,2
0 == gfc->ResvMax % 8,1,1,2
!s->resample,1,1,2
0 <= schedid && schedid < schedMax,1,1,2
regs_allocated == REGS_FIXED,1,1,2
nOut == nIn,1,1,2
list_verify(dest),2,0,2
entry < pattern->entry + pattern->n_entries,1,1,2
sockindex >= FIRSTSOCKET && sockindex <= SECONDARYSOCKET,1,1,2
outpicref->buf->linesize[plane]>0,1,1,2
b == (gfc->npart_s - 1),1,1,2
"i >= 0 && i < lhs->size() && ""Array index out of bounds.""",1,1,2
c->dstBpc > 14,1,1,2
buffer != NULL,1,1,2
!yuv2packed1 && !yuv2packed2,1,1,2
bn,1,1,2
ssl,1,1,2
!(sigdata->flags & IT_WAS_AN_XM),1,1,2
pthread_cond_signal_result == 0,1,1,2
dirp->dirent_filled == 0,1,1,2
conn->handler->done,1,1,2
key && *key,1,1,2
decoded,1,1,2
conn->data,1,1,2
start_here <= stop_here && frag->position[1] <= start_here,1,1,2
bytes < buf_size/f->slice_count,1,1,2
best_mean >= 0 && best_mean < 256 || !intra,1,1,2
block_duration != AV_NOPTS_VALUE,1,1,2
!(max_paths&(max_paths-1)),1,1,2
s->drop_frame_timecode == !!(s->tc.flags & AV_TIMECODE_FLAG_DROPFRAME),1,1,2
urlPrefix,1,1,2
pthread_key_delete_result == 0,1,1,2
sizeof(dvdc->global_palette) == sizeof(default_palette),1,1,2
sfwork[i] <= 255,1,1,2
(gfc->numlines_s[b] + gfc->numlines_s[b + 1] - 1) > 0,1,1,2
a2,1,1,2
"error_code == 0 && ""Failed to register operator=""",1,1,2
 cmap->indices != NULL ,1,1,2
12 <= len,1,1,2
sid >= 0 && sid < socketMax,1,1,2
s->nb_streams>0,1,1,2
FF_INPUT_BUFFER_PADDING_SIZE >= ARITH2_PADDING + (MIN_CACHE_BITS + 7) / 8,1,1,2
el >= 0,1,1,2
!vector,1,1,2
severity >= CP_LOG_DEBUG && severity <= CP_LOG_ERROR,2,0,2
keyFile,1,1,2
socketindex <= SECONDARYSOCKET,1,1,2
targ_bits[1] <= MAX_BITS_PER_CHANNEL,1,1,2
!s->picture || s->picture != s1->picture,1,1,2
s->out.ch_count,1,1,2
textString,1,1,2
sample_freq >= 8000 && sample_freq <= 48000,1,1,2
!IS_INTRA(s->cur_pic->f.mb_type[mb_xy]),1,1,2
enc->codec_type == CODEC_TYPE_AUDIO,1,1,2
linbits_x1 <= h->linmax,1,1,2
!s->afq.remaining_delay,1,1,2
 (FT_UInt)( char_code - node->first ) < FTC_CMAP_INDICES_MAX ,1,1,2
0 <= gfp->bWriteVbrTag && 1 >= gfp->bWriteVbrTag,1,1,2
"! (mp)->count || ! pthread_equal(pthread_self(), (mp)->thread)",1,1,2
abs(dst_linesize) >= bytewidth,1,1,2
err >= 0,1,1,2
pthread_mutex_lock(&mutex),1,1,2
umap2 != NULL,1,1,2
i < CBANDS,1,1,2
0 <= gfp->decode_on_the_fly && 1 >= gfp->decode_on_the_fly,1,1,2
pic->f.type == 0 || pic->f.type == FF_BUFFER_TYPE_SHARED,1,1,2
dfa->eclosures[node_idx].nelem != -1,1,1,2
c->filter_shift == FILTER_SHIFT,1,1,2
"error_code == 0 && ""Failed to register push_back""",1,1,2
m,1,1,2
cod_info->max_nonzero_coeff < 576,1,1,2
origin == SEEK_SET || origin == SEEK_CUR || origin == SEEK_END,1,1,2
initSize >= 0,1,1,2
"first == NULL || list_contains(source, first)",2,0,2
PIX_FMT_NONE == -1 && AV_SAMPLE_FMT_NONE == -1,1,1,2
analyser,1,1,2
analyser->ncharsets == NCHARSETS && sizeof(rate_calc_table)/sizeof(RateFunc*) == NCHARSETS && sizeof(validity_check_table)/sizeof(ValidityFunc*) == NCHARSETS,1,1,2
CODEC_ID_BMV_AUDIO==86071,1,1,2
(gfc->numlines_l[b] + gfc->numlines_l[b + 1] - 1) > 0,1,1,2
ref->f.reference,1,1,2
afq->remaining_samples == afq->remaining_delay,1,1,2
bits >= 0 && bits <= 31,1,1,2
c->map[(index-(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key,1,1,2
gfp->mode < MAX_INDICATOR,1,1,2
a2prime,1,1,2
key,1,1,2
ctx->channels == out->ch_count,1,1,2
the_dfs,1,1,2
!buf->refcount,1,1,2
 first == node ,1,1,2
0x80 % BITSET_WORD_BITS == 0,1,1,2
diff>0 && diff<=ALIGN,1,1,2
s->avctx->codec_id != AV_CODEC_ID_H264,1,1,2
!(psize % book->ndimensions),1,1,2
max_run >= 0 && max_run <= run,1,1,2
pkt->dts != DVD_NOPTS_VALUE,1,1,2
(gfc->numlines_l[b - 1] + gfc->numlines_l[b] - 1) > 0,1,1,2
(conn) && (conn->protocol & PROT_HTTPS),1,1,2
(size_t)limit <= file->buffer->size,1,1,2
"(mp)->count > 0 && pthread_equal(pthread_self(), (mp)->thread)",1,1,2
*buf,1,1,2
c->start[channel] < 512,1,1,2
size < sizeof(buffer),1,1,2
avctx->sample_rate > 0,1,1,2
pthread_cond_destroy(&cond),1,1,2
 cmap->code_to_sid != NULL ,1,1,2
"error_code == 0 && ""Failed to register object type""",1,1,2
ist->opts,1,1,2
"error_code == 0 && ""Failed to register erase""",1,1,2
query,1,1,2
pthread_key_create_result == 0,1,1,2
qdm->cache > 0,1,1,2
 FT_Outline_Check( outline ) == 0 ,1,1,2
 i < charmap->face->num_charmaps ,1,1,2
thmMS > 0,1,1,2
n_channels <= 2,1,1,2
min_bits <= max_bits,1,1,2
"statement, regex",2,0,2
nus->keyframe_pts[k] > last_pts,1,1,2
0 <= gfp->free_format && 1 >= gfp->free_format,1,1,2
*connp,1,1,2
!picref->video || !picref->video->qp_table,1,1,2
cp,1,1,2
authType,1,1,2
prenonce,1,1,2
"TLS_OUT_OF_INDEXES,TlsAlloc()",1,1,2
pnbytes,1,1,2
mp3done,1,1,2
m_refCount,1,1,2
ost->opts,1,1,2
nb_samples > 0,1,1,2
ctx->channels == SWR_CH_MAX || !in->ch[ctx->channels],1,1,2
s->in.planar,1,1,2
conn->writesockfd != CURL_SOCKET_BAD,1,1,2
gfc->mf_size >= (BLKSIZE + gfp->framesize - FFTOFFSET),1,1,2
playing->resampler.pickup_data == playing,1,1,2
this_bits >= min_bits,1,1,2
mutex->lock_count == 0,2,0,2
bufsize >= 0,1,1,2
*codec_id != AV_CODEC_ID_NONE,1,1,2
umap1 != NULL,1,1,2
p2,1,1,2
!s->preout.count,1,1,2
gfc->bitrate_index <= gfc->VBR_max_bitrate,1,1,2
framesize <= 1152,1,1,2
a1 >= 0,1,1,2
s->reordered_input_picture[0]->f.type == FF_BUFFER_TYPE_USER || s->reordered_input_picture[0]->f.type == FF_BUFFER_TYPE_INTERNAL,1,1,2
 list->num_nodes == 0 ,1,1,2
n != 0,2,0,2
sizeof(fircoef) / sizeof(fircoef[0]) == ((NSFIRLEN - 1) / 2),1,1,2
pic->f.data[0],1,1,2
bioSock,1,1,2
sample >= -(1 << (bits - 1)),1,1,2
gi->sfb_partition_table,1,1,2
w == -1 || w >= vf->w,1,1,2
ucs2 != ENCA_CS_UNKNOWN,1,1,2
startwrite < 0,1,1,2
cod_info->part2_3_length <= Max_bits,1,1,2
vf->h > 0,1,1,2
dest->nodecount + moved >= dest->nodecount,2,0,2
ret != AVERROR(EAGAIN),1,1,2
analyser->pair2bits == NULL,1,1,2
s->pix_fmt == pic->format,1,1,2
(ptr+ftpc->cache_size) <= (buf+BUFSIZE+1),1,1,2
MODE_4k75 <= (signed)mode && mode <= MODE_12k2,1,1,2
b == gfc->npart_s - 1,1,1,2
(filter_length&1)==0 && filter_length>=4,1,1,2
"error_code == 0 && ""Failed to register resize""",1,1,2
avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ422P || avctx->pix_fmt == AV_PIX_FMT_YUV422P,1,1,2
dfa->nexts[node_idx] != -1,1,1,2
!ts_st->payload_size,1,1,2
(x1 | x2) < 16,1,1,2
bitcounts,1,1,2
put_bits_ptr(&s->pb) - s->pb.buf == avctx->block_align,1,1,2
delay > 0,1,1,2
charset != NULL,1,1,2
s != s1,1,1,2
"error_code == 0 && ""Failed to register copy constructor""",1,1,2
*mode,1,1,2
0 <= gfp->useTemporal && 1 >= gfp->useTemporal,1,1,2
frame->audio->channel_layout == link->channel_layout,1,1,2
off>=0,1,1,2
index < WTV_FILES,1,1,2
"all_scalefactors_not_negative(scalefac, cod_info->sfbmax)",1,1,2
a2 >= 0,1,1,2
s0->current_picture_ptr->f.data[0],1,1,2
s->drop_frame_timecode == s->tc.drop,1,1,2
AV_PICTURE_TYPE_BI == 7,1,1,2
pbuf,1,1,2
r == BZ_OK,1,1,2
gfc->mf_size >= (512 + gfp->framesize - 32),1,1,2
ctx->pic.linesize[0] == ctx->last_pic.linesize[0],1,1,2
"error_code == 0 && ""Failed to register constructor""",1,1,2
!(ref && !ref->f.reference),1,1,2
linbits_x2 <= h->linmax,1,1,2
mctx->asub_tops > 0,1,1,2
minima_count <= MAX_SAB_SIZE,1,1,2
pthread_cond_init_result == 0,1,1,2
tls_free_result,1,1,2
TlsFree(key),1,1,2
h,1,1,2
to_name != NULL,1,1,2
dimension_of(fircoef) == ((NSFIRLEN - 1) / 2),1,1,2
CODEC_ID_SRT==94216,1,1,2
stream_index == -1,1,1,2
AVMEDIA_TYPE_ATTACHMENT == 4,1,1,2
xbits <= MAX_LENGTH,1,1,2
wc_idx >= 0,1,1,2
c->dstBpc > 10,1,1,2
end <= length,1,1,2
gain >= 0,1,1,2
out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout),1,1,2
wp->digest,1,1,2
!s->input_frames[i],1,1,2
ist,1,1,2
chrUSrcPtr + vChrFilterSize - 1 < chrUPixBuf + vChrBufSize*2,1,1,2
 p == table + 518 ,1,1,2
"pthread_cond_wait(&cond,&lock.get_underlying().mutex)",1,1,2
"gettimeofday(&tv,NULL)",1,1,2
o->g->format_opts,1,1,2
(flags & ~(SOCKET_BROADCAST|SOCKET_DATAGRAM|SOCKET_BLOCK| SOCKET_LISTENING)) == 0,1,1,2
targ_bits[0] <= MAX_BITS_PER_CHANNEL,1,1,2
s1->dts == AV_NOPTS_VALUE,1,1,2
!avpkt->data || avpkt->data != avctx->internal->byte_buffer,1,1,2
s->streams[ s->nb_streams-1 ] == st,1,1,2
nb_components==1 || nb_components==3,1,1,2
analyser->ncharsets >= 1,1,1,2
ip->putBackToken == NULL,1,1,2
outlink->channel_layout == out_layout || !outlink->channel_layout,1,1,2
did >= 0,1,1,2
"list_contains(list, lnode)",2,0,2
gfc->header[gfc->w_ptr].write_timing >= bs->totbit,1,1,2
from_name != NULL,1,1,2
ds.mpgsize != 0,1,1,2
!lnode_is_in_a_list(new),2,0,2
pthread_cond_destroy_result == 0,1,1,2
row >= 0,1,1,2
list,1,1,2
h->mb_num == h->mb_width * h->mb_height,1,1,2
done,1,1,2
 left->start >= 0 ,1,1,2
LIBAVUTIL_VERSION_MICRO >= 100,1,1,2
 prev == node ,1,1,2
CODEC_ID_ADPCM_G722==69660,1,1,2
size != 0,1,1,2
analyser->utfch == NULL,1,1,2
"!list_contains(list, new)",2,0,2
index < esc,1,1,2
mp3out == pinfo->framesize,1,1,2
dns && (dns->inuse>0),1,1,2
!vf->start_slice,1,1,2
text && *text,1,1,2
PIX_FMT_VDA_VLD == 81,1,1,2
max_order >= MIN_LPC_ORDER && max_order <= MAX_LPC_ORDER && use_lpc > 0,1,1,2
8 <= bit_rate && bit_rate <= 640,1,1,2
pTableRegister,1,1,2
prestream <= buf + length,1,1,2
v1->type == v2->type,1,1,2
format_opts,1,1,2
provider_info->usage_count > 0,1,0,1
 sizeof(NumericType) <= sizeof(StructType) ,1,0,1
" sizeof(SBinaryConstantBuffer) == 20, ""FX11 binary size mismatch"" ",1,0,1
ep->plugin != NULL,1,0,1
is_power_of_two(nchains),1,0,1
context->env->mutex == NULL || !cpi_is_mutex_locked(context->env->mutex),1,0,1
"::testing::internal::DoubleNearPredFormat, val1, val2, abs_error",1,0,1
"::testing::internal::CmpHelperSTRCASENE, s1, s2",1,0,1
" sizeof(SBinaryType::SBinaryMember) == 16, ""FX11 binary size mismatch"" ",1,0,1
"::testing::internal::CmpHelperGT, val1, val2",1,0,1
hash_isempty(hash),1,0,1
list_count(sour) + list_count(dest) >= list_count(sour),1,0,1
valuesMigrated == m_NumEntries,1,0,1
plugins != NULL,1,0,1
" sizeof(SBinaryTechnique) == 8, ""FX11 binary size mismatch"" ",1,0,1
"::testing::internal::CmpHelperNE, val1, val2",1,0,1
" sizeof(SBinaryTypeInheritance) == 8, ""FX11 binary size mismatch"" ",1,0,1
list_isempty(env->started_plugins),1,0,1
(al == 0 && fr == 0) || (al != 0 && fr != 0),1,0,1
v1 == v1n && v2 == v2n,1,0,1
pIterator->pHashEntry != 0,1,0,1
" sizeof(SBinaryAssignment::SInlineShader) == 8, ""FX11 binary size mismatch"" ",1,0,1
pIterator && !PastEnd(pIterator),1,0,1
"::testing::internal::CmpHelperLE, val1, val2",1,0,1
first != list_nil(source),1,0,1
"::testing::internal::CmpHelperSTRNE, s1, s2",1,0,1
error != NULL,1,0,1
framework_locked > 0,1,0,1
"list_contains(list, node)",1,0,1
"::testing::internal::CmpHelperSTREQ, expected, actual",1,0,1
 BlockType == EBT_Pass ,1,0,1
" sizeof(SBinaryAnnotation) == 8, ""FX11 binary size mismatch"" ",1,0,1
!context->env->locked,1,0,1
"::testing::internal:: EqHelper<GTEST_IS_NULL_LITERAL_(expected)>::Compare, expected, actual",1,0,1
 sizeof(InterfaceType) <= sizeof(StructType) ,1,0,1
 BlockType == EBT_Sampler ,1,0,1
nullptr == m_pPrivateHeap,1,0,1
" sizeof(SBinaryAssignment) == 16, ""FX11 binary size mismatch"" ",1,0,1
" sizeof(SBinaryInterfaceVariable) == 16, ""FX11 binary size mismatch"" ",1,0,1
hash_isempty(env->extensions),1,0,1
" sizeof(SBinaryPass) == 8, ""FX11 binary size mismatch"" ",1,0,1
x > static_cast<double>((int) (INT_MIN / 2)) - 1.0,1,0,1
 ppSemantic && *ppSemantic ,1,0,1
framework_mutex == NULL || !cpi_is_mutex_locked(framework_mutex),1,0,1
m_pPrivateHeap,1,0,1
hash->nchains >= 2,1,0,1
" sizeof(SBinaryObjectVariable) == 16, ""FX11 binary size mismatch"" ",1,0,1
v1 != NULL && v2 != NULL,1,0,1
2 * hash->nchains > hash->nchains,1,0,1
hash->table[chain] == NULL,1,0,1
!lnode_is_in_a_list(lnode),1,0,1
!lnode_is_in_a_list(node),1,0,1
initialized > 0,1,0,1
" sizeof(SBinaryAssignment::SVariableIndex) == 8, ""FX11 binary size mismatch"" ",1,0,1
&ptr != this,1,0,1
valuesMigrated == pOther->m_NumEntries,1,0,1
" sizeof(SBinaryGroup) == 8, ""FX11 binary size mismatch"" ",1,0,1
s == CP_OK,1,0,1
 s <= 0xffffffff ,1,0,1
status != CP_OK || n == 0 || extensions[n - 1] != NULL,1,0,1
 BlockType == EBT_Blend ,1,0,1
"statement, ::testing::internal::ExitedUnsuccessfully, regex",1,0,1
 BlockType == EBT_Rasterizer ,1,0,1
df != NULL,1,0,1
size >= 4,1,0,1
"::testing::internal::CmpHelperGE, val1, val2",1,0,1
" sizeof(SBinaryAssignment::SConstantIndex) == 8, ""FX11 binary size mismatch"" ",1,0,1
m_NumEntries == 0,1,0,1
is_power_of_two(size),1,0,1
" sizeof(SBinaryHeader) == 76, ""FX11 binary size mismatch"" ",1,0,1
ext_points != NULL,1,0,1
"hash_lookup(hash, key) == NULL",1,0,1
" sizeof(SBinaryAssignment::SIndexedObjectExpression) == 8, ""FX11 binary size mismatch"" ",1,0,1
hash->nodecount < hash->maxcount,1,0,1
event->plugin_id != NULL,1,0,1
" sizeof(SBinaryType) == 24, ""FX11 binary size mismatch"" ",1,0,1
ir != NULL && info == ir->resource,1,0,1
v1 <= v1n && v2 <= v2n,1,0,1
"list_is_sorted(sour, compare)",1,0,1
 BlockType == EBT_DepthStencil ,1,0,1
"::testing::internal::IsHRESULTFailure, (expr)",1,0,1
" sizeof(SBinaryGSSOInitializer) == 8, ""FX11 binary size mismatch"" ",1,0,1
"list_contains(list, del)",1,0,1
hptr->next == node,1,0,1
" sizeof(SBinaryNumericVariable) == 24, ""FX11 binary size mismatch"" ",1,0,1
" sizeof(SBinaryNumericType) == 4, ""FX11 binary size mismatch"" ",1,0,1
hash_isempty(env->infos),1,0,1
symbol_info->usage_count > 0,1,0,1
status != CP_OK || n == 0 || ext_points[n - 1] != NULL,1,0,1
hash_isempty(context->symbol_providers),1,0,1
func != NULL,1,0,1
extensions != NULL,1,0,1
hptr != 0,1,0,1
hash_isempty(env->plugins),1,0,1
e->plugin != NULL,1,0,1
ctx != NULL,1,0,1
"""call to obsolescent function hash_free()"" && 0",1,0,1
"::testing::internal::CmpHelperFloatingPointEQ<float>, expected, actual",1,0,1
status != CP_OK || n == 0 || plugins[n - 1] != NULL,1,0,1
"::testing::internal::IsHRESULTSuccess, (expr)",1,0,1
"::testing::internal::CmpHelperSTRCASEEQ, expected, actual",1,0,1
" sizeof(SBinaryInterfaceInitializer) == 8, ""FX11 binary size mismatch"" ",1,0,1
event != NULL,1,0,1
mask != hash->mask,1,0,1
"::testing::internal::CmpHelperFloatingPointEQ<double>, expected, actual",1,0,1
bufferHandle == 0,1,0,1
other.bufferHandle == 0,1,0,1
list_isempty(env->run_funcs),1,0,1
 sizeof(ObjectType) <= sizeof(StructType) ,1,0,1
"::testing::internal::CmpHelperLT, val1, val2",1,0,1
" sizeof(SBinaryShaderData5) == 36, ""FX11 binary size mismatch"" ",1,0,1
funcmask != 0,1,0,1
!framework_locked,1,0,1
" sizeof(SBinaryHeader5) == 96, ""FX11 binary size mismatch"" ",1,0,1
hash_count(hash) == 0,1,0,1
"last == NULL || list_contains(source, last)",1,0,1
hash_isempty(context->resolved_symbols),1,0,1
"lnode_pool_isfrom(pool, node)",1,0,1
hash_isempty(env->ext_points),1,0,1
list_isempty(list),1,0,1
"list_is_sorted(dest, compare)",1,0,1
"list_is_sorted(list, compare)",1,0,1
x < static_cast<double>((int) (INT_MAX / 2)) + 1.0,1,0,1
" sizeof(SBinaryHeader::SVarCounts) == 12, ""FX11 binary size mismatch"" ",1,0,1
