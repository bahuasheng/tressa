x_val,y_added,y_removed,y_combined
"temporary_buffer_equals(parser, """")",12,0,12
node->type == GUMBO_NODE_ELEMENT,6,4,10
index >= 0,6,3,9
token->type == GUMBO_TOKEN_START_TAG,8,0,8
 node->type == GUMBO_NODE_ELEMENT || node->type == GUMBO_NODE_TEMPLATE,5,1,6
tag >= 0,2,4,6
0,6,0,6
output->first != kGumboNoChar,3,2,5
"temporary_buffer_equals(parser, ""</"")",5,0,5
"temporary_buffer_equals(parser, ""<"")",5,0,5
token->type == GUMBO_TOKEN_WHITESPACE || token->type == GUMBO_TOKEN_CHARACTER || token->type == GUMBO_TOKEN_NULL || token->type == GUMBO_TOKEN_CDATA,3,1,4
"node_tag_is(html, GUMBO_TAG_HTML)",2,2,4
"node_qualname_is(node, HTML_QN(NOSCRIPT))",2,2,4
"node_qualname_is(state->_open_elements.data[0], HTML_QN(HTML))",2,2,4
index < children->length,2,2,4
"node_qualname_is(html, HTML_QN(HTML))",2,2,4
node->index_within_parent = -1,2,2,4
node->index_within_parent < children->length,3,1,4
foster_parent_element->type == GUMBO_NODE_ELEMENT,2,2,4
"node_tag_is(node, GUMBO_TAG_NOSCRIPT)",2,2,4
bookmark <= state->_active_formatting_elements.length,2,2,4
tokenizer->_temporary_buffer.length >= 2,4,0,4
"node_tag_is(state->_open_elements.data[0], GUMBO_TAG_HTML)",2,2,4
current_node->type == GUMBO_NODE_ELEMENT || current_node->type == GUMBO_NODE_TEMPLATE,2,1,3
token->type == GUMBO_TOKEN_END_TAG,3,0,3
sibling->index_within_parent < children->length,2,1,3
token->type == GUMBO_TOKEN_WHITESPACE || token->type == GUMBO_TOKEN_CHARACTER,1,2,3
char_ref->length >= 0,1,2,3
tag <= GUMBO_TAG_LAST,2,1,3
!node || node->type == GUMBO_NODE_ELEMENT,2,1,3
"!has_an_element_in_table_scope(parser, GUMBO_TAG_TH)",2,1,3
!current_node || current_node->type == GUMBO_NODE_ELEMENT || current_node->type == GUMBO_NODE_TEMPLATE,2,1,3
output->first == kGumboNoChar,2,1,3
"has_an_element_in_table_scope(parser, GUMBO_TAG_TH)",2,1,3
buffer_state->_type == GUMBO_NODE_WHITESPACE || buffer_state->_type == GUMBO_NODE_TEXT,1,2,3
"node_html_tag_is(node, GUMBO_TAG_HEAD)",1,1,2
title_text->type == GUMBO_NODE_TEXT,1,1,2
"node_tag_is(head, GUMBO_TAG_HEAD)",1,1,2
"node_html_tag_is(state->_open_elements.data[0], GUMBO_TAG_HTML)",2,0,2
iter->_width < 8,1,1,2
is_alpha(c),2,0,2
"node_tag_in_set(get_current_node(parser), (gumbo_tagset) { TAG(COLGROUP), TAG(TEMPLATE) })",1,1,2
template_insertion_modes->length > 0,1,1,2
"!node_tag_is(formatting_node, GUMBO_TAG_BODY)",1,1,2
"node_tag_is(get_current_node(parser), GUMBO_TAG_COLGROUP)",1,1,2
insert_at <= state->_open_elements.length,1,1,2
!tokenizer->_temporary_buffer_emit,2,0,2
"!node_qualname_is(formatting_node, HTML_QN(HTML))",1,1,2
"node_html_tag_is(get_current_node(parser), GUMBO_TAG_COLGROUP)",1,1,2
"node_html_tag_is(foster_parent_element, GUMBO_TAG_HTML)",1,1,2
"node_tag_is(get_current_node(parser), target)",1,1,2
(unsigned int) bookmark <= state->_active_formatting_elements.length,2,0,2
current->name != NULL,1,1,2
current->length > 0,1,1,2
"has_an_element_in_table_scope(parser, HTML_QN(TH))",1,1,2
char_ref->length == strlen(char_ref->name),1,1,2
node != NULL,2,0,2
open_elements->length > 2,1,1,2
"!node_tag_is(furthest_block, GUMBO_TAG_HTML)",1,1,2
"!node_qualname_is(formatting_node, HTML_QN(BODY))",1,1,2
"node_qualname_is(get_current_node(parser), target)",1,1,2
node->index_within_parent == -1,2,0,2
"node_qualname_is(foster_parent_element, HTML_QN(HTML))",1,1,2
buffer_state->_type == GUMBO_NODE_WHITESPACE || buffer_state->_type == GUMBO_NODE_TEXT || buffer_state->_type == GUMBO_NODE_CDATA,2,0,2
"node_tag_is(last_element, GUMBO_TAG_TR)",1,1,2
token->type == GUMBO_TOKEN_WHITESPACE || token->type == GUMBO_TOKEN_CHARACTER || token->type == GUMBO_TOKEN_CDATA,2,0,2
"node_qualname_is(head, HTML_QN(HEAD))",1,1,2
"node_qualname_is(node, HTML_QN(HEAD))",1,1,2
"node_qualname_is(last_element, HTML_QN(TR))",1,1,2
parent->type == GUMBO_NODE_ELEMENT,1,1,2
node->parent == NULL,2,0,2
"node_tag_is(body, GUMBO_TAG_BODY)",1,1,2
"node_qualname_is(body, HTML_QN(BODY))",1,1,2
"node_html_tag_is(last_element, GUMBO_TAG_TR)",1,1,2
current->codepoints.first != kGumboNoChar,1,1,2
"!node_tag_is(formatting_node, GUMBO_TAG_HTML)",1,1,2
"node_tag_is(foster_parent_element, GUMBO_TAG_HTML)",1,1,2
"!node_qualname_is(furthest_block, HTML_QN(HTML))",1,1,2
"node_tag_in_set(node, (gumbo_tagset) { TAG(HEAD), TAG(TEMPLATE) })",1,1,2
"node_tag_is(node, GUMBO_TAG_HEAD)",1,1,2
"node_html_tag_is(html, GUMBO_TAG_HTML)",2,0,2
!current_node || current_node->type == GUMBO_NODE_ELEMENT,1,1,2
"!has_an_element_in_table_scope(parser, HTML_QN(TH))",1,1,2
strlen(current->name) == current->length,1,1,2
QUAL_NAME_TAG(qualname) <= GUMBO_TAG_LAST,1,1,2
matched,2,0,2
parent->type == GUMBO_NODE_ELEMENT || parent->type == GUMBO_NODE_TEMPLATE,1,1,2
current_node->type == GUMBO_NODE_ELEMENT,1,1,2
"node_qualname_is(get_current_node(parser), HTML_QN(COLGROUP))",1,1,2
node_index < state->_open_elements.capacity,1,1,2
"node_html_tag_is(node, GUMBO_TAG_NOSCRIPT)",2,0,2
foster_parent_element->v.element.children.data[ table_element->index_within_parent] == table_element,1,1,2
state->_open_elements.length > 0,2,0,2
insert_at >= 0,1,0,1
formatting_node,1,0,1
index < vector->length,1,0,1
tokenizer->_temporary_buffer.data,1,0,1
root->v.element.children.length >= 2,1,0,1
html_node != NULL,1,0,1
output->original_text.data[output->original_text.length - 1] == '>',1,0,1
index != -1,1,0,1
(unsigned int) index < children->length,1,0,1
vector->length < vector->capacity,1,0,1
html_node,1,0,1
tag_state->_attributes.data == NULL,1,0,1
"!node_html_tag_is(furthest_block, GUMBO_TAG_HTML)",1,0,1
node_index >= 0,1,0,1
text->data[text->length - 1] == '>',1,0,1
element != &kActiveFormattingScopeMarker,1,0,1
"node_html_tag_is(body, GUMBO_TAG_BODY)",1,0,1
furthest_block,1,0,1
vector->data,1,0,1
*c == utf8iterator_current(&tokenizer->_input),1,0,1
error_location >= original_text,1,0,1
open_elements->data != NULL,1,0,1
loop_count < 1000000000,1,0,1
tokenizer->_doc_type_state.public_identifier == NULL,1,0,1
state->_head_element != NULL,1,0,1
elements->length > 0,1,0,1
iter->_width == 1,1,0,1
title_text->type == GUMBO_NODE_TEXT || title_text->type == GUMBO_NODE_WHITESPACE,1,0,1
j > 0,1,0,1
!tag_state->_is_start_tag,1,0,1
node,1,0,1
head != NULL,1,0,1
parser->_output->root != NULL,1,0,1
"node_html_tag_is(head, GUMBO_TAG_HEAD)",1,0,1
text->length >= 3,1,0,1
tokenizer->_doc_type_state.name == NULL,1,0,1
formatting_node_index != -1,1,0,1
text->data[0] == '<',1,0,1
output->original_text.data[0] == '<',1,0,1
state->_reprocess_current_token || token.type != GUMBO_TOKEN_START_TAG || token.v.start_tag.attributes.data == NULL,1,0,1
parent->type == GUMBO_NODE_DOCUMENT,1,0,1
saved_node_index > 0,1,0,1
token->original_text.length >= 2,1,0,1
"node_qualified_tag_is(get_current_node(parser), target_ns, target)",1,0,1
formatting_index >= 0,1,0,1
open_elements->length > 0,1,0,1
buffer_state->_buffer.length == 0,1,0,1
tag_state->_attributes.data,1,0,1
node->parent,1,0,1
state->_open_elements.length == 0,1,0,1
state->_text_node._buffer.length == 0,1,0,1
i < elements->length,1,0,1
tag_state->_attributes.capacity,1,0,1
node->v.element.tag_namespace == GUMBO_NAMESPACE_HTML,1,0,1
output->original_text.length >= 2,1,0,1
children->length == 0,1,0,1
*c || c == error_location,1,0,1
has_matching_a == 1,1,0,1
token->original_text.data[0] == '<',1,0,1
node_index > 0,1,0,1
tokenizer->_doc_type_state.system_identifier == NULL,1,0,1
!tokenizer->_script_data_buffer.length,1,0,1
text->length >= 2,1,0,1
"!node_html_tag_is(formatting_node, GUMBO_TAG_BODY)",1,0,1
parser->_output->root->type == GUMBO_NODE_ELEMENT,1,0,1
node == &kActiveFormattingScopeMarker || node->type == GUMBO_NODE_ELEMENT,1,0,1
fragment_ctx != GUMBO_TAG_LAST,1,0,1
!parser->_output->root,1,0,1
root->type == GUMBO_NODE_ELEMENT,1,0,1
tokenizer->_buffered_emit_char == kGumboNoChar,1,0,1
(unsigned int) node_index < state->_open_elements.capacity,1,0,1
bookmark >= 0,1,0,1
token->original_text.data[token->original_text.length - 1] == '>',1,0,1
node->parent->type == GUMBO_NODE_ELEMENT,1,0,1
!tokenizer->_temporary_buffer.length,1,0,1
"!node_html_tag_is(formatting_node, GUMBO_TAG_HTML)",1,0,1
index <= vector->length,1,0,1
(unsigned int) insert_at <= state->_open_elements.length,1,0,1
false,1,0,1
