x_val,y_added,y_removed,y_combined
sp != NULL,148,99,247
!AtEnd(),63,45,108
fip->field_passcount==1,60,40,100
0,47,29,76
fip->field_passcount==0,39,26,65
fip->field_readcount==TIFF_VARIABLE2,36,24,60
sizeof(uint32)==4,36,24,60
sp != 0,34,23,57
sizeof(uint64)==8,30,20,50
fip->field_readcount==TIFF_VARIABLE,24,16,40
sizeof(double)==8,24,16,40
fip->field_readcount==1,21,14,35
result.full(),19,15,34
sp->tbuflen >= npixels,18,12,30
s == 0,18,12,30
sizeof(float)==4,15,10,25
sizeof(uint16)==2,15,10,25
tif->tif_flags&TIFF_BIGTIFF,15,10,25
sizeof(int32)==4,15,10,25
sp->in_buffer_togo>0,15,10,25
n>0,14,10,24
"statement, regex",14,10,24
cc%rowlen == 0,12,8,20
sizeof(sp->stream.avail_out)==4,12,8,20
sizeof(uint8)==1,12,8,20
count<0x20000000,12,8,20
pi->prcno < pi->pirlvl->numprcs,12,8,20
fip->field_readcount>=1,12,8,20
count<0x40000000,12,8,20
sizeof(sp->stream.avail_in)==4,12,8,20
x >= 0,9,6,15
o->field_passcount==0,9,6,15
sizeof(int8)==1,9,6,15
sizeof(int16)==2,9,6,15
(cc%(4*stride))==0,9,6,15
(tif->tif_flags&TIFF_NOREADRAW)==0,9,6,15
(cc%(2*stride))==0,9,6,15
OJPEG_BUFFER>=2,9,6,15
(tif->tif_flags&TIFF_BUFFERMMAP)==0,9,6,15
sizeof(int64)==8,9,6,15
&ptr != this,8,6,14
"statement, ::testing::internal::ExitedUnsuccessfully, regex",8,6,14
"::testing::internal::DoubleNearPredFormat, val1, val2, abs_error",7,5,12
"::testing::internal::CmpHelperNE, val1, val2",7,5,12
"::testing::internal:: EqHelper<GTEST_IS_NULL_LITERAL_(expected)>::Compare, expected, actual",7,5,12
"::testing::internal::IsHRESULTSuccess, (expr)",7,5,12
"::testing::internal::CmpHelperSTRCASENE, s1, s2",7,5,12
"::testing::internal::CmpHelperSTREQ, expected, actual",7,5,12
"::testing::internal::CmpHelperFloatingPointEQ<float>, expected, actual",7,5,12
"::testing::internal::CmpHelperSTRCASEEQ, expected, actual",7,5,12
"::testing::internal::CmpHelperGT, val1, val2",7,5,12
"::testing::internal::CmpHelperFloatingPointEQ<double>, expected, actual",7,5,12
"::testing::internal::IsHRESULTFailure, (expr)",7,5,12
"::testing::internal::CmpHelperLE, val1, val2",7,5,12
_Ret.second,8,4,12
"::testing::internal::CmpHelperGE, val1, val2",7,5,12
"::testing::internal::CmpHelperSTRNE, s1, s2",7,5,12
sp->decodepfunc != NULL,7,5,12
"::testing::internal::CmpHelperLT, val1, val2",7,5,12
rowsize > 0,6,4,10
dec->numcomps == 3 || dec->numcomps == 4,6,4,10
jas_matrix_numrows(c1) == numrows && jas_matrix_numcols(c1) == numcols && jas_matrix_numrows(c2) == numrows && jas_matrix_numcols(c2) == numcols,6,4,10
sp->libjpeg_session_active!=0,6,4,10
jas_matrix_numrows(c1) == numrows && jas_matrix_numrows(c2) == numrows,6,4,10
 tv->count == 1 ,6,4,10
iccprof,6,4,10
threshold >= 0,6,4,10
n >= 0 && n < 32,6,4,10
rnd >=0 && rnd < i,5,5,10
count<0x80000000,6,4,10
stream->ptr_ - stream->bufstart_ <= stream->bufsize_,6,4,10
stream->cnt_ > 0,6,4,10
td->td_planarconfig == PLANARCONFIG_CONTIG,6,4,10
cblk->numimsbs >= 0,6,4,10
!sp->cinfo.comm.is_decompressor,6,4,10
o->field_readcount==1,6,4,10
sp->encodepfunc != NULL,6,4,10
cc>0,6,4,10
seg->type == JPC_SEG_RAW,6,4,10
(cc%stride)==0,6,4,10
(cc%(bps*stride))==0,6,4,10
 fii != FAILED_FII ,6,4,10
sp->cinfo.comm.is_decompressor,6,4,10
n >= 0,6,4,10
jas_matrix_numcols(c1) == numcols && jas_matrix_numcols(c2) == numcols,6,4,10
j >= 0,6,4,10
oldpos >= 0,6,4,10
int(dists.cols) >= knn,6,3,9
index >=0 && index < n,6,3,9
int(indices.cols) >= knn,6,3,9
dists.rows >= queries.rows,6,3,9
queries.cols == veclen(),6,3,9
!_HasUserException(),6,3,9
indices.rows >= queries.rows,6,3,9
rnd >=0 && rnd < n,5,3,8
 sz.width >= 8 ,4,4,8
bestIndex!=NULL,4,4,8
sp->pfunc != NULL,4,4,8
last,4,4,8
mux != NULL,7,0,7
sp->state == ZSTATE_INIT_ENCODE,4,3,7
 (scheme == COMPRESSION_DEFLATE) || (scheme == COMPRESSION_ADOBE_DEFLATE),4,3,7
sp->state == ZSTATE_INIT_DECODE,4,3,7
_HasUserException(),4,2,6
_M_pTokenState != nullptr,4,2,6
SUCCEEDED(_Hr),4,2,6
"__is_win_class(typename Details::AgileTypeHelper<T>::type) || __is_win_interface(typename Details::AgileTypeHelper<T>::type), ""Agile can only be used with ref class or interface class types""",4,2,6
len > 0,4,2,6
"!std::is_same<typename details::_TaskTypeFromParam<_ReturnType, _Ty>::_Type, details::_BadArgType>::value, ""incorrect argument for create_task; can be a callable object, an asynchronous operation, or a task_completion_event"" ",4,2,6
scheme == COMPRESSION_JPEG,4,2,6
!_M_Impl->_M_fHasValue,4,2,6
_Result.second,4,2,6
!_IsCanceled(),4,2,6
false,4,2,6
_M_Impl == nullptr,4,2,6
"std::is_same<typename _FunctorTypeTraits<_Function>::_Argument1Type, _ExpectedParameterType>::value || std::is_same<typename _FunctorTypeTraits<_Function>::_Argument1Type, task<_ExpectedParameterType>>::value, ""incorrect parameter type for the callable object in 'then'; consider _ExpectedParameterType or task<_ExpectedParameterType> (see below)""",4,2,6
pItem || NULLABLE,4,2,6
 (unsigned)row < (unsigned)mat->rows && (unsigned)col < (unsigned)mat->cols ,4,2,6
_IsCanceled(),4,2,6
cmptno >= 0 && cmptno < image->numcmpts_,3,2,5
o->field_readcount==TIFF_VARIABLE,3,2,5
bpno >= 0 && bpno < 31,3,2,5
"!strcmp(mode, ""r"") || !strcmp(mode, ""w"") || !strcmp(mode, ""r+"") || !strcmp(mode, ""w+"")",3,2,5
outb,3,2,5
nbits <= BITS_MAX,3,2,5
qmfbid == JPC_COX_RFT,3,2,5
na<ndir,3,2,5
prfprof,3,2,5
OJPEG_BUFFER>=2+8+sp->samples_per_pixel_per_plane*3,3,2,5
n<65536,3,2,5
siz->width && siz->height && siz->tilewidth && siz->tileheight && siz->numcomps,3,2,5
leaf->known_ && i == leaf->value_ + 1,3,2,5
sp->readheader_done==0,3,2,5
pchgno < pchglist->numpchgs,3,2,5
n < JPC_NUMZCCTXS,3,2,5
!(filldata & (~0x3f)),3,2,5
(occ0%rowsize)==0,3,2,5
size>0,3,2,5
id >= 0 && name && ext && ops,3,2,5
i >= 0 && i <= pxformseq->numpxforms,3,2,5
outcmptfmts,3,2,5
pxformseq->numpxforms < pxformseq->maxpxforms,3,2,5
scheme == COMPRESSION_PIXARLOG,3,2,5
stream->ptr_ - stream->bufbase_ <= stream->bufsize_ + JAS_STREAM_MAXPUTBACK,3,2,5
scheme==COMPRESSION_OJPEG,3,2,5
colr->iccp,3,2,5
n >= pxformseq->numpxforms,3,2,5
srctree->numleafsh_ == dsttree->numleafsh_ && srctree->numleafsv_ == dsttree->numleafsv_,3,2,5
pass0,3,2,5
pass->lyrno == lyrno,3,2,5
incmptfmts,3,2,5
i >= 0 && i < pxformseq->numpxforms,3,2,5
bufsize > JAS_STREAM_MAXPUTBACK,3,2,5
*pa <= 0xFFFFFFFFUL,3,2,5
numleafsh > 0 && numleafsv > 0,3,2,5
absstepsize >= 0,3,2,5
occ >= len,3,2,5
bufmax > 0,3,2,5
pi->valid,5,0,5
rlvl->numprcs,3,2,5
JAS_STREAM_MAXPUTBACK >= 2,3,2,5
x == lastx,3,2,5
!(stream->bufmode_ & JAS_STREAM_RDBUF),3,2,5
cod->compparms.numdlvls == cod->compparms.numrlvls - 1,3,2,5
compparms->numdlvls <= 32,3,2,5
sp->subsampling_convert_ycbcrbuf==0,3,2,5
sp->out_state<=ososEoi,3,2,5
boxinfo,3,2,5
pass->type == JPC_SEG_RAW,3,2,5
compparms->stepsizes,3,2,5
JPC_FIX_FRACBITS >= JPC_NUMEXTRABITS,3,2,5
!buf,3,2,5
sp->in_buffer_togo==0,3,2,5
cblktlx < cblkbrx && cblktly < cblkbry,3,2,5
streamno < streamlist->numstreams,3,2,5
sizeof(UInt64Aligned_t)==8,3,2,5
255>=6+sp->samples_per_pixel_per_plane*2,3,2,5
oldcmpt->tlx_ == 0 && oldcmpt->tly_ == 0,3,2,5
tcmpt->numstepsizes <= JPC_MAXBANDS,3,2,5
s>0,3,2,5
sp->decoderow != NULL,3,2,5
scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG,3,2,5
td->td_photometric == PHOTOMETRIC_LOGL,3,2,5
o->field_type==TIFF_ASCII,3,2,5
fip->field_readcount == TIFF_VARIABLE || fip->field_readcount == TIFF_VARIABLE2,3,2,5
cblk->mqenc,3,2,5
orient == JPC_TSFB_LL,3,2,5
sizeof(float_union)==4,3,2,5
(bitstream)->openmode_ & JPC_BITSTREAM_WRITE,3,2,5
n < JPC_NUMSCCTXS,3,2,5
sp->subsamplingcorrect==0,3,2,5
fip->field_readcount==2,3,2,5
bufsize > 0,3,2,5
OJPEG_BUFFER>=2+6+sp->samples_per_pixel_per_plane*2,3,2,5
o->field_readcount==TIFF_VARIABLE2,3,2,5
sp->decodetile != NULL,3,2,5
jas_stream_tell(cblk->stream) == startpass->start,3,2,5
m<0x80000000UL,3,2,5
n==2,3,2,5
sizeof(tmsize_t)==sizeof(void*),3,2,5
lyrno == numlyrs - 1,3,2,5
(bitstream)->openmode_ & JPC_BITSTREAM_READ,3,2,5
n.a16==256,3,2,5
cmptno >= 0 && cmptno <= image->numcmpts_,3,2,5
x > 0,3,2,5
y,3,2,5
occ >= codep->length,3,2,5
!(v & (~JAS_ONES(n))),3,2,5
sp->vgetparent != NULL,3,2,5
seg->stream,3,2,5
pdir,3,2,5
sizeof(char)==1,3,2,5
!jas_image_cmprof(outimage),3,2,5
sp->state == LSTATE_INIT_DECODE,3,2,5
!tile->cp,3,2,5
sp->plane_sample_offset==0,3,2,5
pos >= 0,3,2,5
fip->set_field_type!=TIFF_SETGET_OTHER,3,2,5
sp->vsetparent != 0,3,2,5
bitstream->cnt_ >= 0 && bitstream->cnt_ < 8,3,2,5
!(matrix->flags_ & JAS_MATRIX_REF),3,2,5
(uint64)n<=sp->in_buffer_file_togo,3,2,5
cod->numlyrs > 0 && cod->compparms.numdlvls <= 32,3,2,5
z,3,2,5
sp->sos_end[0].log!=0,3,2,5
tif->tif_data != 0,3,2,5
n<=OJPEG_BUFFER,3,2,5
(uint64)nextdir32==nextdir,3,2,5
i >= 0 && i <= attrtab->numattrs,3,2,5
bitstream->openmode_ & JPC_BITSTREAM_WRITE,3,2,5
o->field_passcount==1,3,2,5
td->td_photometric == PHOTOMETRIC_LOGLUV,3,2,5
inprof,3,2,5
newbufsize >= 0,3,2,5
te->runlen == 64*(span>>6),3,2,5
!std::numeric_limits<T>::is_signed && std::numeric_limits<T>::is_integer,5,0,5
cblk->stream,3,2,5
sp->subsamplingcorrect_done==0,3,2,5
bout,3,2,5
"curoff == JAS_CAST(long, tagtabent->off)",3,2,5
value >= 0,3,2,5
n < JPC_NUMMAGCTXS,3,2,5
o->field_type==TIFF_UNDEFINED,3,2,5
n >= 2,3,2,5
oldx >= 0 && oldx < oldcmpt->width_ && oldy >= 0 && oldy < oldcmpt->height_,3,2,5
leaf,3,2,5
(stream->bufmode_ & JAS_STREAM_WRBUF) == 0,3,2,5
seg->numpasses >= seg->maxpasses || dopartial,3,2,5
reloff >= 0,3,2,5
o->field_type==TIFF_SHORT,3,2,5
bitstream->cnt_ <= 0,3,2,5
scheme == COMPRESSION_LZW,3,2,5
!(x & (~JAS_ONES(bitpos + 1))),3,2,5
iccstream,3,2,5
 scheme == COMPRESSION_LZMA ,3,2,5
n.a16==1,3,2,5
sp->sos_end[s].log==0,3,2,5
OJPEG_BUFFER>=6,3,2,5
o->field_type==TIFF_LONG,3,2,5
xstart <= xend && ystart <= yend,3,2,5
fip->field_writecount==TIFF_VARIABLE2,3,2,5
bitstream->openmode_ & JPC_BITSTREAM_READ,3,2,5
sp->subsampling_convert_ycbcrimage==0,3,2,5
mstabent,3,2,5
bitpos >= 0,3,2,5
siz->comps,3,2,5
pass->type == JPC_SEG_MQ,3,2,5
dopartial ? (!cblk->curseg) : 1,3,2,5
maxctxs > 0,3,2,5
JAS_STREAM_MAXPUTBACK >= JP2_VALIDATELEN,3,2,5
dec->image->cmprof_,3,2,5
!stream->bufbase_,3,2,5
hc >= -1 && hc <= 1 && vc >= -1 && vc <= 1,3,2,5
seg->type == JPC_SEG_MQ,3,2,5
(tmsize_t)datasize>0,3,2,5
sp->state == LSTATE_INIT_ENCODE,3,2,5
m->buf_,3,2,5
fip->set_field_type!=TIFF_SETGET_INT,3,2,5
sp->encoderow != NULL,3,2,5
prof->numchans == 3 && prof->numrefchans == 3,3,2,5
dir[m].tdir_tag!=tag,3,2,5
img->Bitdepth16To8==NULL,3,2,5
scheme == COMPRESSION_JBIG,3,2,5
s<3,3,2,5
prc->numcblks > 0,3,2,5
sp->encodetile != NULL,3,2,5
attrval->ops->output,3,2,5
coc->compparms.numdlvls <= 32,3,2,5
(toff_t)tif->tif_size==n,3,2,5
!((stream->bufmode_ & JAS_STREAM_RDBUF) && (stream->bufmode_ & JAS_STREAM_WRBUF)),3,2,5
compinfos,3,2,5
cblk->passes,3,2,5
newprof->attrtab,3,2,5
pass->lyrno < 0 || pass->lyrno > lyrno,3,2,5
cblk->flags,3,2,5
sp->vsetparent != NULL,3,2,5
(cc0%rowsize)==0,3,2,5
datalength<0x80000000UL,3,2,5
pchg,3,2,5
255>=8+sp->samples_per_pixel_per_plane*3,3,2,5
prof->refclrspc == JAS_CLRSPC_CIEXYZ,3,2,5
(bitstream->buf_ & 0xff) != 0xff,3,2,5
img->UaToAa==NULL,3,2,5
maxents >= tab->numattrs,3,2,5
value>=0.0,3,2,5
sp->coderow != NULL,2,2,4
 (unsigned)i < (unsigned)_size ,2,2,4
 CV_HAAR_FEATURE_MAX >= 3 ,2,2,4
sp->codetile != NULL,2,2,4
br != NULL,4,0,4
data != NULL,4,0,4
dec->numcomps == 3,2,2,4
dec->status_ != VP8_STATUS_OK,3,1,4
 dist != CV_DIST_USER ,2,2,4
k >= 1,2,2,4
 strlen( desc ) < CV_HAAR_FEATURE_DESC_MAX ,2,2,4
rnd >=0 && rnd < size_,2,2,4
"!std::is_same<typename details::_TaskTypeFromParam<_Ty>::_Type, details::_BadArgType>::value, ""incorrect argument for create_task; can be a callable object, an asynchronous operation, or a task_completion_event"" ",2,2,4
tree != NULL,4,0,4
fip != NULL,2,2,4
rnd >=0 && rnd < num,2,2,4
 (mat).rows == 1 || (mat).cols == 1 ,2,2,4
 type == (((6) & ((1 << 3) - 1)) + (((1)-1) << 3)) ,2,2,4
data_size != NULL,4,0,4
"__is_valid_winrt_type(_Type*), ""must be a WinRT array compatible type""",2,1,3
"std::is_base_of<IUnknown, _Type>::value || __is_valid_winrt_type(_Type), ""must be a COM or WinRT type""",2,1,3
_M_pTask != nullptr,2,1,3
_PParam->_M_completeCount == 2,2,1,3
_Canceled,2,1,3
 _elem->flags >= 0 ,2,1,3
pNode != &m_anchor,2,1,3
query.cols == veclen(),2,1,3
_M_TaskState != _Completed,2,1,3
!_IsCompleted() || !_HasUserException(),2,1,3
color_cache != NULL,2,1,3
n != 0,3,0,3
p->last_y + y_pos + num_lines_out < p->output->height,3,0,3
_Task._GetImpl()->_IsCanceled() || _IsTokenCancled,2,1,3
bestIndex_ != NULL,2,1,3
_IsCreated(),2,1,3
!_SynchronousCancel || !_HasUserException(),2,1,3
_M_context._M_captureMethod != _S_captureDeferred,2,1,3
_Task._GetImpl()->_IsCanceled(),2,1,3
chunk_list,2,1,3
code_lengths != NULL,3,0,3
wpi_list,3,0,3
_Ct != nullptr,2,1,3
_SynchronousCancel && !_IsCompleted(),2,1,3
val < (1 << 16),2,1,3
val < (1 << 24),2,1,3
"std::is_same<typename _FunctorTypeTraits<_Function>::_Argument1Type, decltype(_To_task())>::value, ""incorrect parameter type for the callable object in 'then'; consider _ExpectedParameterType or task<_ExpectedParameterType> (see below)""",2,1,3
((_OuterTask->_M_pTaskCollection == nullptr) || _OuterTask->_M_fUnwrappedTask) && !_OuterTask->_IsCanceled(),2,1,3
!_HasUserException() && !_IsCompleted(),2,1,3
Concurrency::details::_CancellationTokenState::_IsValid(_M_pTokenState),2,1,3
_IsCompleted() || _PTaskHandle->_M_isTaskBasedContinuation,2,1,3
_PParam->_M_exceptionRelatedToken,2,1,3
!_UserException,2,1,3
_Status == ABI::Windows::Foundation::AsyncStatus::Completed,2,1,3
!_IsCanceled() || _PropagatedFromAncestor,2,1,3
node != NULL,2,1,3
htree_group != NULL,2,1,3
err == WEBP_MUX_OK,2,1,3
(!_IsStarted() && !_IsPendingCancel()) || !_PropagatedFromAncestor,2,1,3
wpi->header_ != NULL,2,1,3
_AncestorTask._GetImpl()->_IsCanceled(),2,1,3
_IsStarted() && !_UserException,2,1,3
_PParam->_M_completeCount == _PParam->_M_numTasks,2,1,3
wpi,3,0,3
td->td_nstrips > 0,2,1,3
!_ImplBase->_IsCanceled(),2,1,3
"std::is_same<decltype(details::_IsValidCreateAsync<_ReturnType>(_Func, 0, 0, 0, 0, 0, 0, 0, 0)), std::true_type>::value, ""argument to create_async must be a callable object taking zero, one, two or three arguments""",2,1,3
_IsCompleted(),2,1,3
"std::is_same<decltype(details::_IsValidTaskCtor<_ReturnType>(_Param, 0, 0, 0, 0, 0, 0, 0)), std::true_type>::value, ""incorrect argument for task constructor; can be a callable object, an asynchronous operation, or a task_completion_event"" ",2,1,3
"!(std::is_same<_Ty, _ReturnType>::value && details::_IsIAsyncInfo<_Ty>::_Value), ""incorrect template argument for task; consider using the return type of the async operation""",2,1,3
!_M_fHasValue && !_M_fIsCanceled,2,1,3
indices.cols == dists.cols,2,1,3
_OuterTask->_M_fUnwrappedTask && !_OuterTask->_IsCanceled(),2,1,3
v >= LOG_LOOKUP_IDX_MAX,2,0,2
br && br->buf_,1,1,2
bpp > 0,1,1,2
width > 0 && height > 0 && stride >= width,1,1,2
id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE || id == WEBP_CHUNK_IMAGE,1,1,2
 (unsigned)((type) & ((1 << 3) - 1)) <= 6 ,1,1,2
(ycbcrsubsampling[1]==1)||(ycbcrsubsampling[1]==2)||(ycbcrsubsampling[1]==4),1,1,2
jas_image_numcmpts(enc->image) == 3,2,0,2
sizeof(NppStBool) <= 4,1,1,2
 type == CV_64FC1 ,2,0,2
br != NULL && br->buf_ != NULL,2,0,2
stride >= width * bpp,1,1,2
(ycbcrsubsampling[0]==1)||(ycbcrsubsampling[0]==2)||(ycbcrsubsampling[0]==4),1,1,2
start != NULL,2,0,2
id != WEBP_CHUNK_IMAGE || nth == 1,1,1,2
(uint64_t)data_size == (uint64_t)width * height,2,0,2
sizeof(NppSt64u) == 8,1,1,2
tag == kChunks[IDX_FRAME].tag || tag == kChunks[IDX_TILE].tag,1,1,2
sizeof(NppSt64s) == 8,1,1,2
width > 0 && height > 0,2,0,2
 (reader).seq->elem_size == sizeof(elem),2,0,2
xsize > 0,2,0,2
idec->is_lossless_,2,0,2
sp->libjpeg_session_active==0,1,1,2
sizeof(NppSt32f) == 4,1,1,2
sizeof(NppSt8s) == 1,1,1,2
sizeof(NppStRect32u) == 4 * sizeof(NppSt32u),1,1,2
sizeof(NppStSize32u) == 2 * sizeof(NppSt32u),1,1,2
sizeof(NppSt64f) == 8,1,1,2
 _size > 0 ,1,1,2
wpi_chunk_ptr != NULL,1,1,2
tif->tif_fieldinfo != NULL,1,1,2
dst == data + size,2,0,2
p->mode == kLiteral,2,0,2
 (unsigned)xIndx < 3 && (unsigned)yIndx < 3 ,1,1,2
idx == IDX_FRAME || idx == IDX_TILE,1,1,2
dec->ready_,2,0,2
width > 0 && height > 0 && duration > 0,1,1,2
sizeof(NppStRect32s) == 4 * sizeof(NppSt32s),1,1,2
!IsWPI(kChunks[idx].id),2,0,2
hdr != NULL,2,0,2
 xnode && CV_NODE_IS_INT(xnode->tag) && ynode && CV_NODE_IS_INT(ynode->tag),2,0,2
wpi != NULL,2,0,2
"!std::is_same<_FuncRetType, _BadContinuationParamType>::value, ""incorrect parameter type for the callable object in 'then'; consider _ExpectedParameterType or task<_ExpectedParameterType> (see below)""",1,1,2
"std::is_same<decltype(details::_IsValidCreateAsync(_Func, 0, 0, 0, 0)), std::true_type>::value, ""argument to create_async must be a callable object taking zero, one or two arguments""",1,1,2
chunk,2,0,2
sizeof(NppSt16u) == 2,1,1,2
jas_stream_tell(cblk->stream) == jas_stream_getrwcount(cblk->stream),2,0,2
sizeof(NppSt32s) == 4,1,1,2
"std::is_same<decltype(_IsValidTaskCtor<_ReturnType>(_Param, 0, 0, 0, 0)), std::true_type>::value, ""incorrect argument for task constructor; can be a callable object, an asynchronous operation, or a task_completion_event"" ",1,1,2
sizeof(NppSt8u) == 1,1,1,2
bit == 0 || bit == 1,2,0,2
hdr,2,0,2
sizeof(NppSt16s) == 2,1,1,2
sizeof(NppSt32u) == 4,1,1,2
step >= 4,2,0,2
nmemb * size > 0,2,0,2
(uint16)n<=sp->in_buffer_file_togo,1,1,2
wpi->img_ != NULL,2,0,2
sizeof(NppStRect8u) == sizeof(NppSt32u),1,1,2
frame_tile_chunk != NULL,1,1,2
"__is_base_of(IUnknown, _Type) || __is_valid_winrt_type(_Type), ""must be a COM or WinRT type""",1,1,2
params != NULL,2,0,2
(uint64_t)(w * h) == (uint64_t)w * h,1,0,1
dec->next_transform_ == 1,1,0,1
dec->layer_data_size_ > 0,1,0,1
(cc % 3) == 0,1,0,1
"sizeof(__rcGUID_t) == sizeof(::_GUID), ""Incorect size for __rcGUID_t""",1,0,1
wpi != NULL && wpi->img_ != NULL,1,0,1
width != NULL && height != NULL,1,0,1
mem->part0_buf_ == NULL,1,0,1
code_lengths_size > 0,1,0,1
dec != NULL,1,0,1
worker->status_ <= OK,1,0,1
!idec->is_lossless_,1,0,1
transform->type_ == COLOR_INDEXING_TRANSFORM,1,0,1
enc->has_alpha_,1,0,1
jpc_firstone(datalen) < cblk->numlenbits + jpc_floorlog2(passcount),1,0,1
u_lines_in == v_lines_in,1,0,1
!enc->do_search_,1,0,1
idx >= 0,1,0,1
br->range_ < (range_t)128,1,0,1
pa != 0,1,0,1
tag == kChunks[IDX_ANMF].tag || tag == kChunks[IDX_FRGM].tag,1,0,1
config.quality >= 0 && config.quality <= 100.f,1,0,1
header->tag_ == kChunks[IDX_ANMF].tag || header->tag_ == kChunks[IDX_FRGM].tag,1,0,1
nb <= total,1,0,1
y_offset < MAX_POSITION_OFFSET,1,0,1
trimmed_length >= 2,1,0,1
cc != NULL,1,0,1
 restart ,1,0,1
dispose_method == (dispose_method & 1),1,0,1
stride >= width,1,0,1
refs != NULL,1,0,1
method <= ALPHA_LOSSLESS_COMPRESSION,1,0,1
 (unsigned)(row) < (unsigned)(mat).rows && (unsigned)(col) < (unsigned)(mat).cols ,1,0,1
(edge)->vtx[0] == (vertex) || (edge)->vtx[1] == (vertex),1,0,1
row_end <= transform->ysize_,1,0,1
proba->use_skip_proba_ == 0,1,0,1
(cc & 1) == 0,1,0,1
children - node == (int)(children - node),1,0,1
psize <= mem->part0_size_,1,0,1
headers != NULL,1,0,1
dec->thread_ctx_.filter_row_,1,0,1
method >= ALPHA_NO_COMPRESSION,1,0,1
inv_q_level[num_levels - 1] == max_s,1,0,1
(yuv_size & ALIGN_MASK) == 0,1,0,1
value <= MAX_ALLOWED_CODE_LENGTH,1,0,1
key <= (~0U >> cc->hash_shift_),1,0,1
num_htree_groups <= 0x10000,1,0,1
images->img_ != NULL,1,0,1
expn > 0.,1,0,1
io != NULL,1,0,1
 (writer).ptr <= (writer).block_max - sizeof(elem),1,0,1
p->scaler_u.y_accum == p->scaler_v.y_accum,1,0,1
pic != NULL && pic->argb != NULL,1,0,1
psize > 0,1,0,1
chunk_list != NULL,1,0,1
first_frame != NULL,1,0,1
a != b,1,0,1
histo_bits > 0,1,0,1
alpha_size != NULL,1,0,1
p->mode == kCacheIdx,1,0,1
!((x) & (~0x1f)),1,0,1
length < 0xfffffff8u,1,0,1
 ((reader).code & ~7) == 0 ,1,0,1
out != NULL,1,0,1
width >= 1 && height >= 1,1,0,1
headers->offset == headers->data_size - data_size,1,0,1
data,1,0,1
worker->status_ == NOT_OK,1,0,1
dec->last_out_row_ <= output->height,1,0,1
!(delta_y & 1),1,0,1
mem->end_ <= mem->buf_size_,1,0,1
pred_bits >= 2,1,0,1
len < 0xfffffff8u,1,0,1
tokens <= ending_token,1,0,1
found_vp8x != NULL,1,0,1
in->size <= out->size,1,0,1
proba < 256,1,0,1
width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE,1,0,1
frame_frag->header_->tag_ == kChunks[IDX_ANMF].tag || frame_frag->header_->tag_ == kChunks[IDX_FRGM].tag,1,0,1
sp->dec_codetab != NULL,1,0,1
dec,1,0,1
features != NULL,1,0,1
chunk->tag_ != NIL_TAG,1,0,1
mem->mode_ == expected,1,0,1
IsVP8XNeeded(enc),1,0,1
meta_index < hdr->num_htree_groups_,1,0,1
enc->use_tokens_,1,0,1
io->crop_left < io->crop_right,1,0,1
!wpi->is_partial_,1,0,1
idx != IDX_NIL,1,0,1
mem,1,0,1
inv_q_level[0] == min_s,1,0,1
sizeof(header) == ALPHA_HEADER_LEN,1,0,1
histogram_image->size == 1,1,0,1
width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION,1,0,1
 (writer).seq->elem_size == sizeof(elem),1,0,1
enc->use_layer_,1,0,1
v != 0,1,0,1
len == maxlen,1,0,1
worker->status_ == OK,1,0,1
dec->output_ != NULL,1,0,1
in != NULL,1,0,1
ccolor_transform_bits >= 2,1,0,1
header_size == (uint32_t)header_size,1,0,1
idec,1,0,1
x_offset < MAX_POSITION_OFFSET,1,0,1
huff_codes != NULL,1,0,1
(int)error < VP8_ENC_ERROR_LAST,1,0,1
n_bits <= 25,1,0,1
(cc & 3) == 0,1,0,1
dec->alpha_data_size_ == 0,1,0,1
width > 0,1,0,1
 length < 9 ,1,0,1
hash_bits > 0,1,0,1
filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST,1,0,1
enc->num_parts_ == 1,1,0,1
last_part >= 0,1,0,1
alpha_data != NULL,1,0,1
p->mode == kCopy,1,0,1
pass->term == 1,1,0,1
chunk_size != NULL,1,0,1
height > 0,1,0,1
filter >= 0 && filter < WEBP_FILTER_LAST,1,0,1
t1->value_ != t2->value_,1,0,1
is_level0,1,0,1
data == NULL,1,0,1
codes != NULL,1,0,1
tag == kChunks[IDX_VP8].tag || tag == kChunks[IDX_VP8L].tag,1,0,1
tree_size_orig <= (1 << (tree_depth_limit - 1)),1,0,1
bw->nb_bits_ >= 0,1,0,1
wpi.img_ != NULL,1,0,1
 (unsigned)CV_MAT_DEPTH(type) <= CV_64F ,1,0,1
width * (uint64_t)height < MAX_IMAGE_AREA,1,0,1
mem->start_ <= mem->end_,1,0,1
 sizeof(pt1) == sizeof(CvPoint) && sizeof(pt2) == sizeof(CvPoint) && reader.seq->elem_size == sizeof(CvPoint),1,0,1
size == (uint32_t)size,1,0,1
data_size < MAX_CHUNK_PAYLOAD,1,0,1
buf != NULL,1,0,1
mem->mode_ == MEM_MODE_MAP,1,0,1
pic->a_stride >= width,1,0,1
vp8_size == (uint32_t)vp8_size,1,0,1
frame_frgm_chunk != NULL,1,0,1
y_start < y_end,1,0,1
idec->mem_.start_ <= idec->mem_.end_,1,0,1
is_lossless != NULL,1,0,1
sp->enc_hashtab != NULL,1,0,1
headers.data_size >= headers.offset,1,0,1
pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE,1,0,1
"sizeof(Guid) == sizeof(::_GUID), ""Incorect size for Guid""",1,0,1
mem <= (uint8_t*)dec->mem_ + dec->mem_size_,1,0,1
mem->mode_ == MEM_MODE_APPEND,1,0,1
buf->u_stride == buf->v_stride,1,0,1
dec->rescaler_memory == NULL,1,0,1
src != NULL && dst != NULL,1,0,1
p->argb_or_distance < (1U << MAX_COLOR_CACHE_BITS),1,0,1
size <= MAX_CHUNK_PAYLOAD,1,0,1
width > 0 && height > 0 && duration >= 0,1,0,1
!(io->mb_y & 1),1,0,1
!ok || (worker->status_ == OK),1,0,1
enc != NULL && pic != NULL && pic->a != NULL,1,0,1
idx < (1 << MAX_COLOR_CACHE_BITS),1,0,1
sizeof (T) <= sizeof (size_t),1,0,1
pixel_index == xsize * ysize,1,0,1
row_start < row_end,1,0,1
dec->last_row_ <= dec->height_,1,0,1
(int)error >= VP8_ENC_OK,1,0,1
pic->width >= 1 && pic->height >= 1,1,0,1
dec->width_ <= final_width,1,0,1
!dec->is_alpha_decoded_,1,0,1
dec->next_transform_ <= NUM_TRANSFORMS,1,0,1
enc->tmpstream,1,0,1
riff_size == (uint32_t)riff_size,1,0,1
ret == cnt,1,0,1
image_chunk != NULL,1,0,1
mid <= max && mid >= min,1,0,1
!((x) & (~0x7ff)),1,0,1
chunk_size == (uint32_t)chunk_size,1,0,1
riff_size != NULL,1,0,1
start <= end,1,0,1
link->name != NULL,1,0,1
histogram_bits <= MAX_HUFFMAN_BITS,1,0,1
chunk->tag_ == kChunks[IDX_ANMF].tag || chunk->tag_ == kChunks[IDX_FRGM].tag,1,0,1
link != NULL,1,0,1
rd_opt >= RD_OPT_BASIC,1,0,1
symbols != NULL,1,0,1
output != NULL && output_size != NULL,1,0,1
proba_idx < FIXED_PROBA_BIT,1,0,1
n_bits >= 0,1,0,1
code_length <= MAX_ALLOWED_CODE_LENGTH,1,0,1
sizeof((seq)->first[0]) == sizeof(CvSeqBlock) && (seq)->elem_size == sizeof(elem_type),1,0,1
histogram_bits >= MIN_HUFFMAN_BITS,1,0,1
tokens != NULL,1,0,1
size <= refs->max_size,1,0,1
palette_size >= 1,1,0,1
data != NULL && output != NULL,1,0,1
(cc & 7) == 0,1,0,1
(uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD,1,0,1
