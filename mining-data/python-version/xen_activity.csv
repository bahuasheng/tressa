x_val,y_added,y_removed,y_combined
"HYPERVISOR_mmuext_op(&op, 1, NULL, DOMID_SELF) < 0",87,121,208
direction == DMA_NONE,66,80,146
0,77,64,141
spin_is_locked(&pcidevs_lock),50,50,100
ret,53,46,99
rc,66,32,98
shadow_lock_is_acquired(d),44,44,88
skb,40,48,88
!local_irq_is_enabled(),52,26,78
"&io_request_lock, 0",37,37,74
"HYPERVISOR_mmu_update(&u, 1, NULL, DOMID_SELF) < 0",28,38,66
local_irq_is_enabled(),37,26,63
v == current,34,29,63
!shadow_mode_refcounts(d),29,31,60
vmcb,26,26,52
paging_locked_by_me(d),35,15,50
!in_irq(),29,18,47
dir == DMA_NONE,23,23,46
"HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1)",22,23,45
!shadow_mode_enabled(d),28,16,44
mfn_valid(mfn),26,18,44
XSM_HOOK,40,3,43
"d, RTC_IRQ",22,21,43
s,22,21,43
false,30,11,41
page == NULL,22,17,39
dev != NULL,20,18,38
"HYPERVISOR_grant_table_op(GNTTABOP_unmap_grant_ref, &op, 1)",19,19,38
!pte_none(*pte),17,21,38
shadow_locked_by_me(d),18,18,36
(bus > 255) || (dev > 31) || (func > 7) || (reg > 255),18,18,36
rw_is_locked(&pcidevs_lock),18,18,36
spin_is_locked(&d->arch.shadow_lock),21,14,35
shadow2_lock_is_acquired(d),17,17,34
XSM_TARGET,27,6,33
in_irq(),15,17,32
HYPERVISOR_event_channel_op(&op) != 0,16,16,32
a->replacementlen > a->instrlen,14,17,31
CAN_PRODUCE_PENDING_IO,15,15,30
lock->magic != SPINLOCK_MAGIC,12,16,28
xsh != NULL,14,14,28
spin_is_locked(&desc->lock),20,8,28
ret == 0,14,14,28
rw->magic != RWLOCK_MAGIC,12,16,28
!spin_is_locked(lock),12,16,28
shadow_locked_by_me(v->domain),14,14,28
"bad_range(zone, page)",12,16,28
XSM_PRIV,22,5,27
mfn_valid(smfn),20,7,27
ref != -ENOSPC,9,17,26
sflags != -1,12,12,24
!nr_requests,11,13,24
!q->batch_sectors,11,13,24
tp != NULL,12,12,24
"d, device, intx",13,11,24
spin_is_locked(&d->event_lock),17,7,24
irq >= NR_IRQ_VECTORS,10,14,24
!max_queue_sectors,11,13,24
ioaddr != NULL,12,12,24
irqs_disabled(),12,12,24
p != NULL,12,11,23
spin_is_locked(&s->lock),16,7,23
vaddr >= FIXADDR_TOP || vaddr < FIXADDR_START,11,12,23
"ahd, AHD_MODE_SCSI_MSK, AHD_MODE_SCSI_MSK",11,11,22
skb->len < skb->data_len,10,12,22
!psr_mode_is_32bit(regs->cpsr),15,7,22
pcidevs_locked(),22,0,22
skb->dev == dev,10,12,22
"HYPERVISOR_mmu_update(&u, 1, NULL) < 0",11,11,22
shadow_mode_translate(d),12,10,22
"HYPERVISOR_mmuext_op(_op, op-_op, NULL, DOMID_SELF)",8,14,22
address >= end,9,13,22
!sg[i].page,10,12,22
smp_processor_id() != 0,12,9,21
cpus_empty(cpumask),8,12,20
d == NULL,11,9,20
!spin_is_locked(&s->pics_state->lock),10,10,20
"&vm_page_queue_mtx, MA_OWNED",10,10,20
shadow2_lock_is_acquired(v->domain),10,10,20
"ahd, AHD_MODE_CCHAN_MSK, AHD_MODE_CCHAN_MSK",10,10,20
spin_is_locked(&s->pics_state->lock),10,10,20
a->spfn_and_flags & PSH_pfn_mask,10,10,20
"cpu_isset(smp_processor_id(), cpumask)",8,12,20
flags == (GTF_accept_transfer | GTF_transfer_committed),9,11,20
notifier_rc != NOTIFY_DONE,13,7,20
"d, digl->device, digl->intx",11,9,20
shadow_lock_is_acquired(v->domain),10,10,20
spin_is_locked(vpic_lock(s->pics_state)),10,10,20
!valid_dma_direction(direction),10,10,20
mfn,12,8,20
 is_idle_vcpu(vc) ,14,5,19
down_trylock(&xenbus_lock) == 0,9,9,18
inst_len > 0,9,9,18
tab[offset] & _PAGE_PRESENT,9,9,18
"xc_gnttab_munmap(mount->gnth, file_name, 1) == 0",9,9,18
pgd_none(*pgd),7,11,18
d != dom0,9,9,18
!pte,8,10,18
(inf->period < ULONG_MAX) && (inf->slice_orig < ULONG_MAX),9,9,18
gfp_mask & __GFP_HIGHMEM,8,10,18
nr_psegs <= (BLKIF_MAX_SEGMENTS_PER_REQUEST+1),9,9,18
"HYPERVISOR_dom_mem_op( MEMOP_decrease_reservation, &mfn, 1, 0) != 1",8,9,17
p2m_locked_by_me(p2m),9,8,17
!rc,15,2,17
v != NULL,9,8,17
(v == current) || !vcpu_runnable(v),10,7,17
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), __pte_ma(0), 0)",8,9,17
ed != current,8,8,16
i > NUM_EFI_SYS_TABLES,8,8,16
!is_hvm_vcpu(v),8,8,16
skb_shinfo(i->fraglist)->frag_list,7,9,16
"bad_range(zone, &page[size])",7,9,16
"extraq_on(d, i)",8,8,16
!p2m_is_nestedp2m(p2m),8,8,16
"per_cpu(cpu_tlbstate, cpu).active_mm != next",7,9,16
!vma->vm_ops || !vma->vm_ops->nopage,7,9,16
irq < 0,9,7,16
mm->pgd == NULL,8,8,16
atomic_read(&mm->mm_count) == 0,7,9,16
mcl[0].result != 0,6,10,16
v->arch.shadow_vtable,8,8,16
(a->pfn&0xf0000000)==0,8,8,16
rc != 0,10,6,16
(pa & ~(PADDR_MASK & PAGE_MASK)) == 0,10,6,16
gpfn,8,8,16
sl4e != NULL,9,7,16
a->pfn<0x00100000,8,8,16
sl2e != NULL,8,7,15
spin_is_locked(&payload_lock),10,5,15
!r,13,2,15
p2m,9,6,15
 ! IS_INVALID_M2P_ENTRY(gpfn) ,9,6,15
p2m_entry,9,6,15
&init_deasserted,7,8,15
mpic == NULL,7,7,14
 pdev != NULL ,7,7,14
p2m->pod.entry_count < 0,10,4,14
pending_list[idx].count == 0,7,7,14
!virt_addr_valid((void *)addr),6,8,14
__task_on_queue(d),7,7,14
d->grant_table != NULL,7,7,14
(prod - cons) > sizeof(intf->in),7,7,14
_raw_spin_is_locked(lock),7,7,14
spin_is_locked(&irq_desc[vector].lock),7,7,14
err,7,7,14
!mfn_valid(mfn),7,7,14
current->domain == IDLE_DOMAIN_ID,7,7,14
ret != 1,7,7,14
spin_is_locked(&m->shadow_lock),7,7,14
pud_none(*pud),5,9,14
in && out && key,8,6,14
IS_VALID_PAGE(pi),9,4,13
l3e_get_flags(l3e[3]) & _PAGE_PRESENT,7,6,13
XSM_DM_PRIV,12,1,13
v != current,7,6,13
stype && !(stype & ~PGT_type_mask),8,5,13
live < 9999,6,6,12
pte_none(*pte),5,7,12
(bus > 255) || (dev > 31) || (func > 7),9,3,12
purb->actual_length <= pending_req->nr_pages * PAGE_SIZE,5,7,12
!chunk_is_mmapped(p),6,6,12
sched[i].buffer_offset == purb->iso_frame_desc[i].offset,5,7,12
pagetable_get_pfn(d->arch.phys_table) != 0,6,6,12
gfn < (RO_MPT_VIRT_END - RO_MPT_VIRT_START) / sizeof(l1_pgentry_t),6,6,12
0 < reserve_size && reserve_size % g_regionsize == 0,6,6,12
buffer_mach,5,7,12
l4e_get_flags(l4e[0]) & _PAGE_PRESENT,6,6,12
(req->length >> PAGE_SHIFT) <= MMAP_PAGES_PER_REQUEST,5,7,12
area >= zone->free_area + MAX_ORDER,6,6,12
(unsigned) base_committed % g_pagesize == 0,6,6,12
list_ent != &d->page_list,6,6,12
"ahd, ~(AHD_MODE_UNKNOWN_MSK|AHD_MODE_CFG_MSK), ~(AHD_MODE_UNKNOWN_MSK|AHD_MODE_CFG_MSK)",6,6,12
(unsigned) memory_info.BaseAddress % g_pagesize == 0,6,6,12
d != current,6,6,12
e->tot_pages <= e->max_pages,6,6,12
!mm,5,7,12
"current->domain, pt->irq",6,6,12
i * PAGE_SIZE >= req->length,5,7,12
mfn_valid(mfn) || !p2m_is_ram(*t),7,5,12
cache != NULL,8,4,12
"virt_to_machine(MMAP_VADDR(pending_idx, i)) == buffer_mach + i << PAGE_SHIFT",5,7,12
pgp->obj != NULL,6,6,12
"bad_range(zone, buddy1)",6,6,12
!isa_page_pool,5,7,12
aligned_OK(chunk2mem(p)),6,6,12
"bad_range(zone, buddy2)",6,6,12
i <= MMAP_PAGES_PER_REQUEST,5,7,12
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != 1",6,6,12
dev_boot_phase,4,8,12
num_mds > NUM_MEM_DESCS,6,6,12
psr & (IA64_PSR_UP|IA64_PSR_PP),6,6,12
sedf_runnable(ret.task),6,6,12
l1e_get_pfn(l1e) != INVALID_MFN || !p2m_is_ram(p2mt),6,6,12
irq >= NR_IRQS,6,6,12
l1e_get_pfn(p2m[gpfn]) == mfn,6,6,12
 sdom == NULL ,7,5,12
active_cons != active_prod,5,7,12
d != current->domain,8,4,12
"s->vcpu->domain, s->irq",6,6,12
current == (v),8,4,12
v->arch.privregs == NULL,6,6,12
ahd,6,6,12
prev_inuse(p),6,6,12
ok,9,3,12
purb->actual_length <= purb->transfer_buffer_length,5,7,12
(unsigned) ptr % g_regionsize == 0,6,6,12
"d, isa_irq",7,5,12
spin_is_locked(&d->evtchn_lock),6,6,12
(seg > 65535) || (bus > 255) || (dev > 31) || (func > 7) || (reg > 255),6,6,12
isairq < NR_ISAIRQS,6,5,11
!is_idle_vcpu(v),9,2,11
page_get_owner(page) != d,7,4,11
mfn_valid(_mfn(mfn)),7,4,11
regs != NULL,6,5,11
nr == arraysize,10,1,11
 !list_empty(&svc->runq_elem) ,6,5,11
setup.status != 0,5,6,11
gnttab_resume(),5,6,11
rc == 0,9,2,11
p2m_is_grant(ot) || p2m_is_grant(nt),6,5,11
 pagetable_get_pfn(d->vcpu[0]->arch.monitor_table) ,5,5,10
desc->status & IRQ_GUEST,5,5,10
HYPERVISOR_dom0_op(&op),5,5,10
pgp->obj->pool != NULL,5,5,10
timer != NULL,5,5,10
page_get_owner(mfn_to_page(mfn)) == d && get_gpfn_from_mfn(mfn) != INVALID_M2P_ENTRY,5,5,10
page->count_info == 0,5,5,10
__vcpu_on_runq(svc),6,4,10
mcl->result != 0,5,5,10
hvm_guest(v),5,5,10
&obj->obj_spinlock,9,1,10
 VALID_M2P(gpfn) ,5,5,10
valid_mfn(smfn),5,5,10
!contiguous_bitmap,5,5,10
(_p&~PAGE_MASK) == 0,5,5,10
gpfn == (gpfn & PGT_mfn_mask),6,4,10
(page->flags & PG_domain_mask) == current->domain,5,5,10
!shadow2_mode_refcounts(d),5,5,10
 B->next == 0 ,5,5,10
BUFFER_SIZE > strlen(file_name) + strlen(mount->export->export_path) + 1,5,5,10
(_l&~PAGE_MASK) == 0,5,5,10
spin_is_locked(&rank->lock),7,3,10
spin_is_locked(&irq_desc[irq].lock),5,5,10
(_l&PAGE_MASK) != 0,5,5,10
len > PAGE_SIZE,5,5,10
"(x & PGT_validated) || test_bit(_DOMF_dying, &page_get_owner(page)->domain_flags)",5,5,10
__task_on_runqueue(prev),5,5,10
b->pfn,5,5,10
((unsigned long) &vgettimeofday != VSYSCALL_ADDR(__NR_vgettimeofday)),4,6,10
ioc,5,5,10
!s->page,4,6,10
pmd_none(*pmd),4,6,10
page_get_owner(pg) == d,6,4,10
errno,7,3,10
"obj,OBJ",5,5,10
"s->pt.vcpu->domain, s->irq",5,5,10
addr >= end,5,5,10
list_empty(&page_address_pool),4,6,10
inf != NULL,5,5,10
d->arch.shadow_dirty_bitmap != NULL,5,5,10
shadow_mode_enabled(v->domain),5,5,10
(_p&PAGE_MASK) != 0,5,5,10
sc,5,5,10
(pg[i].u.inuse.type_info & PGT_count_mask) == 0,5,5,10
!PageHighMem(page),4,6,10
mfn == 0,5,5,10
ctx == NULL,5,5,10
sp->u.sh.head,9,1,10
spin_is_locked(&h->lock),5,5,10
d->sched_priv != NULL,5,5,10
in_interrupt(),5,5,10
sizeof(x) != sizeof(long),8,2,10
v == NULL,5,5,10
p2m->domain,6,4,10
sizeof(struct fw_tables) > (FW_TABLES_END_PADDR - FW_TABLES_BASE_PADDR),5,5,10
"request_irq(per_cpu(timer_irq, cpu), timer_interrupt, SA_INTERRUPT, timer_name[cpu], NULL)",4,6,10
"s->pt.vcpu->domain, RTC_IRQ",5,5,10
buf->vcpu_id >= MAX_VIRT_CPUS,5,5,10
entry->next->prev == entry,5,4,9
sizeof(buffered_iopage_t) > PAGE_SIZE,5,4,9
 size < tmem_mempool_maxalloc ,5,4,9
psr_mode_is_32bit(regs->cpsr),6,3,9
shadow_mode_enabled(ed->domain),5,4,9
cpu != raw_smp_processor_id(),6,3,9
v->arch.xsave_area,6,3,9
"request_irq(per_cpu(resched_irq, cpu), smp_reschedule_interrupt, SA_INTERRUPT, resched_name[cpu], NULL)",4,5,9
d,5,4,9
mmap_vstart == 0,3,6,9
(x & PGT_count_mask) != 0,5,4,9
d->arch.paging.log_dirty.allocs == 0,5,4,9
!d->is_dying,7,2,9
get_current() == main_thread,6,3,9
shadow_mode_enabled(d),4,5,9
 mmfn_info ,4,5,9
pfn != mfn && mfn != INVALID_P2M_ENTRY,4,5,9
t,6,3,9
entry->prev->next == entry,5,4,9
mfn_valid(omfn),6,3,9
"request_irq(per_cpu(callfunc_irq, cpu), smp_call_function_interrupt, SA_INTERRUPT, callfunc_name[cpu], NULL)",4,5,9
!pos,6,3,9
ctx->ctx_smpl_hdr,4,4,8
SHARED_M2P(gfn),6,2,8
 d == page_get_owner( &frame_table[pagetable_get_pfn(d->arch.phys_table)]) ,4,4,8
sizeof (l2_pgentry_t) == sizeof (shadow_l2e_t),4,4,8
ed == current,4,4,8
pgp->us.obj != NULL,6,2,8
(signed short)ref < 0,4,4,8
(VSYSCALL_ADDR(0) != __fix_to_virt(VSYSCALL_FIRST_PAGE)),3,5,8
(unsigned long)pte & (PAGE_SIZE-1),3,5,8
*count,4,4,8
(unsigned) g_last->top_committed % g_pagesize == 0,4,4,8
s->page == NULL,3,5,8
d->arch.shadow2.hash_table,4,4,8
copy == NULL,3,5,8
(unsigned long)pud & (PAGE_SIZE-1),3,5,8
a->pfn,4,4,8
d->arch.shadow.hash_table,4,4,8
"&Giant, MA_NOTOWNED",4,4,8
(CHUNK_SIZE_T)(sz) >= MINSIZE,4,4,8
(type & PGT_va_mask) != (x & PGT_va_mask),4,4,8
"HYPERVISOR_update_va_mapping( va, pfn_pte(page_to_pfn(pte), PAGE_KERNEL), 0)",4,4,8
cpu_nr != vcpu->processor,4,4,8
shadow_mode_write_all(d),4,4,8
current == main_thread,4,4,8
psr & (IA64_PSR_I),4,4,8
ref >= NR_GRANT_ENTRIES || ref < NR_RESERVED_ENTRIES,4,4,8
"EQ(sedf_runnable(d), __task_on_queue(d))",4,4,8
"p, MA_OWNED",4,4,8
d->arch.shadow2_hash_table,4,4,8
hap_locked_by_me(d),4,4,8
s->dma_address == 0,3,5,8
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), pfn_pte_ma(frame, PAGE_KERNEL), 0)",4,4,8
(char *) g_last->top_reserved - g_last->reserve_size <= (char *) g_last->top_committed && g_last->top_committed <= g_last->top_reserved && (unsigned) g_last->top_committed % g_pagesize == 0,4,4,8
"HYPERVISOR_update_va_mapping( (unsigned long)__va(page_to_pfn(pte) << PAGE_SHIFT), pfn_pte(page_to_pfn(pte), PAGE_KERNEL_RO), 0)",4,4,8
 !(l2e_get_flags(old_sl2e) & _PAGE_PRESENT) ,4,4,8
address & ~LARGE_PAGE_MASK,3,5,8
 size < tmh_mempool_maxalloc ,4,4,8
"test_bit(_DOMF_dying, &d->domain_flags)",4,4,8
"&io_request_lock, 1",4,4,8
shadow_mode_write_all(d) || shadow_mode_wr_pt_pte(d),4,4,8
ret.time > 0,4,4,8
obj != NULL,7,1,8
vcpu_runnable(v),4,4,8
addr & ~PAGE_MASK,4,4,8
size & ~LARGE_PAGE_MASK,3,5,8
blkif->remote_evtchn,4,4,8
tabpfn != 0,4,4,8
l2_backptr != PGT_va_mutable,4,4,8
"IMPLY(extraq_on(d, EXTRA_UTIL_Q) || extraq_on(d, EXTRA_PEN_Q), sedf_runnable(d))",4,4,8
p2md->pod.entry_count < 0,4,4,8
"pmap, MA_OWNED",4,4,8
mapping,4,4,8
"HYPERVISOR_update_va_mapping( (unsigned long)__va(pfn << PAGE_SHIFT), pfn_pte(pfn, flags), 0)",4,4,8
offset + size > PAGE_SIZE,3,5,8
sh_mfn_is_a_page_table(gmfn),4,4,8
ahc,4,4,8
(off + size) > ent->size,4,4,8
HYPERVISOR_set_timer_op(jiffies_to_st(j)) != 0,3,5,8
(size <= sizeof(mask)) && (size > 0),4,4,8
zone < NR_ZONES,4,4,8
"!cpus_equal(tmp, cpumask)",3,5,8
ch_idx >= num_hpets_used,4,4,8
l3e_get_flags(ml3e[3]) & _PAGE_PRESENT,4,4,8
"test_bit(vector, cfg->used_vectors)",4,4,8
!pirq->masked,4,4,8
count,4,4,8
a->smfn_and_flags & PSH_pfn_mask,3,5,8
p2m_is_hostp2m(p2m),7,1,8
(u64)base >> 32,3,5,8
n <= 0,4,4,8
end > next_start,4,4,8
"HYPERVISOR_update_va_mapping((__address), (__entry), UVMF_INVLPG|UVMF_MULTI|(unsigned long)((__vma)->vm_mm->cpu_vm_mask.bits))",4,4,8
d->is_dying,5,3,8
end > vma->vm_end,3,5,8
"!extraq_on(d,i)",4,4,8
VMALLOC_START > VMALLOC_END,3,5,8
pmd_val(*pmd) & _PAGE_PSE,3,5,8
size % g_pagesize == 0,4,4,8
!(type & ~PGT_type_mask),4,4,8
d->grant_table->maptrack != NULL,4,4,8
mm->map_count,3,5,8
get_gpfn_from_mfn(old_mfn) != (mpaddr >> PAGE_SHIFT),4,4,8
ch_idx < 0,4,4,8
error > 0,4,4,8
mapping->mode & MODE_DIRECTORY,4,4,8
g_last,4,4,8
currad->event_write_data != NULL,4,4,8
 !page_out_of_sync(page) ,4,4,8
(unsigned long)pmd & (PAGE_SIZE-1),3,5,8
(unsigned) g_last->top_reserved % g_regionsize == 0,4,4,8
(char *) g_last->top_reserved - g_last->reserve_size <= (char *) g_last->top_allocated && g_last->top_allocated <= g_last->top_committed,4,4,8
"HYPERVISOR_callback_op(CALLBACKOP_register, &event)",4,4,8
is_pv_domain(d),7,1,8
l2_backptr != PGT_va_unknown,4,4,8
HYPERVISOR_event_channel_op(&op),4,4,8
d == current->domain,4,4,8
"HYPERVISOR_memory_op( XENMEM_populate_physmap, &reservation) != 1",4,4,8
GET_PMU_OWNER(),4,4,8
vma->anon_vma,3,5,8
(gfp_flags & (__GFP_WAIT | __GFP_HIGHMEM)) == __GFP_HIGHMEM,3,5,8
"test_bit(_VCPUF_initialised, &v->vcpu_flags)",4,4,8
(unsigned) base_reserved % g_regionsize == 0,4,4,8
nv->nv_vvmcx != NULL,5,3,8
type == PGT_writable_page,4,4,8
!is_running_on_xen(),4,4,8
"HYPERVISOR_update_va_mapping( (unsigned long)__va(pfn << PAGE_SHIFT), pfn_pte_ma(mfn_list[i], PAGE_KERNEL), 0)",4,4,8
(unsigned) g_last->reserve_size % g_regionsize == 0,4,4,8
is_hvm_vcpu(v),5,3,8
stream->running,8,0,8
 gmfn ,5,3,8
!create_pae_xen_mappings(pl3e),4,4,8
(pfn) != (mfn),4,4,8
m->shadow_dirty_bitmap,4,4,8
 !hd->root_table ,4,4,8
cpu_gdt_descr[0].size > PAGE_SIZE,4,4,8
*num_mds > NUM_MEM_DESCS,4,4,8
atomic_read(&dev->refcnt),3,5,8
shadow_mode_enabled(d) && (d->cpuset != (1<<cpu)),4,4,8
"d, irq",4,4,8
(sz & MALLOC_ALIGN_MASK) == 0,4,4,8
"HYPERVISOR_update_va_mapping( (unsigned long)v, __pte_ma(0), 0)",4,4,8
valid_mfn(gmfn),4,4,8
cpu == 0,4,4,8
free > BLK_RING_SIZE,3,5,8
type && (type < PGT_l4_page_table),4,4,8
mbox->reader != mbox->writer,4,4,8
"lapics[apic_id].la_present, (""%s: missing APIC %u"", __func__, apic_id)",4,4,8
n != NULL,4,4,8
(unsigned long) &vtime != VSYSCALL_ADDR(__NR_vtime),3,5,8
ot != nt && (ot == p2m_mmio_direct || nt == p2m_mmio_direct),4,4,8
!find_watch(token),3,5,8
"pool,POOL",4,4,8
psr & IA64_PSR_I,4,4,8
 p->sched_priv != NULL ,4,4,8
get_gpfn_from_mfn(mfn) != (mpaddr >> PAGE_SHIFT),4,4,8
level >= 0 && level < XTL_NUM_LEVELS,4,3,7
 (gmfn & ~PGT_mfn_mask) == 0 ,4,3,7
d->arch.out_of_sync_extras_count == 0,4,3,7
mfn_valid(gmfn),6,1,7
r_time >= ctx_allow,4,3,7
"request_irq(per_cpu(ldebug_irq, cpu), ldebug_interrupt, SA_INTERRUPT, ldebug_name[cpu], NULL)",3,4,7
paging_locked_by_me(v->domain),6,1,7
!pagetable_val(ed->arch.monitor_table),3,4,7
"test_bit(_PGC_page_table, &page->count_info)",4,3,7
sl3e != NULL,4,3,7
!__vcpu_on_runq(svc),6,1,7
cpu_online(cpu),4,3,7
in && out && key && ivec,4,3,7
cpu < NR_GIC_CPU_IF,4,3,7
(c->user_regs.eflags & EF_IOPL) != 0,3,4,7
cpu_num != cpu,4,3,7
sizeof(f) != sizeof(unsigned long),5,2,7
NR_CPUS > 0x10000,4,3,7
r > 0,4,3,7
1,5,2,7
spin_is_locked(&pit->lock),7,0,7
size == PAGE_SIZE,5,2,7
"HYPERVISOR_grant_table_op(GNTTABOP_setup_table, &setup, 1) != 0",3,4,7
level > XTL_NONE && level < XTL_NUM_LEVELS,4,3,7
"address_needs_mapping(hwdev, sg[i].dma_address)",3,4,7
v->arch.cr3 == 0,4,3,7
page_list_empty(&p2m->pod.super),5,2,7
rc <= 0,6,1,7
frame_table[gmfn].count_info & PGC_page_table,4,3,7
mmfn_info != NULL,4,3,7
client != NULL,5,1,6
"!cpus_equal(cpumask, tmp)",3,3,6
mfmsr() & MSR_EE,3,3,6
va >= VM_MIN_KERNEL_ADDRESS,3,3,6
"!test_bit(irq, d->pirq_mask)",3,3,6
l3e_get_pfn(l3e) != INVALID_MFN || !p2m_is_ram(p2mt),3,3,6
"HYPERVISOR_update_va_mapping( (unsigned long)pgd, pfn_pte(virt_to_phys(pgd)>>PAGE_SHIFT, PAGE_KERNEL), 0)",3,3,6
r.type == IO_INT_T,3,3,6
"HYPERVISOR_memory_op( XENMEM_increase_reservation, &reservation) != 1",3,3,6
"xenbus_read(XBT_NIL, ""domid"", &dom_id)",3,3,6
d->arch.shadow_extras_count == 0,3,3,6
pfn != INVALID_M2P_ENTRY,3,3,6
!running_on_xen,3,3,6
dev->priv != NULL,3,3,6
d->grant_table->active != NULL,3,3,6
 (a->pfn & ~PSH_hl2) < 0x00100000UL,2,4,6
mfn == INVALID_MFN,3,3,6
rd == NULL,3,3,6
tp->pci_dev != NULL,3,3,6
vcpuid >= MAX_VIRT_CPUS,3,3,6
(unsigned)nr > 0xFF,3,3,6
conn->state == OK,3,3,6
!irq_to_iommu,3,3,6
l2e_get_flags(*pl2e) & _PAGE_PSE,4,2,6
"HYPERVISOR_kexec_op(KEXEC_CMD_kexec_get_range, &range)",3,3,6
sizeof(struct fake_acpi_tables) > (FW_ACPI_END_PADDR - FW_ACPI_BASE_PADDR),3,3,6
vcpu != current,3,3,6
pfn < (1u<<20),3,3,6
prev_inf->time_slept >= mcus * prev_inf->mcu_advance,3,3,6
"pgp,PGD",3,3,6
!nslots,3,3,6
k>=16,3,3,6
 order == 0 || order == 9 || order == 18 ,4,2,6
end_pfn && pfn >= end_pfn,3,3,6
(WEIGHT_PERIOD < ULONG_MAX) && (EDOM_INFO(p)->slice_orig < ULONG_MAX),3,3,6
table != NULL,3,3,6
pgp != NULL,5,1,6
 !d->arch.shadow_ht ,3,3,6
 l1_pgentry_val(l1e) & _PAGE_PRESENT ,3,3,6
r.type == IO_BLOCK_T,3,3,6
IS_PAGE_ALIGNED(page_va),4,2,6
(_p)->u.domain == (_d),3,3,6
 msg->shmem_ref != -ENOSPC ,2,4,6
"obj->pool,POOL",3,3,6
irq_info[pirq_to_irq(pirq)] != IRQ_UNBOUND,3,3,6
"HYPERVISOR_grant_table_op( GNTTABOP_unmap_grant_ref, tx_unmap_ops, gop - tx_unmap_ops)",3,3,6
r->lines[row] == -1,3,3,6
 !d->arch.shadow_dirty_bitmap ,3,3,6
pgp->obj->pool->client != NULL,3,3,6
sched == pending_req->sched,3,3,6
t->gt_version != 0,4,2,6
res,3,3,6
loglev >= 0 && loglev < N_LOGLEV,3,3,6
pgp->us.obj->pool != NULL,5,1,6
!in_irq() && local_irq_is_enabled(),4,2,6
lr < 0,4,2,6
dev->reg_state != NETREG_UNREGISTERED,2,4,6
((_p)->type_and_flags & PGT_count_mask) != 0,3,3,6
"copy_e820_map(map, (char)memmap.nr_entries) < 0",3,3,6
is_idle_vcpu(v),4,2,6
"address_needs_mapping(dev, dma_addr)",3,3,6
pfn_is_ram(smfn),4,2,6
nr_fixmaps > 0,3,3,6
 shadow_mode_external(ed->domain) ,3,3,6
__va >= IOREMAP_VIRT_START,3,3,6
XSM_OTHER,5,1,6
l2e_get_pfn(l2e) != INVALID_MFN || !p2m_is_ram(p2mt),3,3,6
from >= end,2,4,6
"irq_map->dom, device, intx",3,3,6
is_epte_superpage(ept_entry),4,2,6
shadow_mode_translate(v->domain),3,3,6
gpfn && !(gpfn & ~PGT_mfn_mask),4,2,6
addr & (~PAGE_MASK_4K),3,3,6
!p->has_cpu,3,3,6
!in_atomic(),3,3,6
"HYPERVISOR_update_va_mapping( (unsigned long)mm->pgd, pfn_pte(virt_to_phys(mm->pgd)>>PAGE_SHIFT, PAGE_KERNEL_RO), UVMF_TLB_FLUSH)",3,3,6
!in_interrupt(),3,3,6
gpfn != 0,2,4,6
!entry->busy,3,3,6
"spin_is_locked(per_cpu(schedule_data, cpu).schedule_lock)",5,1,6
!cpus_empty(d->domain_dirty_cpumask),3,3,6
v,4,2,6
!max_page,3,3,6
"!test_bit(_DOMF_dying, &d->domain_flags) && shadow_mode_refcounts(d)",3,3,6
p->state == TASK_DYING,3,3,6
spin_is_locked(&d->arch.irq_lock),3,3,6
(device <= 31) && (intx <= 3),4,2,6
(prod - cons) > sizeof(intf->out),3,3,6
 pagetable_val(ed->arch.monitor_table) ,3,3,6
 list_empty(&p2md->pod.super) ,3,3,6
k>=fpp,3,3,6
page,4,2,6
!dev_boot_phase,2,4,6
r->lines[row] > 0,3,3,6
pool != NULL,6,0,6
d->vcpu[0] == NULL,4,2,6
pages == 0,3,3,6
!mfn_valid(mfn) || p2mt != p2m_mmio_direct,4,2,6
np != NULL,3,3,6
(unsigned long)pgd & (PAGE_SIZE-1),2,4,6
got_child == -1,3,3,6
type != DT_IRQ_TYPE_INVALID,3,3,6
msg.type != type,2,4,6
 entry->writable_pl1e == -1 ,3,3,6
 !hd->root_table || !hd->paging_mode ,3,3,6
(((unsigned long)hdr) & (PAGE_SIZE-1)) != 0,3,3,6
"HYPERVISOR_multicall(tx_mcl, mcl - tx_mcl) != 0",3,3,6
(page->type_count != 0) && (page->tot_count != 0),3,3,6
!__task_on_queue(d),3,3,6
heap == NULL,3,3,6
vlapic != NULL,3,3,6
a->smfn,4,2,6
page_get_owner(page) == NULL,3,3,6
((_p)->count_and_flags & PGC_count_mask) != 0,3,3,6
!list_empty(&schedule_data[cpu].runqueue),3,3,6
pagetable_get_paddr(v->arch.monitor_table) == 0,3,3,6
(_d)->arch.shadow.locker == current->processor,3,3,6
nr_psegs <= MAX_BLK_SEGS*2,3,3,6
lock->recurse_cnt < 0xfu,3,3,6
max_mapnr && pfn >= max_mapnr,3,3,6
d->arch.paging.shadow.hash_table,5,1,6
elf->sym,4,2,6
valid_mfn(*sl2mfn),3,3,6
"&psp->ps_mtx, MA_OWNED",3,3,6
dom_xen == NULL,3,3,6
req->cb != NULL,3,3,6
((ulong)local + length) & ~0xffffffffUL,3,3,6
page_count(p) == 0,2,4,6
r == -1,4,2,6
PageReserved(kpte_page),3,3,6
d->domain_id != 0,4,2,6
"d, pdev, pintx",6,0,6
!(d->arch.shadow_mode & ~mode),3,3,6
v->is_initialised,4,2,6
"range_straddles_page_boundary(ptr, size)",3,3,6
commit->path,3,3,6
"HYPERVISOR_dom_mem_op( MEMOP_increase_reservation, &mfn, 1, order) != 1",2,4,6
 pagetable_get_paddr(v->arch.monitor_table) ,3,3,6
bytes <= sizeof(unsigned long),3,3,6
!w,2,4,6
d->grant_table->shared != NULL,3,3,6
"ofd_check(&m->om_mem[pos], cells)",3,3,6
idle_domain == NULL,3,3,6
index < MACHPHYS_MBYTES>>1,3,3,6
id >= NET_TX_RING_SIZE,3,3,6
ret != 0,3,3,6
regs->error_code & PFEC_page_present,4,2,6
xen_idt_idx < MAX_XEN_IDT,3,3,6
ent != NULL,3,3,6
r.type == IO_ADDR_T,3,3,6
prev->sched_priv != NULL,3,3,6
curinf->deadl_abs > now,3,3,6
(r & SHADOW2_SET_FLUSH) == 0,3,3,6
 result->owner == DOMID_COW ,3,3,6
find_watch(token),2,4,6
dev->reg_state != NETREG_REGISTERED,2,4,6
"xc_gnttab_munmap(mount->gnth, buf, 1) == 0",3,3,6
((_p)->type_and_flags & PGT_type_mask) == (_t),3,3,6
error != num_gpfn,3,3,6
((long)p & PAGE_MASK) != ((long)hdr & PAGE_MASK),3,3,6
pg,4,2,6
dev->reg_state != NETREG_UNINITIALIZED,2,4,6
rc != -EAGAIN,3,3,6
new_modes,3,3,6
shadow_mode_translate(d) && !shadow_mode_external(d),3,3,6
l3e_get_flags(*pl3e) & _PAGE_PSE,4,2,6
offset < size,3,3,6
p2m_locked_by_me(d->arch.p2m),3,3,6
wrc == 0,6,0,6
 !pagetable_get_paddr(d->arch.phys_table) ,3,3,6
gop->status == GNTST_bad_page,3,3,6
type != XS_WATCH_EVENT,2,4,6
!list_empty(&prv->sdom),3,3,6
skb->skb_type == SKB_ZERO_COPY,3,3,6
!mfn_valid(sh_ctxt->mfn2),3,3,6
(htab_raddr & (htab_bytes - 1)) == 0,3,3,6
page_type_count(page) != 0,3,3,6
snapshot_mfn,3,3,6
mfn_valid(d->arch.paging.log_dirty.top),3,3,6
vpic_is_locked(vpic),6,0,6
dom_io == NULL,3,3,6
head->next == NULL,3,3,6
skb_shinfo(skb)->frag_list,3,3,6
!supported,4,2,6
vpmu->xenpmu_data,4,2,6
!irqs_disabled(),4,2,6
"HYPERVISOR_update_va_mapping( (unsigned long)mm->pgd, pfn_pte(virt_to_phys(mm->pgd)>>PAGE_SHIFT, PAGE_KERNEL), 0)",3,3,6
direction == PCI_DMA_NONE,3,3,6
page_idx & (order_size - 1),2,4,6
is_viridian_domain(d),3,3,6
obj->no_evict == 0,3,3,6
"HYPERVISOR_multicall(mcl, nseg) != 0",2,4,6
!is_idle_vcpu(vc),6,0,6
"page, PGT_ldt_page",3,3,6
(sizeof(struct pfn_info) << 20) <= (FRAMETABLE_VIRT_END - FRAMETABLE_VIRT_START),3,3,6
crit_count[cpu] >= 0,3,3,6
"!synch_test_bit(evtchn, &s->evtchn_mask[0])",3,3,6
!shadow_mode_external(v->domain),3,3,6
msr_bit == NULL,3,2,5
free_req > 0,3,2,5
spin_is_locked(&platform_timer_lock),3,2,5
(r & SHADOW_SET_FLUSH) == 0,4,1,5
typecode <= HVM_SAVE_CODE_MAX,3,2,5
raw_smp_processor_id() != cpu,3,2,5
obj->pool != NULL,5,0,5
v->arch.vm_event,5,0,5
"__shadow_status(d, gpfn, PGT_snapshot)",3,2,5
avail_req < 0,3,2,5
tmem_page_list_pages == 0,3,2,5
(l1e_get_flags(_nl1e) & L1_DISALLOW_MASK) == 0,2,3,5
opt_allow_superpage,4,1,5
action->ack_type == ACKTYPE_EOI,4,1,5
 !(entry->writable_pl1e & (sizeof(l1_pgentry_t)-1)) ,3,2,5
sizeof(struct edd_device_params) != EDDPARMSIZE,3,2,5
(devfn != PCI_ISA_DEVFN) || ((vendor_id == 0x8086) && (device_id == 0x7000)),3,2,5
d->arch.hvm_domain.irq.dpci,3,2,5
r->type == IOREQ_TYPE_COPY,3,2,5
ao->magic == LIBXL__AO_MAGIC,5,0,5
!(mfn_to_page(gmfn)->shadow_flags & SHF_page_type_mask & ~SHF_L1_ANY),3,2,5
"!test_bit(vector, desc->arch.used_vectors)",4,1,5
p,3,2,5
SHARED_M2P(pfn),3,2,5
 !table ,3,2,5
cpu != smp_processor_id(),3,2,5
!e,3,2,5
" !cpumask_empty(&cpus) && cpumask_test_cpu(cpu, &cpus) ",3,2,5
 spin_is_locked(&iommu->lock) ,5,0,5
mfn != gfn,3,2,5
(vendor_id == 0x8086) && (device_id == 0x7113),3,2,5
"offsetof(struct edd_info, edd_device_params) != EDDEXTSIZE",3,2,5
va < (void *)MAPCACHE_VIRT_END,3,2,5
(pi == NULL) || IS_VALID_PAGE(pi),4,1,5
res == 1,3,2,5
 max_mode ,3,2,5
"page_make_private(d, page) != 0",4,1,5
shadow_mode_external(d),4,1,5
pod_locked_by_me(p2m),5,0,5
p2m->domain->arch.paging.alloc_page,3,2,5
hvm_sr_handlers[typecode].save == NULL,3,2,5
!is_domain_direct_mapped(d),3,2,5
(void *)MAPCACHE_VIRT_START <= va,3,2,5
dirty_vram->sl1ma[i] == sl1ma,3,2,5
!stream->in_checkpoint,5,0,5
PGT_base_page_table == PGT_l2_page_table,3,2,5
sgi < 16,4,1,5
ptbase_mfn,3,2,5
p2m->domain->arch.paging.free_page,3,2,5
rc < 0,3,2,5
bytes != 1,4,1,5
read_cr3() == __pa(idle_pg_table),3,2,5
spin_is_locked(&v->arch.vgic.lock),5,0,5
hvm_sr_handlers[typecode].load == NULL,3,2,5
h->cur <= h->size,3,2,5
!pagetable_get_paddr(v->arch.monitor_table),2,2,4
0 < release_size && release_size % g_regionsize == 0,2,2,4
XEN_VIRT_END > FRAMETABLE_VIRT_END,2,2,4
 !is_pv32_domain(current->domain) ,2,2,4
hashent->refcnt != 0,2,2,4
"&smp_rv_mtx, MA_OWNED",2,2,4
__task_on_runqueue(d),2,2,4
!(pg[i].count_info & PGC_offlined),2,2,4
gfn != SHARED_M2P_ENTRY,2,2,4
irq_channel == NULL,2,2,4
commit->path == NULL,2,2,4
(fd == -1 && (flags == (MAP_SHARED|MAP_ANON) || flags == (MAP_PRIVATE|MAP_ANON))) || (fd != -1 && flags == MAP_SHARED),2,2,4
head->next->pprev == &head->next,2,2,4
!stream->in_checkpoint_state,4,0,4
aligned_OK(chunk2mem(newp)),2,2,4
pages,3,1,4
!d->plugged,2,2,4
have_fastchunks(av),2,2,4
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), pfn_pte_ma(mfn, PAGE_KERNEL), 0)",2,2,4
(!writeable) || ((page_type_count(page) != 0) && ((page->flags & PG_type_mask) == PGT_writeable_page)),2,2,4
newsize >= nb && (((PTR_UINT)(chunk2mem(p))) % alignment) == 0,2,2,4
device.backend_kind == LIBXL__DEVICE_KIND_VBD,2,2,4
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), __pte_ma(((mfn+i)<<PAGE_SHIFT)|__PAGE_KERNEL), 0)",2,2,4
!libxl__xswait_inuse(&dss->pvcontrol),2,2,4
!port->driver->tx_empty,2,2,4
"d, pirq_dpci",2,2,4
"(bnc = dma_alloc_coherent(dev, size, &dma, GFP_ATOMIC)) == NULL",2,2,4
l1e_get_flags(gpte) & _PAGE_RW,2,2,4
 size < PAGE_SIZE ,2,2,4
p2m->alloc_page,2,2,4
ma < DIRECTMAP_VIRT_END - DIRECTMAP_VIRT_START,2,2,4
hdr->freelist.next || hdr->freelist.prev,2,2,4
!list_empty(RUNQUEUE(cpu)),2,2,4
"svc->rqd != RQD(ops, vc->processor)",2,2,4
 IS_COMPAT(v->domain) ,2,2,4
total <= (CHUNK_SIZE_T)(av->max_total_mem),2,2,4
gicc,2,2,4
nclears >= 3,2,2,4
msg->type == buf.type,2,2,4
 !ch ,2,2,4
mapping->mode & MODE_DELETED,2,2,4
l2e_get_flags(gl2e) & _PAGE_PRESENT,2,2,4
 hcb->hash_sz % sizeof(thash_data_t) == 0 ,2,2,4
valid_mfn(pmfn),2,2,4
rma_base & (rma_sz - 1),2,2,4
"VM_ASSIST(d, VMASST_TYPE_writable_pagetables) || shadow_mode_write_all(d)",2,2,4
 result == -1 || result >= 16,2,2,4
"&icu_lock, MA_OWNED",2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)pmd, pfn_pte(virt_to_phys(pmd)>>PAGE_SHIFT, PAGE_KERNEL), 0)",2,2,4
!success && ((exchange.nr_exchanged != 0) || (rc == 0)),2,2,4
n <= BLKIF_MAX_SEGMENTS_PER_REQUEST,2,2,4
preemptible,4,0,4
d->arch.paging.shadow.hash_walking == 0,3,1,4
ecx < min_size,2,2,4
&trans->list == &u->transactions,2,2,4
(page_type_count(page) != 0) && (page_tot_count(page) != 0),2,2,4
page->count_info != 0,2,2,4
rep->req_id != id,2,2,4
ep && !(((unsigned long)ep) & ((sizeof *ep) - 1)),2,2,4
pg[i].count_info != 0,2,2,4
(xenstored_ready <= 0),2,2,4
"page, d->domain",2,2,4
mic == NULL,2,2,4
start_pfn != (table_start + (tables_space >> PAGE_SHIFT)),2,2,4
!pdev,2,2,4
list_empty(&vreq->next),4,0,4
pv,2,2,4
ret < 0,2,2,4
!(pa & ~PAGE_MASK),3,1,4
ret != difference,2,2,4
list_empty(&wqv->list),3,1,4
"strcmp(""XenVMMXenVMM"", signature) || (eax < 0x40000002)",2,2,4
HVM_DOMAIN(v),2,2,4
MSI_IRQ(irq),2,2,4
(_p2m)->locker == current->processor,2,2,4
ncopies >= 3,2,2,4
x->u.sh.type <= 15,3,1,4
(locc == 0) && (hocc == 0),2,2,4
"irq_info[irq] != mk_irq_info(IRQT_VIRQ, virq, 0)",2,2,4
spin_is_locked(&prv->lock),3,1,4
table == NULL,2,2,4
(page->flags & PG_domain_mask) == p->domain,2,2,4
ferror(f),2,2,4
"gfn_locked_by_me(p2m, gfn)",4,0,4
i == target,3,1,4
strlen(node) + strlen(path) + 1 >= BUFFER_SIZE,2,2,4
evtchn < 0,2,2,4
pfn == 0,2,2,4
req_off != 0,2,2,4
pfn_to_page(gmfn)->count_info & PGC_page_table,2,2,4
p->fd->bk == p,2,2,4
ia64_psr(regs)->up,2,2,4
!((unsigned long)va & ~PAGE_MASK),2,2,4
op->cmd == XEN_DOMCTL_SCHEDOP_putinfo,2,2,4
get_gpfn_from_mfn(mfn) == INVALID_M2P_ENTRY,2,2,4
 pagetable_get_pfn(v->arch.monitor_table) ,2,2,4
!req_info[id].in_use,2,2,4
tn < HPET_TIMER_NUM,3,1,4
remainder_size == element_size,2,2,4
mpt_order <= MAX_ORDER,2,2,4
!spin_is_locked(&s->lock),2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)__user_pgd(pgd), pfn_pte(virt_to_phys(__user_pgd(pgd))>>PAGE_SHIFT, PAGE_KERNEL), 0)",2,2,4
__task_on_runqueue(RUNLIST(prev)),2,2,4
shadow_enabled,2,2,4
 tmem_mempool != NULL ,3,1,4
!start,2,2,4
(_p2m)->locker == -1,2,2,4
"svc==CSCHED_VCPU(per_cpu(schedule_data, svc->vcpu->processor).curr)",2,2,4
get_max_fast(av) <= request2size(MAX_FAST_SIZE),2,2,4
_itir.ps > PAGE_SHIFT,2,2,4
!realloc,2,2,4
(_pfn)->count_info == 0,2,2,4
!spin_is_locked(&ctx->ctx_lock),2,2,4
(CHUNK_SIZE_T)(newsize) >= (CHUNK_SIZE_T)(nb),2,2,4
dom_p2m == NULL,2,2,4
 l2e_get_flags(gpde) & _PAGE_PRESENT ,2,2,4
!v->arch.hvm_vcpu.flag_dr_dirty,2,2,4
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), __pte_ma((mfn<<PAGE_SHIFT)|__PAGE_KERNEL), 0)",2,2,4
count != 0,2,2,4
idx == i,2,2,4
is_domain_direct_mapped(d),2,2,4
st == NULL,2,2,4
flags & FOLL_GET,2,2,4
"HYPERVISOR_dom_mem_op( MEMOP_increase_reservation, &mfn, 1, 0) != 1",2,2,4
 svc->sdom != NULL ,3,1,4
binbit,2,2,4
irq == pirq->arch.irq,2,2,4
"test_bit(PG_pinned, &virt_to_page(pgd)->flags)",2,2,4
((char*)p + sz) <= ((char*)(av->top)),2,2,4
(CHUNK_SIZE_T)(av->max_total_mem) >= (CHUNK_SIZE_T)(av->mmapped_mem) + (CHUNK_SIZE_T)(av->sbrked_mem),2,2,4
len + ret > PRINTF_BUFFER_SIZE-1,2,2,4
"set_shared_p2m_entry(d, gfn->gfn, se->mfn) == 0",2,2,4
l2e_get_flags(sl2e) & _PAGE_PRESENT,2,2,4
pool->pgp_count,2,2,4
to_virt(mem_base) > (void *) &_text,2,2,4
"!extraq_on(d, EXTRA_PEN_Q)",2,2,4
tmp_base != __vsa_base,2,2,4
s && target,2,2,4
sis_apic_bug != (quirk_id == QUIRK_IOAPIC_BAD_REGSEL),2,2,4
vmx_secondary_exec_control != _vmx_secondary_exec_control,2,2,4
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != rc",2,2,4
xen_feature(XENFEAT_auto_translated_physmap),2,2,4
pagetable_get_pfn(d->arch.phys_table) == 0,2,2,4
target >= 0 && target < v->domain->max_vcpus,2,2,4
(dst - rma) + oftree_len < eomem,2,2,4
 spin_is_locked(&hd->mapping_lock) && pt_mfn ,2,2,4
tce_data != NULL,2,2,4
sizeof(struct vcpu_guest_context) < sizeof(struct compat_vcpu_guest_context),3,1,4
irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS,2,2,4
stream->in_checkpoint,4,0,4
ptr_sl1e,2,2,4
(result == -1) || (result >= 16),2,2,4
sizeof(struct fw_tables) > (FW_TABLES_END_PADDR_MIN - FW_TABLES_BASE_PADDR),2,2,4
"!test_bit(vector, cfg->used_vectors)",2,2,4
pfn_valid(mfn),2,2,4
apic < nr_ioapics,2,2,4
free_head[x]->pprev == &free_head[x],2,2,4
(old_top == initial_top(av) && old_size == 0) || ((CHUNK_SIZE_T) (old_size) >= MINSIZE && prev_inuse(old_top)),2,2,4
"page, d",2,2,4
error == -EBUSY,3,1,4
shadow_mode_external(current->domain),2,2,4
ref < NR_RESERVED_ENTRIES || ref >= NR_GRANT_ENTRIES,2,2,4
shadow_mode_log_dirty(d),2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)__user_pgd(mm->pgd), pfn_pte(virt_to_phys(__user_pgd(mm->pgd))>>PAGE_SHIFT, PAGE_KERNEL_RO), UVMF_TLB_FLUSH)",2,2,4
bm && bitmap_valid(bm),4,0,4
cpus_weight(dirty_mask) <= 1,2,2,4
shmem_ref != -ENOSPC,2,2,4
vpd,2,2,4
(page->count_info & ~PGC_xen_heap) == 0,3,1,4
len > 0,2,2,4
"test_bit(__CSFLAG_scheduled, &svc->flags)",2,2,4
ret.time > now,2,2,4
 !(req->flags & MEM_EVENT_FLAG_VCPU_PAUSED) ,2,2,4
i == 1,2,2,4
!(pair[0].l2 & (1<<PAGE_SHIFT)),2,2,4
paging_mode_external(v->domain),2,2,4
ctx.err,2,2,4
rc || setup.status,2,2,4
prot == (PROT_READ|PROT_WRITE),2,2,4
nr <= arraysize,4,0,4
page_get_owner(old_page) == d,2,2,4
p->bk->fd == p,2,2,4
"sh_type_is_pinnable(v, sp->type)",2,2,4
spin_is_locked(&current->mm.shadow_lock),2,2,4
p->bk == b || (CHUNK_SIZE_T)chunksize(p->bk) >= (CHUNK_SIZE_T)chunksize(p),2,2,4
vmcb->eventinj.fields.v == 0,3,1,4
!ripv,2,2,4
(dir != DMA_FROM_DEVICE) && (dir != DMA_TO_DEVICE),2,2,4
"per_cpu(timer_irq, 0) < 0",2,2,4
tpmif->remote_evtchn,2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)pud, pfn_pte(virt_to_phys(pud)>>PAGE_SHIFT, PAGE_KERNEL), 0)",2,2,4
r_time != 0,2,2,4
sizeof (l4_pgentry_t) == sizeof (shadow_l4e_t),2,2,4
page_get_owner(p + i) != d,2,2,4
 (psh_type == PGT_snapshot) || !mfn_out_of_sync(gmfn) ,2,2,4
"!extraq_on(d, EXTRA_UTIL_Q)",2,2,4
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32on64_vcpu(v) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(backpointer(sp))) == v->domain),2,2,4
prev_inuse(next),2,2,4
pte_tlb_inserted_many(old_pte),2,2,4
spc == NULL,2,2,4
(mfn_to_page(_sl2mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l2_32_shadow,2,2,4
mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2_32_shadow,2,2,4
pfn >= d->arch.foreign_mfn_count,2,2,4
valid_mfn(*sl3mfn),2,2,4
insn_len >= PATCH_LEN,2,2,4
ctx->ctx_fl_using_dbreg,2,2,4
!page_get_owner(mfn_to_page(v->arch.monitor_shadow_ref)),2,2,4
(d)->arch.mm.pgd == NULL,2,2,4
spin_is_locked(&viosapic->lock),2,2,4
(__va >= IOREMAP_VIRT_START) && (__va < IOREMAP_VIRT_END),2,2,4
page_nr < max_page,2,2,4
valid_mfn(*sl1mfn),2,2,4
log_htab_size >= HTAB_MIN_LOG_SIZE,2,2,4
0 < decommit_size && decommit_size % g_pagesize == 0,2,2,4
mfn == INVALID_P2M_ENTRY,2,2,4
!(pa & ~PADDR_MASK),3,1,4
0 < remaining_commit_size && remaining_commit_size % g_pagesize == 0,2,2,4
pte == NULL,2,2,4
pagetable_get_pfn(v->arch.guest_table) == mfn_x(gmfn),2,2,4
 hcb->ht == THASH_TLB ,2,2,4
"d, irq, intr",2,2,4
((char*)p) < min_address || ((char*)p) > max_address,2,2,4
(intack.source == hvm_intsrc_pic) || (intack.source == hvm_intsrc_lapic),2,2,4
pgp->us.obj->pool->client != NULL,3,1,4
!list_empty(&sdom->vcpu),2,2,4
bytes_to_wrap == calc_bytes_to_wrap(buf),2,2,4
intr_vector < 0,2,2,4
!have_fastchunks(av),2,2,4
iim == d->arch.breakimm,2,2,4
rc > 0,2,2,4
"HYPERVISOR_update_va_mapping(address, pteval, (unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| UVMF_INVLPG|UVMF_MULTI)",2,2,4
to_pci_dev(dev)->dma_mask,2,2,4
"!is_idle_vcpu(per_cpu(schedule_data, cpu).curr)",2,2,4
 spfn_info ,2,2,4
!timer->function,2,2,4
vreq->secs_pending == 0,4,0,4
paging_mode_translate(d),2,2,4
"HYPERVISOR_grant_table_op( GNTTABOP_map_grant_ref, tx_map_ops, mop - tx_map_ops)",2,2,4
shadow_type != PGC_SH_none,2,2,4
task != NULL,2,2,4
(av->pagesize & (av->pagesize-1)) == 0,2,2,4
aligned_OK(chunk2mem(brk)),2,2,4
svc->flags & CSFLAG_scheduled,2,2,4
d->arch.paging.shadow.dirty_bitmap != NULL,2,2,4
!x2apic_enabled,2,2,4
&pool->pool_rwlock,3,1,4
!port->driver,2,2,4
in_smallbin_range(nb),2,2,4
log_htab_size <= SDR1_HTABSIZE_MAX,2,2,4
spin_is_locked(&d->big_lock),2,2,4
libxl__ev_child_inuse(&aodev->child),2,2,4
bit != 0,2,2,4
valid_mfn(_mfn(mfn)),2,2,4
d->arch.pmt,2,2,4
cc->in_buf_used == 0,2,2,4
success && (rc != 0),2,2,4
 !iommu || !cmd ,2,2,4
pgd_page(*pgd) != pgd_page(*pgd_ref),2,2,4
 hcb->ht == THASH_VTLB ,2,2,4
v->processor == smp_processor_id(),2,2,4
d->cc->buf_allocated >= d->cc->buf_used + m->length,2,2,4
l2_pgentry_val(l2e) & _PAGE_PRESENT,2,2,4
error != -EBUSY,2,2,4
(page->flags & PG_type_mask) == PGT_ldt_page,2,2,4
t == NULL,2,2,4
revents & POLLIN,3,1,4
(unsigned long)sl3e % (4 * sizeof (shadow_l3e_t)) == 0,2,2,4
d->arch.paging.hap.p2m_pages >= 0,2,2,4
"HYPERVISOR_grant_table_op(GNTTABOP_setup_table, &setup, 1)",2,2,4
level <= GUEST_PAGING_LEVELS,2,2,4
v->next_in_list != NULL,2,2,4
"!test_bit(v->vcpu_id, &info->vcpus)",2,2,4
"!hypercall_xlat_continuation(&left, 0x01, nat_ops, cmp_uops)",2,2,4
"offsetof(struct shadow_page_info, mbz) != offsetof(struct page_info, u.inuse._domain)",2,2,4
"pirq == pirq_info(d, domain_irq_to_pirq(d, irq))",2,2,4
mbox->reader == mbox->writer,2,2,4
next == av->top || inuse(next),2,2,4
"spin_is_locked(&irq_desc[domain_pirq_to_irq(d, mirq)].lock)",2,2,4
t->is_dead || t->is_running || !t->is_scheduled,2,2,4
(e < s) || (e >> PAGE_SHIFT) >= hvm_info->reserved_mem_pgstart,2,2,4
sizeof(vcpu_info_t) != 64,2,2,4
iosapic_intr_info[vector].count,2,2,4
 e->t == 0 ,2,2,4
(num_src_gpfn % PTRS_PER_PTE) != 0,2,2,4
d == page_get_owner(mfn_to_page(pagetable_get_pfn( d->arch.phys_table))),2,2,4
action->ack_type == ACKTYPE_UNMASK,2,2,4
(page->count_info & PGC_count_mask) == 0,2,2,4
inst_len <= MAX_INST_LEN,2,2,4
tmh_dedup_enabled(),2,2,4
l3_backptr != PGT_va_mutable,2,2,4
p2m_is_grant(t),2,2,4
page_get_owner(page) != NULL,2,2,4
_pl3e != _ol3e,2,2,4
addr & 0x8000,2,2,4
oc->buf,2,2,4
!shadow_mode_external(d),3,1,4
key >> height == 0,2,2,4
!mmio || !(shadow_l1e_get_flags(sl1e) & _PAGE_PRESENT),2,2,4
next != NULL,2,2,4
!sigchld_owner,2,2,4
(CHUNK_SIZE_T)(size) >= (CHUNK_SIZE_T)(nb),2,2,4
&pgp->obj->obj_spinlock,2,2,4
sizeof (shadow_l1e_t) != 2 * sizeof (unsigned long),2,2,4
ia64_psr(regs)->pp,2,2,4
(mfn_to_page(_sl2mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l2_32_shadow,2,2,4
p2m_flush_locked(p2m) != 0,2,2,4
callbacks[x->u.sh.type] != NULL,3,1,4
p == 0,2,2,4
toolstack_save_fd > 0,2,2,4
 x->n == e->n && x->t == e->t ,2,2,4
d->exec_domain[i]->sched_priv != NULL,2,2,4
shadow2_mode_translate(d),2,2,4
*ofh_tree == 0xdeadbeef00000000,2,2,4
v->arch.paging.shadow.guest_vtable == NULL,4,0,4
irq >= nr_irqs || irq <0,3,1,4
sizeof (struct shadow_page_info) != sizeof (struct page_info),2,2,4
!d->arch.physmap_built,2,2,4
"IMPLY(inf->status & EXTRA_AWARE, extraq_on(d, EXTRA_UTIL_Q))",2,2,4
d == page_get_owner(pfn_to_page(pagetable_get_pfn( d->arch.phys_table))),2,2,4
(_d)->arch.shadow.locker == -1,2,2,4
l3_backptr != PGT_va_unknown,2,2,4
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), pfn_pte_ma(frame+i, PAGE_KERNEL), 0)",2,2,4
*mfn == INVALID_MFN,2,2,4
(!writeable) || ((page_type_count(page) != 0) && ((page->flags & PG_type_mask) == PGT_writeable_page) && ((page->flags & PG_need_flush) == PG_need_flush)),2,2,4
xsave_cntxt_size != ebx,2,2,4
 pg->u.inuse.type_info != e->n ,2,2,4
hvm_irq_dpci,2,2,4
NR_IRQS > (PAGE_SIZE * 8),2,2,4
!cpus_empty(cpu_present_map),2,2,4
!spin_is_locked(&cpu_add_remove_lock),2,2,4
!(gpfn & ~PGT_mfn_mask),2,2,4
inuse(p),2,2,4
preemptible >= 0,2,2,4
empty,2,2,4
data_size > PERCPU_SIZE,2,2,4
shadow_type != PGC_SH2_none,2,2,4
thread == main_thread,2,2,4
libxl__ev_time_isregistered(ev),2,2,4
len > skb->len,2,2,4
"(offsetof(struct page_info, count_info) & 7) != 0",2,2,4
gop->status != 0,2,2,4
(((page->flags & PG_type_mask) == PGT_writeable_page) && (page_type_count(page) != 0)) || (((page->flags & PG_type_mask) == PGT_none) && (page_type_count(page) == 0)),2,2,4
valid_mfn(shadow_l3e_get_mfn(*sl3e)),2,2,4
order <= shadow_max_order(d),2,2,4
hypervisor < 0,2,2,4
a->pfn < 0x00100000UL,2,2,4
"src_bus <= mptable_maxbusid, (""bus id %d too large"", src_bus)",2,2,4
 !iommu ,2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)pmd, pfn_pte(virt_to_phys(pmd)>>PAGE_SHIFT, PAGE_KERNEL_RO), 0)",2,2,4
 is_hvm_domain(d) && d->arch.hvm_domain.hap_enabled ,2,2,4
shadow_mode_enabled(d) && ((pset & d->cpuset) != (1<<cpu)),2,2,4
mfn_to_page(smfn)->u.sh.head,4,0,4
pfn_valid(smfn),2,2,4
"&sched_lock, MA_NOTOWNED",2,2,4
!(read_cr0() & 8),2,2,4
0 < commit_size && commit_size % g_pagesize == 0,2,2,4
data[i] != 0x5a,2,2,4
vector != d->arch.pirq_vector[pirq],2,2,4
!((uintptr_t) aiocbp->aio_buf & (dev->info.sector_size-1)),2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)pud, pfn_pte(virt_to_phys(pud)>>PAGE_SHIFT, PAGE_KERNEL_RO), 0)",2,2,4
total_off != len,2,2,4
cpu_tlbstate[cpu].active_mm != next,2,2,4
(CHUNK_SIZE_T)(av->mmapped_mem) <= (CHUNK_SIZE_T)(av->max_mmapped_mem),2,2,4
"d, pirq",2,2,4
l2e_get_flags(l2e) & _PAGE_PRESENT,3,1,4
((char*)p) >= min_address,2,2,4
script,2,2,4
pagetable_get_pfn(v->arch.monitor_table) == 0,3,1,4
pagetable_get_paddr(d->arch.phys_table),2,2,4
"!vtimer_emulate(regs, hsr)",2,2,4
spin_is_locked(&d->mm.shadow_lock),2,2,4
"per_cpu(virq_to_irq, cpu)[virq] != -1",2,2,4
xfeature_mask != (xfeature_mask & XCNTXT_MASK),2,2,4
s && s->lapic_info[number],2,2,4
current == v,2,2,4
s != NULL,2,2,4
"per_cpu(callfunc_irq, cpu) < 0",2,2,4
page_list_empty(&p2m->pod.single),3,1,4
regs,2,2,4
d->tx_req_cons <= d->ctrl_if->tx_req_prod,2,2,4
(newp->prev_size == offset),2,2,4
phys_to_nid(page_to_maddr(pg)) == node,2,2,4
start_pfn != table_end,2,2,4
malloc_usable_size(p) >= 256,2,2,4
ret != rc,2,2,4
 is_pv32_domain(current->domain) ,2,2,4
"per_cpu(ipi_to_irq, cpu)[ipi] != -1",2,2,4
"per_cpu(timer_irq, cpu) < 0",2,2,4
j >= ptwr_eip_stat_thresholdN,2,2,4
cpu_online(i),2,2,4
"(ent = kmalloc(sizeof(*ent), GFP_ATOMIC)) == NULL",2,2,4
 page_list_empty(&p2md->pod.super) ,2,2,4
!PageLocked(page),2,2,4
inuse[ref],2,2,4
!virt_addr_valid(addr),2,2,4
map != NULL,2,2,4
(o ^ l1e_get_intpte(ol1e)) & ~(int)(_PAGE_ACCESSED|_PAGE_DIRTY),2,2,4
valid_mfn(shadow_l4e_get_mfn(*sl4e)),2,2,4
total == 0,2,2,4
order != 9,2,2,4
msg->id == buf.id,2,2,4
sizeof(((struct dom0_op *)0)->u) != sizeof(((struct dom0_op *)0)->u.pad),2,2,4
irqlocked,2,2,4
f == d,2,2,4
"(bnc = dma_alloc_coherent(dev, size, &dma, 0)) == NULL",2,2,4
is_hvm_domain(d),3,1,4
sz == SIZE_SZ,2,2,4
atomic_read(&entry->map_count) != 0,2,2,4
FW_END_PADDR_MIN != FW_TABLES_END_PADDR_MIN,2,2,4
atomic_read(&sig->count) != 1,2,2,4
nr_map < 1,2,2,4
l2_backptr == PGT_va_unknown,2,2,4
(vector > LAST_DYNAMIC_VECTOR) || (vector < FIRST_DYNAMIC_VECTOR),2,2,4
remainder_size == request2size(sizes[i]),2,2,4
prod > xenstore_buf->req_cons + XENSTORE_RING_SIZE,2,2,4
tables->fw_tables_size < sizeof(*tables) + sizeof(tables->efi_memmap[0]) * tables->num_mds,2,2,4
(CHUNK_SIZE_T)(old_size) < (CHUNK_SIZE_T)(nb + MINSIZE),2,2,4
(CHUNK_SIZE_T)(av->sbrked_mem) <= (CHUNK_SIZE_T)(av->max_sbrked_mem),2,2,4
 page_get_owner(pg) != 0 ,2,2,4
v->arch.hvm_vmx.launch_cpu == smp_processor_id(),2,2,4
 gpfn != SHARED_M2P_ENTRY ,2,2,4
!spin_is_locked(&sd->_lock),2,2,4
"!test_bit(ARCH_HVM_IO_WAIT, &v->arch.hvm_vcpu.ioflags)",2,2,4
!shadow_lock_is_acquired(_d),2,2,4
next_chunk(prv) == p,2,2,4
frame == 0,2,2,4
len,2,2,4
"cpu_isset(cpu, cpu_callin_map)",2,2,4
av->n_mmaps >= 0,2,2,4
spin_is_locked(&ch->lock),2,2,4
raw_smp_processor_id() != 0,2,2,4
"offsetof(struct page_info, u.inuse._domain) != (offsetof(struct page_info, count_info) + sizeof(u32))",2,2,4
d->arch.mm.pgd != NULL,2,2,4
mfn_is_out_of_sync(gmfn),3,1,4
rp != NULL,2,2,4
!cpus_empty(d->cpumask),2,2,4
instr == INSTR_CMP || instr == INSTR_SUB,2,2,4
!ao->nested,2,2,4
!(aiocbp->aio_offset & (dev->info.sector_size-1)),2,2,4
"xc_gnttab_munmap(mount->gnth, priv_req->page, 1) == 0",2,2,4
(htab_addr & ((1UL << log_htab_size) - 1)) == 0,2,2,4
v->domain->max_vcpus > 8,2,2,4
"test_bit(vector, desc->arch.used_vectors)",3,1,4
"cpus_subset(cpumask, cpu_online_map)",2,2,4
new == NULL,2,2,4
callbacks[x->t] != NULL,2,2,4
 (((unsigned long) va) >= MAPCACHE_VIRT_START) && (((unsigned long) va) <= MAPCACHE_VIRT_END) ,2,2,4
mfn_valid(snpmfn),4,0,4
"va == (va & PG_FRAME), (""ldt not page aligned"")",2,2,4
l4e_get_flags(ml4e[0]) & _PAGE_PRESENT,2,2,4
shadow2_mode_external(d),2,2,4
idx < MAPCACHE_ENTRIES,2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)__user_pgd(mm->pgd), pfn_pte(virt_to_phys(__user_pgd(mm->pgd))>>PAGE_SHIFT, PAGE_KERNEL), 0)",2,2,4
!has_vlapic(v->domain),4,0,4
 sp->mbz != 0 ,2,2,4
next_prime_inf->evt >= next_inf->evt,2,2,4
!target->plugged,2,2,4
ft == ft_demand_read || ft == ft_demand_write,2,2,4
dma_addr != ent->dma,2,2,4
!(aiocbp->aio_nbytes & (dev->info.sector_size-1)),2,2,4
spin_is_locked(lock),2,2,4
"!test_bit(_DOMF_dying, &d->domain_flags)",2,2,4
size != ent->size,2,2,4
(get_stack_bottom() & 15) != 0,2,2,4
(status == not_parsed) && (c == &boot_cpu_data),2,2,4
!inuse[ref],2,2,4
!sedf_runnable(d),2,2,4
(nx & PGC_count_mask) < 1,2,2,4
"HYPERVISOR_update_va_mapping(__address, __entry, (unsigned long)(__vma)->vm_mm->cpu_vm_mask.bits| UVMF_INVLPG|UVMF_MULTI)",2,2,4
success && (error != 0),2,2,4
 list_empty(&p2md->pod.single) ,2,2,4
intr_source != hvm_intack_none,2,2,4
VALID_M2P(l2pfn),2,2,4
c.bits.proto_error,2,2,4
"mem_sharing_unshare_page(d, gfn, MEM_SHARING_DESTROY_GFN)",2,2,4
"vrtc_domain(s), RTC_IRQ",3,1,4
desc->status & IRQ_DISABLED,3,1,4
inf->time_slept + CPU_SVT(cpu) > inf->avt + io_warp,2,2,4
online == (d->max_vcpus - med->blocked),2,2,4
spin_is_locked(&smmu_domain->lock),2,2,4
ridblock_owner[i] == d,2,2,4
VALID_MFN(readonly_gmfn),2,2,4
"HYPERVISOR_update_va_mapping( (unsigned long)pgd_base, pfn_pte(virt_to_phys(pgd_base)>>PAGE_SHIFT, flags), UVMF_TLB_FLUSH)",2,2,4
 !valid_mfn(e->smfn) ,2,2,4
(unsigned) memory_info.BaseAddress % g_regionsize == 0,2,2,4
DOMAIN_OKAY(page->flags),2,2,4
guest_l3e_get_flags(gl3e[3]) & _PAGE_PRESENT,2,2,4
correction >= 0,2,2,4
pfn <= ctx->x86_pv.max_pfn,4,0,4
!cpus_empty(rqd->active),2,2,4
 result == -1 || result > 16,2,2,4
!dp,2,2,4
shadow_l3e_get_flags(shadow_l3e[3]) & _PAGE_PRESENT,2,2,4
dom_cow == NULL,2,2,4
iswritable(root),2,2,4
raw,2,2,4
mfn_to_page(gmfn)->count_info & PGC_page_table,2,2,4
l2e != NULL,2,2,4
h.tail->u.sh.type == SH_type_l2_32_shadow,2,2,4
(pg->u.inuse.type_info & PGT_count_mask) == 0,2,2,4
mc_data.notifyconsumer_idx > mc_data.notifyproducer_idx,2,2,4
prev_inf != NULL,2,2,4
spin_is_locked(vpic_lock(vpic)),2,2,4
vector <= 0,2,2,4
v->arch.hvm_vcpu.hw_cr3 == virt_to_maddr(v->arch.hvm_vcpu.hvm_lowmem_l3tab),2,2,4
"xc_gnttab_munmap(mount->gnth, priv_req->page, priv_req->count) == 0",2,2,4
!inuse(p),2,2,4
id >= NET_RX_RING_SIZE,2,2,4
(skb->data - skb->head) == (18 + ETH_HLEN),2,2,4
index >=0,2,2,4
shflags & (1u << bit),2,2,4
r->repl->targ_size < r->repl->smp1_size,2,2,4
r->repl->targ_size < r->repl->smp2_size,2,2,4
!libxl__ev_child_inuse(&aodev->child),2,2,4
d->arch.shadow2.dirty_bitmap != NULL,2,2,4
av->n_mmaps <= av->max_n_mmaps,2,2,4
"test_bit(v->vcpu_id, &info->vcpus)",2,2,4
x->t <= 15,2,2,4
v->arch.guest_table.pfn == d->arch.phys_table.pfn,2,2,4
domain_is_locked(d),2,2,4
!(fds[slot].revents & POLLNVAL),2,2,4
i != 0,2,2,4
hicc,2,2,4
(v == current) || spin_is_locked(&d->arch.hvm_domain.ioreq.lock),2,2,4
shadow2_mode_log_dirty(d),2,2,4
size > 0 && size <= s->cluster_size,2,2,4
bk->refcount > 0,2,2,4
((p->prev_size + sz) & (av->pagesize-1)) == 0,2,2,4
page != NULL,3,1,4
d->arch.paging.log_dirty.bitmap != NULL,2,2,4
d->vcpu[vcpu_id] != NULL,2,2,4
"(ent = kmalloc(sizeof(*ent), GFP_KERNEL)) == NULL",2,2,4
"&sched_lock, MA_OWNED | MA_NOTRECURSED",2,2,4
(x & PGT_validated) || page_get_owner(page)->is_dying,2,2,4
(long)(sz) - (long)(s) >= 0,2,2,4
 dirty_vram != NULL ,2,2,4
device.backend_kind == LIBXL__DEVICE_KIND_QDISK,2,2,4
len > XENSTORE_RING_SIZE,2,2,4
master == NULL,2,2,4
!allocated_in_map(virt_to_pfn(head)),2,2,4
atomic_read(&v->pausecnt) != 0,2,2,4
paging_mode_translate(ld),2,2,4
"HYPERVISOR_vcpu_op(VCPUOP_initialise, vcpu, &ctxt)",2,2,4
prev_inf->time_slept >= LAST_VTB(cpu),2,2,4
s <= e,4,0,4
(src_gpfn % PTRS_PER_PTE) != 0,2,2,4
"HYPERVISOR_dom_mem_op( MEMOP_increase_reservation, &mfn, 1, order | (32<<8)) != 1",2,2,4
data_begin % align,2,2,4
align > SMP_CACHE_BYTES,2,2,4
(dst - rma) + (ulong)firmware_image_size < eomem,2,2,4
(y & PGC_count_mask) != 0,3,1,4
ecap_queued_inval(iommu->ecap) && iommu_qinval,2,2,4
global_eph_count >= 0,2,2,4
!paging_mode_translate(d),2,2,4
msg->subtype == buf.subtype,2,2,4
chunksize(next) >= MINSIZE,2,2,4
(type == hvm_intack_pic) || (type == hvm_intack_lapic),2,2,4
(target == 2 && hvm_hap_has_1gb(d)) || (target == 1 && hvm_hap_has_2mb(d)) || (target == 0),2,2,4
list_empty(&pgp->client_eph_pages),2,2,4
shadow_mode_write_l1(d) || shadow_mode_write_all(d) || shadow_mode_wr_pt_pte(d),2,2,4
score,2,2,4
shr_locked_by_me(),2,2,4
"per_cpu(resched_irq, cpu) < 0",2,2,4
PagePrivate(page),2,2,4
 hcb->ht == THASH_VHPT ,2,2,4
rreg != 6 && rreg != 7,2,2,4
!mutex_r,2,2,4
"HYPERVISOR_memory_op(XENMEM_machine_memory_map, &memmap)",2,2,4
sizeof(INTERNAL_SIZE_T) <= sizeof(char*),2,2,4
!probe_intel_cpuid_faulting(),2,2,4
valid_mfn(gmfn) && (sh_mfn_is_a_page_table(gmfn) || ((mfn_to_page(gmfn)->u.inuse.type_info & PGT_count_mask) == 0)),2,2,4
(physaddr & GPFN_IO_MASK) != GPFN_MEM,2,2,4
psr & IA64_PSR_UP,2,2,4
r->repl->targ_size < r->repl->up_size,2,2,4
(dst - rma) + image_len < eomem,2,2,4
lock->owner != get_current(),2,2,4
hsa,2,2,4
"test_bit(pirq, d->pirq_mask)",2,2,4
(porta & WE) == 0,2,2,4
current->domain == (_d),2,2,4
addr == 0x8000,2,2,4
gdbmode,2,2,4
atomic_read(&d->pause_count),4,0,4
mapping->begin == first_cluster,2,2,4
"!test_bit(pirq, d->pirq_mask)",2,2,4
fastbin_index(chunksize(p)) == i,2,2,4
op->dispatch_handler != NULL,2,2,4
mfn_to_page(mfn)->count_info != (PGC_allocated | 1),2,2,4
t->is_running,2,2,4
"pgp_lookup_in_obj(pgp->us.obj,pgp->index) == NULL",2,2,4
d->arch.iobmp_mask == NULL,2,2,4
 d->arch.relmem != RELMEM_not_started ,2,2,4
!cpus_empty(cpumask),2,2,4
!l2_table_offset(va),3,1,4
(itv & (1 << 16)) == 0,2,2,4
(long)(sz) - (long)(s + MINSIZE) < 0,2,2,4
x->t || ((x == head) && (x->next == NULL)),2,2,4
conn->state != BLOCKED,2,2,4
ea == (u32)ea,2,2,4
blkif->pending_list[idx].secs_pending == 0,2,2,4
"address_needs_mapping(dev, dma)",2,2,4
vm_buffer,2,2,4
!after_bootmem && start_pfn != table_end,2,2,4
action->ack_type == ACKTYPE_LAPIC_EOI,2,2,4
got == for_spawn->intermediate,2,2,4
mapping->begin < mapping->end,2,2,4
 divisor >= 1 && divisor <= (uint16_t)UINT_MAX ,2,2,4
crit_checking_disabled[cpu] >= 0,2,2,4
 is_idle_vcpu(svc->vcpu) ,2,2,4
!(psr & IA64_PSR_CPL),2,2,4
"(x & PGT_validated) || test_bit(DF_DYING, &page_get_owner(page)->d_flags)",2,2,4
!success && ((exchange.nr_exchanged != 0) || (error == 0)),2,2,4
(WEIGHT_PERIOD < ULONG_MAX) && (DOM_INFO(p)->slice_orig < ULONG_MAX),2,2,4
(MALLOC_ALIGNMENT & (MALLOC_ALIGNMENT-1)) == 0,2,2,4
next->prev_size == sz,2,2,4
o_probe == probe,2,2,4
"kernel_thread(blkio_schedule, 0, CLONE_FS | CLONE_FILES) < 0",2,2,4
dc->used >= 0,3,1,4
d->cpuset != 0,2,2,4
d == dom0,2,2,4
pve != 0,2,2,4
next_free_space != 0,2,2,4
(hvm_info->low_mem_pgend << PAGE_SHIFT) < (2u << 20),2,2,4
!aiocbp->aio_cb,2,2,4
"sh_type_is_pinnable(v, sp->u.sh.type)",2,2,4
spin_is_locked(&d->arch.hvm_domain.irq_lock),3,1,4
qi_ctrl->qinval_maddr,4,0,4
d->arch.shadow.dirty_bitmap != NULL,2,2,4
(l1_pgentry_val(p2m[gpfn]) >> PAGE_SHIFT) == mfn,2,2,4
"curthread->td_pinned > 0, (""curthread not pinned"")",2,2,4
"SHARED_M2P(mfn_to_gmfn(d, page_to_mfn(page)))",2,2,4
new_page_mfn == INVALID_MFN,2,2,4
valid_mfn(shadow_l2e_get_mfn(*sl2e)),2,2,4
"irq_info[irq] != mk_irq_info(IRQT_IPI, ipi, 0)",2,2,4
l2_pgentry_val(hl2e) & _PAGE_PRESENT,2,1,3
n2vmcb != NULL,3,0,3
b2 < bytes,2,1,3
((_p)->u.inuse.type_info & PGT_type_mask) == (_t),2,1,3
domain_suspend_pvcontrol_acked(state),2,1,3
is_shared(pool),3,0,3
GUEST_GICV3_RDIST_REGIONS != 1,2,1,3
"HYPERVISOR_dom_mem_op( MEMOP_decrease_reservation,mfn_list, debt, 0) != debt",2,1,3
this_cpu_ptr(per_cpudata) != percpu_rwlock,2,1,3
!vpmu->flags && !vpmu->context,2,1,3
is_epte_superpage(epte),2,1,3
page_get_owner(page) == d,2,1,3
sp > 0,2,1,3
i + n > nr_pages,2,1,3
 pod_target >= p2m->pod.count ,2,1,3
sizeof(struct xen_pmu_intel_ctxt) > XENPMU_CTXT_PAD_SZ,2,1,3
pfn_is_ram(mfn),2,1,3
x,2,1,3
per_cpudata == percpu_rwlock->percpu_owner,2,1,3
pfn_array == NULL,1,2,3
cpumask_empty(n->vcpu_dirty_cpumask),2,1,3
text_pages,2,1,3
errno == EINTR,2,1,3
mfn_to_page(_sl2mfn)->u.sh.type == SH_type_l2_pae_shadow || mfn_to_page(_sl2mfn)->u.sh.type == SH_type_l2h_pae_shadow,2,1,3
l4_table_offset(RDWR_MPT_VIRT_START) != l4_table_offset(HIRO_COMPAT_MPT_VIRT_START),2,1,3
 !(old_sl2e & _PAGE_PRESENT) ,2,1,3
state->vmemranges == NULL,3,0,3
!l1t,2,1,3
!cpumask_empty(cpu_mask),2,1,3
action->in_flight != 0,2,1,3
s & (PSH_shadowed | PSH_hl2),1,2,3
consumer_is_xen(lchn),2,1,3
!(page->u.inuse.type_info & PGT_pae_xen_l2),2,1,3
start >= eidx,1,2,3
_atomic_read(tmem_stats._c) >= 0,2,1,3
 bdf >= ivrs_bdf_entries ,2,1,3
rv == -ERESTART,2,1,3
payload->dep.len && payload->dep.p,2,1,3
st->vcpu == NULL,2,1,3
dev->aodev.callback == device_setup_iterate,2,1,3
!efi_l4_pgtable,2,1,3
is_xen_heap_page(page),2,1,3
delta <= elf->len,2,1,3
"!cpumask_test_cpu(cpu, &prv->initialized)",2,1,3
sl1e != NULL,2,1,3
lr >= gicv2_info.nr_lrs,2,1,3
sec,2,1,3
mode >= LIBXL_TIMER_MODE_DELAY_FOR_MISSED_TICKS && mode <= LIBXL_TIMER_MODE_ONE_MISSED_TICK_PENDING,2,1,3
sl2e & _PAGE_PRESENT,2,1,3
sizeof(shared_info_t) > PAGE_SIZE,2,1,3
rv == 0 && resp->status == 0,3,0,3
level == 3,2,1,3
i < count,3,0,3
left != arg1,2,1,3
 now >= svc->cur_deadline ,2,1,3
handler_num,2,1,3
v->vcpu_id == 0,2,1,3
vector < 0,2,1,3
FRAMETABLE_VIRT_START & ((1UL << L2_PAGETABLE_SHIFT) - 1),2,1,3
ecap_intr_remap(iommu->ecap) && iommu_intremap,2,1,3
t->scheduled_on != cpu,2,1,3
x == (x & 0x1fff),2,1,3
ret != GUEST_TABLE_POD_PAGE || i != target,2,1,3
sizeof(struct xen_pmu_regs) > XENPMU_REGS_PAD_SZ,2,1,3
!paging_locked_by_me(v->domain),2,1,3
!pl1e,2,1,3
svc == CSCHED2_VCPU(curr_on_cpu(svc->vcpu->processor)),2,1,3
 !ivrs_bdf_entries ,2,1,3
!this_cpu(stubs.addr),2,1,3
STUB_BUF_SIZE / 2 < MAX_INST_LEN + 1,2,1,3
src == hvm_intsrc_lapic,2,1,3
MC_URGENT != 0 || MC_NONURGENT != 1 || MC_NCLASSES != 2,2,1,3
!l3dst,2,1,3
VALID_M2P(gmfn),2,1,3
offset == strtab_sec->sec->sh_offset,2,1,3
&pgp->us.obj->obj_spinlock,2,1,3
va,2,1,3
!ao->complete,3,0,3
page_get_owner(p + i) != p2m->domain,2,1,3
p2m->pod.count != 0,2,1,3
 !cladatum ,2,1,3
"!port_is_valid(d, port)",2,1,3
!(x & PGT_pae_xen_l2),2,1,3
(min_el == 0) || (min_el == 1),3,0,3
atomic_read(&p2m->domain->pause_count),3,0,3
 uart->stop_bits >= 1 && uart->stop_bits <= 2 ,2,1,3
page_get_owner(page + i) != d,2,1,3
!ctx->osevent_in_hook,2,1,3
"sizeof(cast_time(NULL)->F) != sizeof(time->f) || offsetof(EFI_TIME, F) != offsetof(struct xenpf_efi_time, f)",2,1,3
sizeof(start_info_t) > PAGE_SIZE,2,1,3
xsave_cntxt_size >= XSTATE_AREA_MIN_SIZE,2,1,3
spin_is_locked(&d->arch.hvm_domain.ioreq_server.lock),2,1,3
is_hvm_vcpu(curr),2,1,3
(eax & XSTATE_YMM) && !(eax & XSTATE_SSE),2,1,3
handler->type != IOREQ_TYPE_PIO,3,0,3
(x & (PGC_count_mask | PGC_allocated)) != PGC_allocated,2,1,3
 vcpu_on_replq(svc) ,3,0,3
" !cpumask_test_cpu(nxt, per_cpu(cpu_core_mask, cpu)) ",2,1,3
di == NULL,1,2,3
!sh_page_has_multiple_shadows(mfn_to_page(gmfn)),2,1,3
mig,2,1,3
i == 0,2,1,3
c->x86_vendor != X86_VENDOR_AMD,2,1,3
!(desc->status & IRQ_GUEST),2,1,3
(eax & XSTATE_FP_SSE) != XSTATE_FP_SSE,2,1,3
" cpumask_test_cpu(nxt, per_cpu(cpu_core_mask, cpu)) ",2,1,3
 !p2m_is_valid(t) || mfn + i == mfn_x(mfn_return) ,2,1,3
sizeof(struct xen_pmu_amd_ctxt) > XENPMU_CTXT_PAD_SZ,2,1,3
GUEST_PAGING_LEVELS > 3 || level != 3,2,1,3
rw_is_write_locked(&h->lock),3,0,3
!common_domname,2,1,3
child == 0,2,1,3
!resuming,2,1,3
MSI_IRQ(desc - irq_desc),2,1,3
cpu_has_vmx_virtual_intr_delivery,2,1,3
sizeof (shadow_l1e_t) != sizeof (unsigned long),2,1,3
l1e_get_flags(l1e) & _PAGE_PRESENT,2,1,3
 !shadow_mode_enabled(ed->domain) ,2,1,3
PATCH_INSN_SIZE != (1 + sizeof(val)),2,1,3
!MSI_IRQ(irq),2,1,3
t->is_dead || t->is_running || (t->scheduled_on < 0),2,1,3
page_get_owner(page) == dom_cow,2,1,3
x->gpfn_and_flags || ((x == head) && (x->next == NULL)),2,1,3
info->nest != 0,2,1,3
!d,2,1,3
NR_VECTORS * sizeof(*v->arch.pv_vcpu.trap_ctxt) > PAGE_SIZE,2,1,3
percpu_rwlock->writer_activating,2,1,3
 !iommu_found() ,2,1,3
__HYPERVISOR_VIRT_START != HYPERVISOR_VIRT_START,2,1,3
cpupool0 == NULL,2,1,3
 prv->weight < sdom->weight ,2,1,3
 bios_image_base < 0x100000 ,2,1,3
sizeof(((struct xc_get_cpufreq_para *)0)->u) != sizeof(((struct xen_get_cpufreq_para *)0)->u),2,1,3
!(rc & MEMOP_CMD_MASK),2,1,3
vhd_type_dynamic(&s->vhd),3,0,3
!xsave_area_compressed(src),2,1,3
ret <= 0,2,1,3
s->bat.pbw_blk == blk,3,0,3
next_level == level - 1,2,1,3
!s->enabled,2,1,3
svc->sdom == NULL,2,1,3
nestedhvm_enabled(v->domain),3,0,3
!pl2e,2,1,3
list_empty(&pgp->global_eph_pages),2,1,3
p && p->u.sh.type == SH_type_l2_32_shadow,3,0,3
l1e_get_flags(*p2m_entry) & (_PAGE_PRESENT|_PAGE_PSE),2,1,3
!!rc_buf == !!rc,2,1,3
dt_host && (dt_host->sibling == NULL),2,1,3
sizeof(lzo_uint) != sizeof(size_t),2,1,3
!((r__)->entry_vector & TRAP_regs_partial),2,1,3
 bank->mc_domid == DOMID_COW ,2,1,3
t->is_dead || !list_empty(&t->list),2,1,3
gd == NULL,1,2,3
 gpde & _PAGE_PRESENT ,2,1,3
index < EPT_PAGETABLE_ENTRIES,2,1,3
pgp->pfp != NULL,3,0,3
 index >= EBITMAP_UNIT_NUMS ,3,0,3
!((unsigned long) d & (sizeof (shadow_l1e_t) - 1)),2,1,3
global_pgp_count,2,1,3
(p - info) > sizeof(xen_capabilities_info_t),1,2,3
offset < elf->len && (offset + strtab_sec->sec->sh_size <= elf->len),2,1,3
d->arch.out_of_sync == NULL,2,1,3
this_cpu_ptr(per_cpudata) != NULL,2,1,3
status == uuid_s_ok,2,1,3
(symtab_sec->sec->sh_offset + data) == symtab_sec->data,2,1,3
hashent->mfn == mfn,2,1,3
offset < elf->len && (offset + sec->sec->sh_size <= elf->len),2,1,3
cpu < nr_cpu_ids,2,1,3
ebx <= ecx,2,1,3
(p-info->caps)>sizeof(*info),2,1,3
tsc_elapsed32 != 0,2,1,3
pirq_dpci->flags & HVM_IRQ_DPCI_GUEST_MSI,2,1,3
__HYPERVISOR_VIRT_END != HYPERVISOR_VIRT_END,2,1,3
!entry || !entry->dev,2,1,3
pfn_is_ram(gmfn),2,1,3
pagetable_val(ed->arch.monitor_table) == 0,2,1,3
 sdom != CSCHED_DOM(vc->domain) ,2,1,3
x->pfn || ((x == head) && (x->next == NULL)),1,2,3
j,2,1,3
 pagetable_val(current->arch.guest_table) == (gmfn << PAGE_SHIFT) ,2,1,3
!is_pvh_vcpu(curr),2,1,3
(GUEST_GICV3_GICR0_SIZE / GUEST_GICV3_RDIST_STRIDE) < MAX_VIRT_CPUS,2,1,3
extra_word <= TRACE_EXTRA_MAX,2,1,3
"HYPERVISOR_dom_mem_op( MEMOP_decrease_reservation, mfn_list, rc, 0) != rc",2,1,3
ao->in_initiator,3,0,3
align & (align-1),1,2,3
d->arch.paging.hap.p2m_pages == 0,2,1,3
(pg[i].u.inuse.type_info & PGT_count_mask) != 0,2,1,3
!res,3,0,3
inited >= ARRAY_SIZE(type_str),2,1,3
gl2e & _PAGE_PRESENT,2,1,3
smfn && !(smfn & ~PGT_mfn_mask),2,1,3
p != n,2,1,3
GUEST_PAGING_LEVELS != SHADOW_PAGING_LEVELS,2,1,3
j > POD_SWEEP_STRIDE,2,1,3
 shadow_mode_translate(current->domain) ,2,1,3
payload->nfuncs,2,1,3
files[fd].type == FTYPE_EVTCHN,2,1,3
end <= start,2,1,3
!(type & ~(PGT_type_mask | PGT_pae_xen_l2)),2,1,3
paging_mode_translate(p2m->domain),2,1,3
handler->type != IOREQ_TYPE_COPY,3,0,3
ro_pages + rw_pages + text_pages == payload->pages,2,1,3
data != payload,2,1,3
sizeof(libxl_psr_cbm_type) != sizeof(xc_psr_cat_type),2,1,3
info->type == LIBXL_DOMAIN_TYPE_PV,2,1,3
THIRD_MASK != PAGE_MASK,2,1,3
ao->complete,2,1,3
handle_bufioreq,2,1,3
x >= 0,2,1,3
!pl3e,2,1,3
r_time > ctx_allow,1,2,3
(sizeof(*frame_table) & ~sizeof(*frame_table)) % sizeof(*machine_to_phys_mapping),2,1,3
(mfn_x(mfn) & ((1 << order)-1)) != 0,2,1,3
size + (((unsigned long)new_gp) & ~PAGE_MASK) <= PAGE_SIZE,2,1,3
d != NULL,2,1,3
i != handler_num,2,1,3
offset[i] != UINT_MAX,2,1,3
buf->used <= sizeof(buf->buf),2,1,3
"generic_page_range( &init_mm, vstart, PAGE_SIZE << order, dealloc_pte_fn, NULL)",2,1,3
t->is_dead || t->is_running || (t->scheduled_on != cpu),2,1,3
got == child,2,1,3
 !(r & SHADOW_SET_ERROR) ,2,1,3
n1vmcb != NULL,3,0,3
"d, girq->device, girq->intx",2,1,3
is_hardware_domain(d),2,1,3
mfn_to_page(_sl2mfn)->u.sh.type == SH_type_l2_32_shadow,2,1,3
nestedhvm_vcpu_in_guestmode(v),3,0,3
node >= 0,2,1,3
dev->backend_kind == LIBXL__DEVICE_KIND_VIF,2,1,3
sampling == sampled,2,1,3
v->arch.paging.mode,2,1,3
 !(frame_table[smfn].u.inuse.type_info & PGT_pinned) ,2,1,3
"!test_bit(DF_DYING, &d->d_flags)",1,2,3
sizeof(struct compat_pmu_regs) > XENPMU_REGS_PAD_SZ,2,1,3
!is_hvm_domain(d),2,1,3
r<0,2,1,3
!(intr_info & INTR_INFO_VALID_MASK),2,1,3
order == 0,2,1,3
l1e_get_pfn(*(l1_pgentry_t *)vaddr) == mfn_x(smfn),2,1,3
!(nf & _PAGE_PRESENT),3,0,3
vaddr,2,1,3
"((void)""application must negotiate with libxl about SIGCHLD"", !(sigchld_saved_action.sa_flags & SA_SIGINFO) && (sigchld_saved_action.sa_handler == SIG_DFL || sigchld_saved_action.sa_handler == SIG_IGN))",2,1,3
i == action->nr_guests,2,1,3
 bdf < ivrs_bdf_entries ,2,1,3
current == idle_vcpu[smp_processor_id()],2,1,3
PATCH_INSN_SIZE > sizeof(func->opaque),2,1,3
off < ioc->pdir_size,1,1,2
"pgp->us.obj->pool,POOL",1,1,2
!init_pit(),1,1,2
"((offsetof(struct sym_reg, nc_scntl3) ^ offsetof(struct sym_tcb, head.wval)) &3) == 0",1,1,2
(u->read_prod - u->read_cons) > sizeof(u->read_buffer),1,1,2
 peer_cpu >= csched_priv.ncpus ,1,1,2
(target == 2 && hvm_hap_has_1gb()) || (target == 1 && hvm_hap_has_2mb()) || (target == 0),1,1,2
(page_type_count(page) & ~REFCNT_PIN_BIT) != 0,1,1,2
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != (xen_start_info.nr_pages - max_pfn)",1,1,2
bits_not_wanted,1,1,2
 root_get_value(idle_pg_table[1]) == 0 ,1,1,2
!map,1,1,2
d->arch.shadow2.total_pages == 0,1,1,2
(pg->count_info & PGC_SH2_type_mask) > 0,1,1,2
ret <= order,2,0,2
lru_index >= 0,1,1,2
bat_locked(s),2,0,2
" !cpu_isset(nxt, cpus) ",1,1,2
IS_ERR(dom_cow),2,0,2
sp->u.sh.type != SH_type_l4_64_shadow,1,1,2
p2m_is_mmio(ot) || p2m_is_mmio(nt),1,1,2
mapping->dir_index == i || is_dot(direntry),1,1,2
vm_map_pmap(&l->l_proc->p_vmspace->vm_map) != pmap_kernel(),1,1,2
arg != NULL,1,1,2
(typeof(xatpr.size))-1 > (UINT_MAX >> MEMOP_EXTENT_SHIFT),1,1,2
!__on_blkdev_list(p),1,1,2
xen_phys_cpus == NULL,1,1,2
r->oi_ima == IO_PAT,1,1,2
"d, op.isa_irq",2,0,2
action->ack_type != ACKTYPE_NONE,1,1,2
!paging_mode_translate(current->domain),2,0,2
rw_is_write_locked(&rd->grant_table->lock),1,1,2
saved_irq_cnt == MAX_LATE_IRQ,1,1,2
"!strcmp(record->uuid, uuid)",1,1,2
cpu_has_vmx_ins_outs_instr_info != !!(vmx_basic_msr_high & (1U<<22)),1,1,2
buffer[index+0] == 0x0f && (buffer[index+1] & 0xFD) == 0x21,1,1,2
mfn_valid(gmfn) && (sh_mfn_is_a_page_table(gmfn) || ((mfn_to_page(gmfn)->u.inuse.type_info & PGT_count_mask) == 0)),1,1,2
cr3_mfn == 0,1,1,2
efi.sal_systab == EFI_INVALID_TABLE_ADDR,1,1,2
(diff == 0) || (!VM86_MODE(r) && RING_0(r)),1,1,2
watches_workq == NULL,1,1,2
mfn_to_shadow_page(_sl4mfn)->u.sh.type == SH_type_l4_64_shadow,1,1,2
(PAGE_SIZE << order) != COMPAT_ARG_XLAT_SIZE,1,1,2
flags == PAGE_HYPERVISOR,1,1,2
!xen_feature(XENFEAT_writable_page_tables) && !next->context.pinned,1,1,2
((l1va = d->arch.ptwr[PTWR_PT_ACTIVE].l1va) == 0) || (l1_linear_offset(l1va) != l1_linear_offset(addr)),1,1,2
(page->count_info & PGC_count_mask) < 1,1,1,2
shr_lock.locker == -1,1,1,2
(pmap->pm_cpus & cpumask) == 0,1,1,2
!pgp->obj->pool->persistent,1,1,2
NR_CPUS > bits,1,1,2
conn->transaction == NULL,2,0,2
t > p2m_populate_on_demand,1,1,2
d->arch.shadow2.dirty_bitmap == NULL,1,1,2
(unsigned long)v != 0xfffff000,1,1,2
mm == &init_mm,1,1,2
vcpuid >= d->max_vcpus,2,0,2
buffer,1,1,2
 tmh_mempool != NULL ,1,1,2
se == start_se,1,1,2
l->locker == -1,1,1,2
(mfn_to_page(_sl3mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l3_pae_shadow,1,1,2
((s->cluster-(unsigned char*)s->directory.pointer)%s->cluster_size)==0,1,1,2
"i < mp_ncpus, (""mp_ncpus and actual cpus are out of whack"")",1,1,2
v & (1 << (vector & 0x1f)),1,1,2
(diff == 0) || (!VM86_MODE(r) && (r->cs == __HYPERVISOR_CS)),1,1,2
!(s & ((1 << L2_PAGETABLE_SHIFT) - 1)),2,0,2
"HYPERVISOR_multicall(rx_mcl, mcl - rx_mcl) != 0",1,1,2
"vector != domain_irq_to_vector(d, pirq)",1,1,2
pmd_page(*pmd) != pmd_page(*pmd_k),1,1,2
timers[smp_processor_id()].running == timer,1,1,2
timers[cpu].running == timer,1,1,2
page_count(buddy) != 0,1,1,2
guest_l2e_get_flags(*gw->l2e) & _PAGE_PSE,1,1,2
"cpu_has(c, X86_FEATURE_CPUID_FAULTING) != boot_cpu_has(X86_FEATURE_CPUID_FAULTING)",1,1,2
index < array->next,1,1,2
rc || i == count,2,0,2
ci->ci_pmap == pmap,1,1,2
regs->msr & MSR_HV,1,1,2
 virtual_irq < 16 ,1,1,2
(gfp_flags & __GFP_HIGHMEM) && in_interrupt(),1,1,2
event->watches[0] == conn->waiting_for_ack,1,1,2
 (mfn_to_page(smfn)->u.inuse.type_info & PGT_pinned) ,1,1,2
s_md == NULL || e_md == NULL,1,1,2
((l1va = d->arch.ptwr[PTWR_PT_INACTIVE].l1va) == 0) || (l1_linear_offset(l1va) != l1_linear_offset(addr)),1,1,2
"next_cpu(i, cpu_present_map) < NR_CPUS",1,1,2
(res->end - res->start + 1) < get_buffer->bufsize * get_buffer->nbuf,1,1,2
(diff != 0) || vm86_mode(r) || ((r->cs&3) >= GUEST_KERNEL_RPL) || (r->cs == 0) || hvm_guest(current),1,1,2
 !is_pv32_domain(current->domain) || !(cpsr&PSR_THUMB) ,1,1,2
flags & GPFN_IO_MASK,1,1,2
spin_is_locked(&hd->mapping_lock),1,1,2
"free <= RING_SIZE(&blk_ring), (""free %lu > RING_SIZE"", free)",1,1,2
"object, MA_OWNED",1,1,2
sp->u.sh.type != SH_type_l2h_pae_shadow,1,1,2
"!test_bit(ARCH_VMX_IO_WAIT, &d->arch.arch_vmx.flags)",1,1,2
(res == 0) || (res == SHADOW_SET_CHANGED),1,1,2
assign_pte == NULL,1,1,2
!pending_eoi[cpu][sp].ready,1,1,2
diff < STACK_SIZE,2,0,2
 uart->parity >= PARITY_NONE && uart->parity <= PARITY_ODD ,1,1,2
current_vcpu != -1,2,0,2
mfn_valid(*sl2mfn),2,0,2
ret != -EEXIST,1,1,2
fdom != d,2,0,2
c == child,1,1,2
value,1,1,2
gpfn == INVALID_M2P_ENTRY,1,1,2
sp->type != SH_type_l2_32_shadow,1,1,2
mfn != INVALID_MFN,1,1,2
!dom0 && !v,1,1,2
skb->ip_summed != CHECKSUM_HW,1,1,2
event->cause->watches_unacked != 0,1,1,2
 spin_is_locked(&hd->arch.mapping_lock) && pt_mfn ,2,0,2
hd->pgd_maddr != 0,1,1,2
(act->pin & GNTPIN_hstw_mask) == 0,1,1,2
(diff != 0) || vm86_mode(r) || ((r->cs&3) >= GUEST_KERNEL_RPL) || (r->cs == 0) || is_hvm_vcpu(current),1,1,2
((_p)->u.inuse.count_info & PGC_count_mask) != 0,1,1,2
pcb == &l->l_addr->u_pcb,1,1,2
np->features & FE_U3EN,1,1,2
&svc->rqd->runq != runq,1,1,2
"m < &vm_page_array[vm_page_array_size], (""pmap_remove_pages: bad tpte %#jx"", (uintmax_t)tpte)",1,1,2
desc->irq < gic.lines,1,1,2
 svc->vcpu != vc ,2,0,2
!page_get_owner(&frame_table[ed->arch.monitor_shadow_ref]),1,1,2
 !pagetable_get_phys(d->arch.phys_table) ,1,1,2
st_scale_f || st_scale_i,1,1,2
len > PAGE_SIZE * FSIF_NR_READ_GNTS,1,1,2
(diff != 0) || VM86_MODE(r) || !RING_0(r) || HVM_DOMAIN(current),1,1,2
"test_bit(old_vector, cfg->used_vectors)",1,1,2
start != end,1,1,2
"size <= PAGE_SIZE, (""'size' do not fit into PAGE_SIZE, as expected."")",1,1,2
!list_empty(&d->xenpage_list),1,1,2
nestedp2m_locked_by_me(_domain),1,1,2
"intpin->io_dest != DEST_EXTINT, (""intpin routed via ExtINT"")",1,1,2
 d->exec_domain[vcpu] == NULL ,1,1,2
free_pfns != 0,1,1,2
!is_char_array(d),2,0,2
!bitmap,1,1,2
info->gd == NULL,1,1,2
 !(gpg->shadow_flags & (1<<sp->type)) ,1,1,2
stream_type == XC_MIG_STREAM_NONE || stream_type == XC_MIG_STREAM_REMUS,1,1,2
get_gpfn_from_mfn(page_to_mfn(page)) != INVALID_M2P_ENTRY,1,1,2
 _cpumask_scratch && nr_rt_ops > 0 ,1,1,2
buf[0] == 'E' || buf[0] == 'N',1,1,2
 e->t > (PGC_SH_max_shadow >> PGC_SH_type_shift) ,1,1,2
size != sizeof(freg),1,1,2
 !cpus_empty(cpus) ,1,1,2
!(pte.pte & _PAGE_PRESENT),1,1,2
t == PGC_SH_l4_shadow,1,1,2
!direct_mmio || !((mfn_x(mfn) ^ d->arch.hvm_domain.vmx.apic_access_mfn) >> order),1,1,2
!pfn_valid(pfn),1,1,2
"SCHED_OP(alloc_task, idle_task[0]) < 0",1,1,2
(irqflags & ~SA_SAMPLE_RANDOM) != 0,1,1,2
"m != NULL, (""mbuf not found in xn_tx_chain"")",1,1,2
is_viridian_domain(current->domain),1,1,2
desc,1,1,2
count <= FSIF_NR_READ_GNTS,1,1,2
mfn_valid(gw->l2mfn),1,1,2
hashent->pfn == pfn,1,1,2
!spin_is_locked(&xenpfm_context_lock),1,1,2
!okay,1,1,2
has_vpic(d),2,0,2
IOREQ_TYPE_PIO != HVMOP_IO_RANGE_PORT,1,1,2
"!test_bit(ARCH_VMX_IO_WAIT, &v->arch.arch_vmx.flags)",1,1,2
event->recurse,1,1,2
xencons_priv_irq < 0,1,1,2
!v->affinity_locked,1,1,2
sizeof(shared_memshr_info_t) < XC_PAGE_SIZE,1,1,2
((vmx_basic_msr_high >> 18) & 15) != 6,1,1,2
mapping->begin<=cluster_num && mapping->end>cluster_num,1,1,2
((l1va = d->arch.ptwr[PTWR_PT_ACTIVE].l1va) != 0) && (l1_linear_offset(l1va) == l1_linear_offset(addr)),1,1,2
sizeof(h.oid) != sizeof(oid),1,1,2
"!test_bit(_DOMF_paused, &d->domain_flags) || !cpus_empty(d->domain_dirty_cpumask)",1,1,2
htab_raddr != 0,1,1,2
hvm_enabled,1,1,2
perms,1,1,2
va < DIRECTMAP_VIRT_END,2,0,2
!list_empty(&schedule_data[smp_processor_id()].runqueue),1,1,2
ret > vs->read_handler_expect,1,1,2
"end_that_request_first( req, (bret->status == BLKIF_RSP_OKAY), req->hard_nr_sectors)",1,1,2
*s == '[',2,0,2
!__task_on_runqueue(p),1,1,2
d->vcpu == NULL,1,1,2
 pagetable_val(v->arch.monitor_table) ,1,1,2
v->arch.shadow.action_log,1,1,2
index1<=index2,1,1,2
cpu_has_vmx_ins_outs_instr_info != !!(vmx_msr_high & (1U<<22)),1,1,2
"(size - offset == 0 && fat_eof(s, c)) || (size > offset && c >=2 && !fat_eof(s, c))",1,1,2
np->rx_skbs[new],1,1,2
i->oi_ima == 0,1,1,2
"___shadow_status(d, gpfn, stype) == 0",1,1,2
prev->ed_sched_priv != NULL,1,1,2
BUFFER_SIZE > strlen(new_file_name) + strlen(mount->export->export_path) + 1,1,1,2
map[slot].pt.avail != 0,2,0,2
v->arch.shadow.mode != NULL,1,1,2
sizeof (struct shadow_page_info) > sizeof (struct page_info),1,1,2
(unsigned long)__per_cpu_data_end & ~PAGE_MASK,1,1,2
i <= MAPCACHE_L2_ENTRIES,1,1,2
ci->ci_pmap != pmap_kernel(),1,1,2
req->u.fwrite.len > 0,1,1,2
error,1,1,2
((l1va = d->arch.ptwr[PTWR_PT_INACTIVE].l1va) != 0) && (l1_linear_offset(l1va) == l1_linear_offset(addr)),1,1,2
parent->mode & MODE_DIRECTORY,1,1,2
list_empty(&ce->gfns),1,1,2
++count == 1,1,1,2
!(atomic_read(&d->refcnt) & DOMAIN_DESTRUCTED),1,1,2
&objnew->obj_spinlock,1,1,2
"set_shared_p2m_entry(p2m, gfn, page_to_mfn(page)) != 0",1,1,2
l1e_get_pfn(dcache->l1tab[idx]) == mfn,1,1,2
checkpointed_stream == XC_MIG_STREAM_NONE || checkpointed_stream == XC_MIG_STREAM_REMUS,1,1,2
cpus_empty(prv->rqd[min_rqi].active),1,1,2
"(flags & (M_NOWAIT | M_WAITOK)) == M_NOWAIT || (flags & (M_NOWAIT | M_WAITOK)) == M_WAITOK, (""_pmap_allocpte: flags is neither M_NOWAIT nor M_WAITOK"")",1,1,2
cache->flags & DMCACHE_ENTRY_HELD,2,0,2
 depth <= last_depth + 1 ,1,1,2
l->locker == current->processor,1,1,2
 sercon_buffer ,1,1,2
irq < PAGE_SIZE * BITS_PER_BYTE,2,0,2
 (vector == -1 && pin == -1) ,1,1,2
!oss->fd,1,1,2
RDWR_MPT_VIRT_START & ((1UL << L3_PAGETABLE_SHIFT) - 1),2,0,2
(type) >= BUGFRAME_NR,2,0,2
!is_idle_vcpu(svc->vcpu),2,0,2
PAGE_SIZE - (tags & (PAGE_SIZE - 1)) < 8 * sizeof(uint32_t),1,1,2
"(x & PGT_validated) || test_bit(DF_DYING, &page->u.inuse.domain->flags)",1,1,2
!is_system,1,1,2
svc->rqd != NULL,1,1,2
mfn_to_shadow_page(_sl2mfn)->u.sh.type == SH_type_l2_pae_shadow || mfn_to_shadow_page(_sl2mfn)->u.sh.type == SH_type_l2h_pae_shadow,1,1,2
"HYPERVISOR_vcpu_op(VCPUOP_initialise, cpu, &ctxt)",1,1,2
p2m_locked_by_me(p2md),1,1,2
!cpus_empty(action->cpu_eoi_map),1,1,2
!page_count(kpte_page),1,1,2
flags & FOLL_WRITE,1,1,2
irq < gic.lines + 32,1,1,2
"offsetof(struct pcpu, pc_curthread) == 0",1,1,2
page->count_info != (PGC_allocated | 1),1,1,2
 x->backpointer == sp->backpointer && x->type == sp->type ,1,1,2
"lapic != NULL, (""local APIC is not mapped"")",1,1,2
"hypercall_xlat_continuation(&left, 0)",1,1,2
REGOFFS(sp_abt) + 1*sizeof(uint32_t) != REGOFFS(lr_abt),1,1,2
rc < 0 && -rc <= MAX_ERRNO,1,1,2
!md,1,1,2
current->domain != IDLE_DOMAIN_ID,1,1,2
mfn_valid(gw->l1mfn),1,1,2
!t->is_scheduled,1,1,2
shadow2_mode_external(v->domain),1,1,2
__vma && __vma->vm_start < vma->vm_end,1,1,2
"HYPERVISOR_update_va_mapping( (unsigned long)__va(pfn << PAGE_SHIFT), pfn_pte(pfn, PAGE_KERNEL_RO), 0)",1,1,2
op->response_handler != NULL,1,1,2
startsg->length <= DMA_CHUNK_SIZE,1,1,2
tss == NULL,1,1,2
order <= SHADOW2_MAX_ORDER,1,1,2
!cfg->vector,1,1,2
cpus_empty(next->vcpu_dirty_cpumask),1,1,2
(page->shadow_flags & (SHF_L2H_PAE|SHF_L2_PAE|SHF_L1_PAE)) == 0,1,1,2
!next->context.pinned,1,1,2
((void *)ch->next < (void *)&_end) || memguard_is_guarded(ch->next),1,1,2
p->state != TASK_DYING,1,1,2
hw->rpos < hw->samples,1,1,2
" sh2_hash(e->n, e->t) % SHADOW2_HASH_BUCKETS != bucket ",1,1,2
tmem_dedup_enabled(),2,0,2
 uart->clock_hz > 0 ,1,1,2
 !__vcpu_on_q(svc) ,1,1,2
"mfn_x(gfn_to_mfn(d, gfn)) == mfn",1,1,2
"s->vcpu->domain, SCI_IRQ",2,0,2
!epte->avail3,1,1,2
order <= SHADOW_MAX_ORDER,1,1,2
xstate_comp_offsets[i] + xstate_sizes[i] <= xsave_cntxt_size,1,1,2
"p->p_state == PRS_NORMAL, (""executing process is still new"")",1,1,2
ret > sizeof(buffer)-1,1,1,2
1 << PDESHIFT == sizeof(pd_entry_t),1,1,2
 root_pgentry_val(idle_pg_table[1]) == 0 ,1,1,2
!is_hardware_domain(d),2,0,2
(unsigned long)b & ((PAGE_SIZE << order) - 1),1,1,2
nval == (unsigned int)nval,2,0,2
aio_read(&priv_req->aiocb) >= 0,1,1,2
timer_pending(timer) || !timer->function,1,1,2
(mfn_to_page(_sl2mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l2_64_shadow,1,1,2
!nestedhvm_vcpu_in_guestmode(v),2,0,2
((unsigned long)src & ~PAGE_MASK) != 0,1,1,2
gc_is_real(gc),1,1,2
mapping->mode & MODE_NORMAL,1,1,2
"cpu_info[apic_id].cpu_present == 0, (""CPU %d added twice"", apic_id)",1,1,2
"HYPERVISOR_update_va_mapping( vstart + (i*PAGE_SIZE), pfn_pte_ma(mfn+i, PAGE_KERNEL), 0)",1,1,2
(page->count_info & (PGC_allocated|PGC_count_mask)) == 0,1,1,2
 ((page->u.inuse.type_info & PGT_va_mask) >> PGT_va_shift) < (PAGE_OFFSET >> L2_PAGETABLE_SHIFT),1,1,2
mc_data == NULL,1,1,2
v->vcpu_id >= NR_CPUS,1,1,2
p2m->pod.last_populated_index < POD_HISTORY_MAX,1,1,2
"HYPERVISOR_grant_table_op( GNTTABOP_map_grant_ref, map, op)",1,1,2
list_empty(&cpage->shared_info->gfns),1,1,2
!((unsigned long)start & ~PAGE_MASK),1,1,2
cpumask_empty(&prv->rqd[min_rqi].active),1,1,2
inst_len,1,1,2
 op_size == BYTE || op_size == WORD || op_size == LONG ,1,1,2
rma_base & (rma_size-1),1,1,2
!files,1,1,2
uci != &ucode_cpu_info[cpu],1,1,2
page_get_owner(page) == d && get_gpfn_from_mfn(mfn) == gpfn,1,1,2
intr & INTR_INFO_VALID_MASK,1,1,2
pte_none(pkmap_page_table[i]),1,1,2
(vaddr & ~PAGE_MASK) != 0,1,1,2
!sh_mfn_is_a_page_table(gmfn),1,1,2
op != NULL,1,1,2
"HYPERVISOR_grant_table_op( GNTTABOP_donate, grant_rx_op, gop - grant_rx_op)",1,1,2
"&sched_lock, MA_OWNED",1,1,2
md->type != EFI_CONVENTIONAL_MEMORY,1,1,2
efd->fd < CTX->fd_rindex_allocd,1,1,2
"set_shared_p2m_entry(d, gfn, page_to_mfn(page)) != 0",1,1,2
 (pfn_to_page(smfn)->u.inuse.type_info & PGT_pinned) ,1,1,2
cpu_has_svm_nrips,1,1,2
idx >= MAPCACHE_ENTRIES,1,1,2
page != pgd_list,1,1,2
!iommu || ((log != &iommu->event_log) && (log != &iommu->ppr_log)),2,0,2
!*++argv,2,0,2
pcpu.apic_id != BAD_APICID,1,1,2
sal_record == NULL,1,1,2
l1_size == s->l1_size,1,1,2
(result & mask) < (src & mask),1,1,2
"test_bit(irq, &d->pirq_mask)",1,1,2
"p2m_change_type(d, gfn, p2mt, p2m_ram_shared) != p2mt",1,1,2
!(mask & ~0xff),1,1,2
LAST_VTB(cpu) >= 0,1,1,2
sizeof(*d) > PAGE_SIZE,2,0,2
flags == (MAP_SHARED|MAP_ANON) || flags == (MAP_PRIVATE|MAP_ANON),1,1,2
type != SH_type_p2m_table,1,1,2
 m->monitor_table ,1,1,2
sizeof(vcpu_info_t) != (sizeof(unsigned long) * 4),1,1,2
(cpu != 0) && cpu_online(0),1,1,2
op != XENMEM_increase_reservation && op != XENMEM_decrease_reservation && op != XENMEM_populate_physmap,1,1,2
rx->status == RING_STATUS_OK,1,1,2
(act->pin & GNTPIN_hstr_mask) == 0,1,1,2
ret == 1,1,1,2
" ref != -ENOSPC, (""grant_reference failed"") ",1,1,2
entry_offset < 0,1,1,2
mfn_x(next) == mfn_x(smfn) + 1,1,1,2
(cr3 = read_cr3()) == __pa(idle_pg_table) || (efi_enabled && cr3 == efi_rs_page_table()),1,1,2
v->domain == current->domain,2,0,2
!list_empty(&d->arch.paging.hap.freelists),1,1,2
((u8 *)pdir_start)[7] == 0,1,1,2
(page->count_info & ~PGC_xen_heap) != (PGC_allocated | 1),1,1,2
pt->vcpu == v,1,1,2
skb->list != NULL,1,1,2
(page->shadow_flags & (SHF_L3_PAE|SHF_L2_PAE|SHF_L1_PAE)) == 0,1,1,2
d->is_shutdown,1,1,2
ctl_min & ~ctl_max,1,1,2
(res->end - res->start + 1) < pdomain->bufsize * pdomain->nbuf,1,1,2
mapping->begin == begin,1,1,2
spin_is_locked(&console_lock),2,0,2
 cmd->direction == SCHED_INFO_PUT ,1,1,2
"!test_bit(ARCH_VMX_CONTIG_MEM, &v->arch.arch_vmx.flags)",1,1,2
IS_ERR(dom_io),2,0,2
NR_ZONES > BITS_PER_LONG,1,1,2
mfn_to_shadow_page(_sl1mfn)->u.sh.type == SH_type_l1_shadow || mfn_to_shadow_page(_sl1mfn)->u.sh.type == SH_type_fl1_shadow,1,1,2
(_d)->arch.shadow2.locker == current->processor,1,1,2
rambank_size[0] != 0,1,1,2
d->arch.shadow_mode,1,1,2
"(offsetof(struct cpu_user_regs, r8_fiq)) & 0x7",1,1,2
!spin_is_locked(&(_d)->arch.shadow_lock),1,1,2
d->arch.shadow.total_pages == 0,1,1,2
event->for_user = how.u.for_event,1,1,2
sdom->domain != IDLE_DOMAIN_ID,1,1,2
"!strcmp(record->this_user, this_user)",1,1,2
 (lpae_t *)(unsigned long)(httbr - phys_offset) != xen_pgtable ,1,1,2
"boot_cpu_id == -1, (""CPU %d claims to be BSP, but CPU %d already is"", apic_id, boot_cpu_id)",1,1,2
xfeature_low != (eax & XCNTXT_MASK),1,1,2
(_d)->arch.shadow2_locker == current->processor,1,1,2
"(dest & ~(APIC_ID_MASK >> APIC_ID_SHIFT)) == 0, (""%s: invalid dest field"", __func__)",1,1,2
page_private(kpte_page) == 0,1,1,2
"ALIGN((unsigned long) ioc->pdir_base, 4*1024) == (unsigned long) ioc->pdir_base",1,1,2
mfn_valid(mfn_x(gw->l3mfn)),1,1,2
"pgp->obj,OBJ",1,1,2
!vvv->current_mapping || vvv->current_fd || (vvv->current_mapping->mode & MODE_DIRECTORY),1,1,2
"lapic != NULL, (""%s called too early"", __func__)",1,1,2
shadow_mode(d),1,1,2
!l1e_get_flags(*pl1e),1,1,2
read_cr0() & X86_CR0_TS,2,0,2
sigchld_installed,2,0,2
hvm_info->reserved_mem_pgstart <= (reserve >> PAGE_SHIFT),1,1,2
 sp->type > SH_type_max_shadow ,1,1,2
old_kidx == kidx,2,0,2
dir == IOREQ_READ,1,1,2
 (pg->count_info & PGC_SH_type_mask) >> PGC_SH_type_shift != e->t ,1,1,2
tpmif->pagerange == NULL,1,1,2
current->domain->id == IDLE_DOMAIN_ID,1,1,2
"per_cpu(schedule_data, d->processor).curr",1,1,2
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32on64_vcpu(v) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(_mfn(sp->backpointer))) == v->domain),1,1,2
mapping->begin<=cluster_num,1,1,2
(_d)->arch.paging.log_dirty.locker == -1,1,1,2
"cpu_isset(cpu, timer_valid_cpumask)",1,1,2
entry->page != NULL,1,1,2
!conn->waiting_reply,1,1,2
"intpin->io_edgetrigger, (""NMI not edge triggered"")",1,1,2
tx->status == RING_STATUS_OK,1,1,2
sector >= seg_start && sector + nr_secs <= seg_end,1,1,2
l1e_get_pfn(cache->l1tab[idx]) == mfn,1,1,2
unmap.status,1,1,2
first_linear_offset(addr) > P2M_FIRST_ENTRIES,1,1,2
 !pagetable_val(d->arch.phys_table) ,1,1,2
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32on64_domain(d) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(backpointer(sp))) == d),1,1,2
order && order != EPT_TABLE_ORDER,1,1,2
LIBXL_LIST_EMPTY(&ctx->efds),2,0,2
pgp == pgpdel,1,1,2
va < (PDSLOT_KERN << PDSHIFT),1,1,2
"bm && test_vhd_flag(bm->status, VHD_FLAG_BM_READ_PENDING)",2,0,2
(addr >> memnode_shift) >= NODEMAPSIZE,1,1,2
sizeof(struct page_info) != 24,1,1,2
master->num_s2crs,1,1,2
EXYNOS5_SWRESET >= PAGE_SIZE,1,1,2
pf_type == smep_fault,1,1,2
(hdr->size <= 0) || (hdr->size >= PAGE_SIZE),1,1,2
mapping->begin == begin_of_direntry(direntry) || is_dot(direntry),1,1,2
svc->credit != CSCHED2_IDLE_CREDIT,1,1,2
"svc->rqd != RQD(ops, svc->vcpu->processor)",1,1,2
"!__get_user(c, (char *)addr)",1,1,2
 !is_32bit_domain(current->domain) ,2,0,2
isdigit(buf[2]),1,1,2
guest_l2e_get_flags(gl2e) & _PAGE_PRESENT,1,1,2
passed != i,1,1,2
REGOFFS(r8_fiq) + 4*sizeof(uint32_t) != REGOFFS(r12_fiq),1,1,2
mfn_valid(mfn_x(*mfn)),1,1,2
pfn_to_pdx(ma >> PAGE_SHIFT) < (DIRECTMAP_SIZE >> PAGE_SHIFT),2,0,2
smfn_type == p2m_ram_shared,2,0,2
__on_net_schedule_list(netif),1,1,2
cpus_empty(cfg->cpu_mask),1,1,2
isdigit(buf[1]),1,1,2
"cpu_isset(new_cpu, timer_valid_cpumask)",1,1,2
mfn_to_shadow_page(_sl3mfn)->type == SH_type_l3_64_shadow,1,1,2
&objfound->obj_spinlock,1,1,2
(_pfn)->u.inuse.count_info == PGC_always_set,1,1,2
spin_is_locked(&schedule_data[v->processor].schedule_lock),1,1,2
phys_to_machine_mapping[pfn] != INVALID_P2M_ENTRY,1,1,2
(pg->count_info & PGC_SH2_type_mask) < PGC_SH2_max_shadow,1,1,2
!root,1,1,2
((vmx_msr_high >> 18) & 15) != 6,1,1,2
is_xen_heap_frame(page),1,1,2
mfn_valid(mfn_x(gw->l2mfn)),1,1,2
(sizeof(struct pfn_info) << 20) > (FRAMETABLE_VIRT_END - FRAMETABLE_VIRT_START),1,1,2
 res == 0 || res == SHADOW_SET_CHANGED ,1,1,2
cpu_has_tsc_ratio && !v->domain->arch.vtsc,1,1,2
schedule_data[d->processor].sched_priv == NULL,1,1,2
sp->count_info == 0,1,1,2
pfn != nat.xlat->mfn_list.p[start_extent],1,1,2
tb_init_done,1,1,2
avail[zone][node] >= request,1,1,2
"cpu_isset(old_cpu, timer_valid_cpumask)",1,1,2
 smfn ,1,1,2
lp->busy_itl == 0 && lp->busy_itlq == 0,1,1,2
!smp && (num_online_cpus() > 1),1,1,2
"((vm_offset_t)pmap->pm_pdpt & ((NPGPTD * sizeof(pdpt_entry_t)) - 1)) == 0, (""pmap_pinit: pdpt misaligned"")",1,1,2
"pmap_kextract((vm_offset_t)pmap->pm_pdpt) < (4ULL<<30), (""pmap_pinit: pdpt above 4g"")",1,1,2
(mfn_to_page(smfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l3_pae_shadow,1,1,2
d->arch.mm->pgd != NULL,1,1,2
page_get_owner(mfn_to_page(mfn)) != d,1,1,2
mask & (1U << *id),1,1,2
debugtrace_buf[debugtrace_bytes - 1] == 0,2,0,2
runstate->state = RUNSTATE_running,1,1,2
order >= 0,1,1,2
(ia64_get_itv() & (1 << 16)) == 0,1,1,2
 pagetable_val(m->monitor_table) ,1,1,2
v->arch.shadow.mode,1,1,2
NR_CPUS > 0xfffu,1,1,2
irq <= 15,2,0,2
new->vcpu->processor != cpu,1,1,2
mfn_to_page(next)->u.sh.type == pg->u.sh.type,1,1,2
"p2->p_tracevp == NULL, (""new process has a ktrace vnode"")",1,1,2
!(initial_images_end & ~PAGE_MASK),1,1,2
rchn[rid].flags == (ECF_INUSE | ECF_CONNECTED | lid),1,1,2
"!test_bit(bit, vm_bitmap)",1,1,2
mc_data.notifyproducer_idx > mc_data.fetch_idx,1,1,2
level==1 || !(ft & FETCH_TYPE_DEMAND),1,1,2
level < CONFIG_PAGING_LEVELS,1,1,2
mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2_pae_shadow || mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2h_pae_shadow,1,1,2
order == 0 || ret == GUEST_TABLE_NORMAL_PAGE,1,1,2
"mfn_x(sh_gfn_to_mfn(d, gfn)) == mfn",1,1,2
mfn_to_shadow_page(_sl2mfn)->u.sh.type == SH_type_l2_64_shadow || mfn_to_shadow_page(_sl2mfn)->u.sh.type == SH_type_l2h_64_shadow,1,1,2
vgc && vgc != (void *)fix_to_virt(idx),1,1,2
!symbols_addresses,1,1,2
virtual_irq > nr_lrs,1,1,2
ring_req->nr_segments == BLKIF_MAX_SEGMENTS_PER_REQUEST,1,1,2
n->on_ima == 0,1,1,2
vmx_pin_based_exec_control != _vmx_pin_based_exec_control,1,1,2
vvv->mapping.size >= vvv->mapping.item_size * vvv->mapping.next,1,1,2
!list_empty(&t->list),1,1,2
buf != NULL,1,1,2
!p2m_valid(first[first_table_offset(addr)]),1,1,2
CPU_INFO(v->processor) == NULL,1,1,2
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32on64_vcpu(v) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(_mfn(sp->v.sh.back))) == v->domain),1,1,2
REGOFFS(sp_fiq) + 1*sizeof(uint32_t) != REGOFFS(lr_fiq),1,1,2
pages > 0,1,1,2
(page->shadow_flags & (SHF_L4_64|SHF_L3_64|SHF_L2_64|SHF_L1_64)) == 0,1,1,2
pl->sl1ma == INVALID_PADDR,1,1,2
(len == 4) && (offset > 0) && (offset <= APIC_TDCR),1,1,2
vvv->directory.size >= vvv->directory.item_size * vvv->directory.next,1,1,2
ns_viomap != NULL,1,1,2
order >= 1,1,1,2
pfp != NULL,2,0,2
unlikely(p == NULL),1,1,2
t == PGC_SH_l3_shadow,1,1,2
current->domain->id != IDLE_DOMAIN_ID,1,1,2
(page->flags & PG_type_mask) == PGT_gdt_page,1,1,2
 alignment != 3 ,1,1,2
(unsigned)size > PAGE_SIZE,1,1,2
(_domain)->arch.nested_p2m_locker == -1,1,1,2
"HYPERVISOR_grant_table_op( GNTTABOP_map_grant_ref, map, nseg)",1,1,2
npo.trans_prod > NET_RX_RING_SIZE,1,1,2
avail_start == PAGE_SIZE,1,1,2
is_x86_user_segment(seg),1,1,2
d->dirty_vram->sl1ma[i] == sl1ma,1,1,2
blkif->status != DISCONNECTING,1,1,2
id && (mask & (1U << *id)),1,1,2
(i >= 0) && (i < 2*MAX_QUEUE),1,1,2
256 * sizeof(*v->arch.pv_vcpu.trap_ctxt) > PAGE_SIZE,1,1,2
 cmem_mempool != NULL ,1,1,2
"!test_bit(vm_low, vm_bitmap)",1,1,2
info->rq == NULL,1,1,2
!p2m_is_changeable(ot) || !p2m_is_changeable(nt),1,1,2
page->u.inuse.type_info & PGT_type_mask,1,1,2
va >= (PDSLOT_KERN << PDSHIFT),1,1,2
percpu_info[cpu].foreign == NULL,1,1,2
ent->prev->next == ent,1,1,2
reg > 31,1,1,2
p2 != NULL,1,1,2
is_idle_task(ed->domain),1,1,2
ci->ci_tlbstate == TLBSTATE_STALE,1,1,2
 !hd->arch.root_table ,2,0,2
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != debt",1,1,2
pagetable_is_null(v->arch.shadow_table[i]),1,1,2
res_ptr < res_end,1,1,2
!ret,1,1,2
offset >= 0,1,1,2
!(aiocbp->aio_nbytes & (dev->sector_size-1)),1,1,2
p2m_is_shared(__p2mt),1,1,2
mfn_valid(gw->l3mfn),1,1,2
xsave_cntxt_size >= XSAVE_AREA_MIN_SIZE,1,1,2
hap_locked_by_me(v->domain),1,1,2
!(MODULES_VADDR > __START_KERNEL),1,1,2
__task_on_runqueue(v),1,1,2
(y & PGT_count_mask) >= (page->count_info & PGC_count_mask),1,1,2
(act->pin & GNTPIN_devr_mask) == 0,1,1,2
cfgspace == NULL,1,1,2
0 != mask,1,1,2
sizeof(grant_entry_v1_t) == 8,1,1,2
!spin_is_locked(&pm_lock),1,1,2
regs->eax <= 0xFFFF,1,1,2
xsave_cntxt_size < XSAVE_AREA_MIN_SIZE,1,1,2
"index2 >= s->mapping.next || ((mapping = array_get(&(s->mapping),index2)) && mapping->end>cluster_num)",1,1,2
"cluster_id <= APIC_MAX_INTRACLUSTER_ID, (""%s: intra cluster id %u too big"", __func__, cluster_id)",1,1,2
val != val,1,1,2
d->arch.htab.shadow != NULL,1,1,2
got,2,0,2
mount->evth != -1,1,1,2
skb->len <= PAGE_SIZE,1,1,2
(cpu_info - (char *)wqv->esp) > sizeof(wqv->stack),1,1,2
"!strncmp(s->directory.pointer, ""QEMU"", 4)",1,1,2
dcache->l1tab,1,1,2
client == NULL,1,1,2
!dom0 && !ptr,1,1,2
(val <= (LONG_MAX >> 2)) && (val >= (LONG_MIN >> 2)),1,1,2
has_vioapic(d),2,0,2
i<0,1,1,2
!CTX->osevent_in_hook,2,0,2
ret != area,1,1,2
p->op_ima == 0,1,1,2
"&(pmap)->pm_mtx, (type)",1,1,2
NULL != tce_data,1,1,2
set_dbregs,1,1,2
d->arch.shadow2_total_pages == 0,1,1,2
 s2mfn,1,1,2
mapping->info.dir.first_dir_index + 0x10 * s->sectors_per_cluster * (mapping->end - mapping->begin) <= s->directory.next,1,1,2
"&kernel_map->system_mtx, MA_OWNED",1,1,2
intack.source != hvm_intsrc_none,2,0,2
xsave_cntxt_size != xstate_ctxt_size(feature_mask),1,1,2
unlikely(in_irq()),2,0,2
pages_needed,1,1,2
info->masked,1,1,2
valid_mfn(gmfn) && (sh2_mfn_is_a_page_table(gmfn) || ((mfn_to_page(gmfn)->u.inuse.type_info & PGT_count_mask) == 0)),1,1,2
"test_bit((base + !pos), &kexec_flags)",1,1,2
tlb_track->num_free != tlb_track->num_entries,1,1,2
mpic->gregs == NULL,1,1,2
FSIF_NR_READ_GNTS == FSIF_NR_WRITE_GNTS,1,1,2
count <= FSIF_NR_WRITE_GNTS,1,1,2
handler->num_entries >= MAX_IO_HANDLER,1,1,2
va >= PERDOMAIN_VIRT_START && va < PERDOMAIN_VIRT_SLOT(PERDOMAIN_SLOTS),2,0,2
((irq_guest_action_t*)desc->action)->ack_type == ACKTYPE_UNMASK,1,1,2
opt_allow_hugepage && !(mfn & (L1_PAGETABLE_ENTRIES-1)),1,1,2
zone_type > ZONE_NORMAL,1,1,2
IPI_STOP < APIC_SPURIOUS_INT,1,1,2
key_table[key].u.irq_handler == NULL,1,1,2
disc < N_TTY || disc >= NR_LDISCS,1,1,2
next == FIRST_HIPRIORITY_VECTOR,1,1,2
len == 2,1,1,2
 c2r(cpu) != c2r(svc->vcpu->processor) ,1,1,2
 _cpumask_scratch == NULL || nr_rt_ops > 0 ,1,1,2
"sh_type_has_up_pointer(v, SH_type_l2_shadow)",1,1,2
0 == (size & ~iovp_mask),1,1,2
node < num_online_nodes(),1,1,2
cpumask_empty(&prv->active_queues),1,1,2
schedule_data[v->processor].sched_priv == NULL,1,1,2
id && *id >= nr,1,1,2
"spin_is_locked(&irq_desc[domain_irq_to_vector(d, mirq)].lock)",1,1,2
isu_num >= MPIC_MAX_ISU,1,1,2
!IS_PRIV(current->domain),1,1,2
pfp_len == tze_len,1,1,2
!cpumask_empty(&rqd->active),2,0,2
" !cpu_isset(cpu, prv->initialized)",1,1,2
!after_bootmem && start_pfn != table_start + (tables_space >> PAGE_SHIFT),1,1,2
conn->out->hdr.msg.type == XS_WATCH_EVENT,1,1,2
d->arch.p2m->alloc_page,1,1,2
(flags & ASSIGN_pgc_allocated) == 0,1,1,2
vcpu_area != current->vcpu_id,1,1,2
t <= 31,1,1,2
ci->ci_want_pmapload == 0,1,1,2
!(aiocbp->aio_offset & (dev->sector_size-1)),1,1,2
!pending_lapic_eoi[cpu][sp].ready_to_end,1,1,2
pval != pval,1,1,2
start != xen_phys_start,1,1,2
pagetable_get_paddr(ed->arch.monitor_table) == 0,1,1,2
(page->shadow2_flags & (SH2F_L3_PAE|SH2F_L2_PAE|SH2F_L1_PAE)) == 0,1,1,2
hypercall_table != NULL,1,1,2
ci->ci_tlbstate != TLBSTATE_VALID,1,1,2
len == 4 && offset > 0 && offset <= APIC_TDCR,1,1,2
"nr_mds <= (PAGE_SIZE * memmap_info_num_pages - offsetof(*memmap_info, memdesc))/sizeof(*md)",1,1,2
timer->base != base,1,1,2
 ((objnew==obj)||(objfound==obj)) && (objnew!=objfound),1,1,2
first_mapping == mapping->first_mapping_index,1,1,2
(mfn_to_page(_sl3mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l3_64_shadow,1,1,2
"l1e_get_pfn(DCACHE_L1ENT(dcache, idx)) == hashent->mfn",1,1,2
(unsigned long)pg - FRAMETABLE_VIRT_START < FRAMETABLE_VIRT_END,1,1,2
"test_bit(type >> PGC_SH_type_shift, &page->shadow_flags)",1,1,2
" cpu_isset(nxt, cpu_core_map[cpu]) ",1,1,2
x <= data_size,2,0,2
"reg == decode_dest_reg(prefix, buffer[index + 2])",1,1,2
(page->u.inuse.type_info & PGT_count_mask) >= 2,1,1,2
"md_overlaps(md, __pa(ia64_boot_param)) || md_overlaps(md, ia64_boot_param->efi_memmap) || md_overlaps(md, ia64_boot_param->command_line)",1,1,2
sp->mbz == 0,1,1,2
NAME_MAX < XC_PAGE_SIZE >> 1,1,1,2
(_pfn)->count_info == PGC_always_set,1,1,2
 __vcpu_on_q(svc) ,1,1,2
zone_type > ZONE_HIGHMEM,1,1,2
 svc->rqd != rqd ,1,1,2
list_empty(&svc->runq_elem),2,0,2
offset <= 0,1,1,2
(COMPAT_ARG_XLAT_SIZE - sizeof(*nat.setup)) / sizeof(*nat.setup->frame_list.p) < NR_GRANT_FRAMES,1,1,2
cfg->domain != NULL,1,1,2
init_local_irq_data() < 0,2,0,2
"sh_remove_write_access(v, gmfn, 0, 0) == 0",1,1,2
(_d)->arch.p2m.locker == current->processor,1,1,2
*id > 5,1,1,2
is_idle_vcpu(current),1,1,2
i >= nfrags,1,1,2
smfn != 0,1,1,2
(vendor_id == 0x8086) && (device_id == 0x7010),1,1,2
"generic_page_range(&init_mm, (unsigned long)shared, PAGE_SIZE * NR_GRANT_FRAMES, map_pte_fn, &pframes)",1,1,2
tmh->domain->is_dying,1,1,2
APIC_IO_INTS + APIC_NUM_IOINTS <= APIC_LOCAL_INTS,1,1,2
entry_offset + num_entries > privcmd_range->num_entries,1,1,2
vmx_msr_high & (1u<<16),1,1,2
atomic_read(&netif->refcnt) != 0,1,1,2
victim != NULL,1,1,2
"trunc_page(addr) == addr, (""local APIC not aligned on a page boundary"")",1,1,2
direntry,1,1,2
(inf->latency < ULONG_MAX) && (inf->slice_orig < ULONG_MAX),1,1,2
p1 != NULL,1,1,2
v->arch.arch_vmx.vmcs == NULL,1,1,2
start_gpaddr & 0x8000000000ULL,1,1,2
" void *failed_assertion, void *file_name, u32 line_number, char *message",1,1,2
(_d)->arch.paging.hap.locker == -1,1,1,2
irq >= 32 && irq <= gic_number_lines(),1,1,2
irq >= nr_irqs && irq != AUTO_ASSIGN_IRQ,1,1,2
i >= NR_IRQS,1,1,2
CSCHED2_DOM(dom)->nr_vcpus > 0,1,1,2
"guest_kernel_mode(v, regs)",2,0,2
enabled && !is_hvm_domain(d),1,1,2
svc->vcpu->is_running,1,1,2
"!test_bit(vector, desc->chip_data->used_vectors)",1,1,2
client->eph_count >= 0,2,0,2
hash >= tlb_track->hash_size,1,1,2
(pg->count_info & PGC_SH_type_mask) != PGC_SH_l2_pae_shadow,1,1,2
termp == NULL,1,1,2
!mapping || (cluster_num>=mapping->begin && cluster_num<mapping->end),1,1,2
j < s->mapping.next,1,1,2
!!alloc == !!atom,1,1,2
in_atomic(),1,1,2
id == DOMID_SELF,1,1,2
(char*)xen_ia64_fpswa_call_stub_end - (char*)xen_ia64_fpswa_call_stub > 0xff - 16 + 1,1,1,2
"l1e_get_pfn(DCACHE_L1ENT(dcache, idx)) == mfn",1,1,2
!mpic,1,1,2
pfn != max_page,1,1,2
vc->is_urgent,1,1,2
"offsetof(struct shadow_page_info, mbz) != offsetof(struct page_info, count_info)",1,1,2
(c->cpu_ctxt.eflags & EF_IOPL) != 0,1,1,2
l != NULL,1,1,2
 d == page_get_owner(&frame_table[mfn]) ,1,1,2
_itir.ps > vcpu->arch.vhpt_pg_shift,1,1,2
 pagetable_val(d->arch.phys_table) ,1,1,2
(mfn_to_page(smfn)->count_info & PGC_SH_type_mask) == PGC_SH_l3_pae_shadow,1,1,2
stream->in_checkpoint_state,2,0,2
dead_task->mm,1,1,2
end != NULL,1,1,2
system_state != SYS_STATE_active,2,0,2
"spin_is_locked(&per_cpu(schedule_data,v->processor).schedule_lock)",1,1,2
 peer_cpu == cpu ,1,1,2
nr > 16,1,1,2
!mfn_valid(smfn) || mfn_to_page(smfn)->u.sh.head,2,0,2
vm_map_pmap(&l->l_proc->p_vmspace->vm_map) != ci->ci_pmap || ci->ci_tlbstate != TLBSTATE_VALID,1,1,2
mm->nr_ptes > (FIRST_USER_ADDRESS+PMD_SIZE-1)>>PMD_SHIFT,1,1,2
ofs != 0,1,1,2
"set_shared_p2m_entry(p2m_get_hostp2m(d), gfn->gfn, se->mfn) == 0",1,1,2
(c(user_regs.eflags) & EF_IOPL) != 0,1,1,2
REGOFFS(sp_svc) + 1*sizeof(uint32_t) != REGOFFS(lr_svc),1,1,2
sh_mfn_is_a_page_table(mfn),1,1,2
(page->u.inuse.type_info & PGT_type_mask) == PGT_writable_page,1,1,2
init_irq_data() < 0,2,0,2
x->type <= 15,1,1,2
n,1,1,2
 alignment == 0 ,1,1,2
page_get_owner(mfn_to_page(mfn)) != d && page_get_owner(mfn_to_page(mfn)) != NULL,1,1,2
"pgp->obj->pool,POOL",1,1,2
!(nr_mfns % (16 * LPAE_ENTRIES)),1,1,2
id == BUGFRAME_assert,1,1,2
zone <= MEMZONE_XEN,1,1,2
l1e_get_flags(*p2m_entry) & _PAGE_PRESENT,1,1,2
!__task_on_queue(v),1,1,2
ioapic_pin < MAX_IOAPIC_PIN_NUM,1,1,2
mapping->dir_index < vvv->directory.next,1,1,2
order == 18 && CONFIG_PAGING_LEVELS < 4,1,1,2
!list_empty(&d->arch.paging.hap.freelist),1,1,2
"free <= BLK_RING_SIZE, (""free %lu > RING_SIZE"", free)",1,1,2
!libxl__ev_child_inuse(&shs->child),1,1,2
MAPTRACK_MAX_ENTRIES < NR_GRANT_ENTRIES,1,1,2
t == PGC_SH2_l2_shadow || t == PGC_SH2_l2h_pae_shadow,1,1,2
FIX_ACPI_PAGES < 4,1,1,2
 !hd->root_table || !hd->paging_mode || !iommu->dev_table.buffer ,1,1,2
l1e_get_pfn(cache->l1tab[hashent->idx]) == hashent->pfn,1,1,2
"test_bit(_IRQ_GUEST, &desc->status)",2,0,2
ret != 1 && !(ret == 0 && !(xen_start_info->flags & SIF_PRIVILEGED) && extent_order > 0),1,1,2
next_prime_einf->evt >= next_einf->evt,1,1,2
(virq >= 0) && (virq < NR_VIRQS),1,1,2
vmx_vmexit_control != _vmx_vmexit_control,1,1,2
 !(gpg->shadow_flags & (1<<e->t)) ,1,1,2
key >= ARRAY_SIZE(key_table),2,0,2
shadow_mode_external(_dom),2,0,2
"p1->p_tracecred != NULL, (""ktrace vnode with no cred"")",1,1,2
repmsg->req_id != id,1,1,2
allocated_in_map(first_page + i),1,1,2
"shadow_remove_write_access(v, gmfn, 0, 0) == 0",1,1,2
curapdp == 0,1,1,2
virq < NR_VIRQS,2,0,2
p_data != NULL,1,1,2
vmcs_revision_id != vmx_msr_low,1,1,2
 res == 0 || res == SHADOW2_SET_CHANGED ,1,1,2
size > 0,1,1,2
fd_write == NULL,1,1,2
!pte_mem(old_pte),1,1,2
(_d)->arch.paging.log_dirty.locker == current->processor,1,1,2
(char*)s->cluster+s->cluster_size <= s->directory.pointer+s->directory.next*s->directory.item_size,1,1,2
!(regs->msr & MSR_EE),1,1,2
 d->domain_id ,1,1,2
!list_empty(&d->arch.shadow2_freelists[SHADOW2_MAX_ORDER]),1,1,2
pte_tlb_inserted_many(current_pte),1,1,2
!(size % getpagesize()),1,1,2
lock->recurse_cnt < SPINLOCK_MAX_RECURSE,2,0,2
"pmap->pm_stats.resident_count == 0, (""pmap_release: pmap resident count %ld != 0"", pmap->pm_stats.resident_count)",1,1,2
 (lpae_t *)(unsigned long)(ttbr - phys_offset) != xen_pgtable ,1,1,2
start_pfn > table_end,1,1,2
!conn->blocked,1,1,2
mount->shared_ring_size <= MAX_RING_SIZE,1,1,2
sp->type > 0,1,1,2
 hap_enabled(d) ,1,1,2
minor != gd->first_minor,1,1,2
mask < 0x100,1,1,2
!is_xenheap_usable_memory(md),1,1,2
d->arch.hvm_domain.ioreq.va != NULL,1,1,2
d->arch.p2m->pod.entry_count < 0,1,1,2
REGOFFS(r0) + 7*sizeof(uint32_t) != REGOFFS(r7),1,1,2
sd->schedule_lock == &rqd->lock,1,1,2
page_count(page) != 0,1,1,2
ret != GNTST_okay,1,1,2
mrp->list[mrp->idx] == INVALID_GFN,1,1,2
" sh_hash(e->n, e->t) % SHADOW_HASH_BUCKETS != bucket ",1,1,2
v->domain == d,1,1,2
opcode[0] <= 15,1,1,2
"td->td_pcb->pcb_ext == 0, (""already have a TSS!"")",1,1,2
"next_cpu(i, cpu_present_map) < nr_cpu_ids",1,1,2
id && *id > 5,1,1,2
nv->nv_n2vmcx != NULL,2,0,2
p->dir == IOREQ_WRITE,1,1,2
alloc_index == 0,1,1,2
xsave_area_compressed(xsave),2,0,2
blkif->pending_list[idx].count == 0,1,1,2
d->vcpu && d->vcpu[0],2,0,2
 cpu != svc->vcpu->processor ,1,1,2
 p2m_is_grant(ot) ,1,1,2
phys_to_machine_mapping_valid(pfn),1,1,2
 !hd->root_table || !hd->paging_mode || !int_remap_table ,1,1,2
spin_is_locked(&rgt->lock),1,1,2
"(x & PGT_validated) || test_bit(DF_DYING, &page->u.inuse.domain->d_flags)",1,1,2
rid < rp->max_event_channel,1,1,2
TASK_SIZE & ~PGDIR_MASK,1,1,2
left != regs->ecx,1,1,2
runstate->state == RUNSTATE_running,1,1,2
(p)->tot_count != 0,1,1,2
!port->driver->putc,1,1,2
!xen_feature(XENFEAT_auto_translated_physmap) && phys_to_machine_mapping_valid(pfn),1,1,2
"HYPERVISOR_grant_table_op( GNTTABOP_unmap_grant_ref, unmap, invcount)",1,1,2
t == SH_type_l2_shadow || t == SH_type_l2h_pae_shadow,1,1,2
PageHighMem(page),1,1,2
 !(mfn_to_page(_mfn(e->n))->shadow2_flags & (1<<e->t)) ,1,1,2
s->current_fd,1,1,2
 table == NULL || level < lowest ,1,1,2
e != ENOENT,2,0,2
"td->td_proc == curthread->td_proc, (""giving TSS to !curproc"")",1,1,2
"nr_mds <= (page_size * memmap_info_num_pages - offsetof(*memmap_info, memdesc))/sizeof(*md)",1,1,2
!dcs->dmss.dm.guest_domid,1,1,2
d->arch.shadow.hash_walking == 0,1,1,2
hap_enabled(p2m->domain),2,0,2
"!cpu_test_and_set(cpu, crash_saved_cpus)",1,1,2
this_cpu(host_vmcs) == NULL,1,1,2
pfn >= max_mapnr,1,1,2
 pagetable_get_phys(ed->arch.monitor_table) ,1,1,2
((unsigned long)dest & ~PAGE_MASK) != 0,1,1,2
!mfn_to_page(next)->u.sh.head,1,1,2
snext->rqd != rqd,1,1,2
offset <= size,2,0,2
((vmx_msr_high >> 18) & 15) == 6,1,1,2
!a,1,1,2
!p2m_initialized,1,1,2
sp->type < SH_type_max_shadow,1,1,2
" sh_hash(sp->u.sh.back, sp->u.sh.type) != bucket ",1,1,2
(v == current) || spin_is_locked(&d->arch.vmx_platform.ioreq.lock),1,1,2
"set_shared_p2m_entry(d, gfn, page_to_mfn(page)) == 0",1,1,2
(_d)->arch.paging.hap.locker == current->processor,1,1,2
 r & SHADOW2_SET_L3PAE_RECOPY ,1,1,2
i>=ACT_IGNORE && i<N_ACT,1,1,2
(_d)->arch.p2m.locker == -1,1,1,2
va == (va & PG_FRAME),1,1,2
ns_vmcb != NULL,2,0,2
gla_validity == EPT_GLA_VALIDITY_MATCH,1,1,2
ctl_min & ~ctl,1,1,2
"!cpu_isset(cpu, CSCHED_PRIV(ops)->initialized)",1,1,2
spin_is_locked(&heap_lock),2,0,2
o != NULL,1,1,2
page_count(page + i) != 1,1,1,2
offset/array->item_size < array->next,1,1,2
REGOFFS(sp_und) + 1*sizeof(uint32_t) != REGOFFS(lr_und),1,1,2
(diff != 0) || vm86_mode(r) || ((r->cs&3) >= GUEST_KERNEL_RPL(current->domain)) || (r->cs == 0) || is_hvm_vcpu(current),1,1,2
(COMPAT_ARG_XLAT_SIZE - sizeof(*nat.setup)) / sizeof(*nat.setup->frame_list.p) < max_nr_grant_frames,1,1,2
l1e_get_pfn(l1e) != INVALID_MFN || !p2m_is_ram(*t),1,1,2
shadow_mode_translate(d) || gpfn,1,1,2
tmp_base == __vsa_base,1,1,2
"free <= BLKIF_RING_SIZE, (""free %lu > BLKIF_RING_SIZE"", free)",1,1,2
timer->timer_list.next,1,1,2
(buffer == NULL) && (bytes > 0),1,1,2
isa_irq <= 15,2,0,2
"cluster <= APIC_MAX_CLUSTER, (""%s: cluster %u too big"", __func__, cluster)",1,1,2
fv->count == 0,2,0,2
delta.tv_usec >= 0 && delta.tv_sec >= 0,1,1,2
"irq < NUM_IO_INTS, (""Invalid IRQ %u"", irq)",1,1,2
"pin <= LVT_MAX, (""%s: pin %u out of range"", __func__, pin)",1,1,2
!list_empty(&schedule_data[this_cpu].runqueue),1,1,2
d->tot_pages >= rma_nrpages,1,1,2
!shadow_op || shadow_locked_by_me(d),1,1,2
atomic_read(&v->vm_event_pause_count),2,0,2
!cpus_empty(action->cpu_ack_map),1,1,2
"mfn_x(sh2_gfn_to_mfn(d, gfn)) == mfn",1,1,2
e == NULL,1,1,2
"generic_page_range( &init_mm, vstart, PAGE_SIZE << order, f, NULL) != 0",1,1,2
d->arch.foreign_mfns == NULL,1,1,2
shadow_type < SH_type_unused,1,1,2
dev->coherent_dma_mask,1,1,2
pcb->pcb_ldt_sel == pmap->pm_ldt_sel,1,1,2
dma_len <= DMA_CHUNK_SIZE,1,1,2
!(initial_images_base & ~PAGE_MASK),1,1,2
m->shadow_extras_count == 0,1,1,2
!(svc->flags & CSFLAG_scheduled),2,0,2
l1e_get_pfn(dcache->l1tab[hashent->idx]) == hashent->mfn,1,1,2
(p - info) > sizeof(info),1,1,2
"cold || td->td_ucred != NULL, (""kernel trap doesn't have ucred"")",1,1,2
mapping->dir_index >= 0,1,1,2
!pte.p2m.valid,1,1,2
(mfn_to_page(_sl3mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l3_64_shadow,1,1,2
(mfn_to_page(_sl1mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l1_shadow || (mfn_to_page(_sl1mfn)->count_info & PGC_SH_type_mask) == PGC_SH_fl1_shadow,1,1,2
xrdm,2,0,2
va2 > va1 + PAGE_SIZE,1,1,2
!direct_mmio || mfn_x(mfn) == d->arch.hvm_domain.vmx.apic_access_mfn,1,1,2
state & ~(GICH_LR_STATE_MASK<<GICH_LR_STATE_SHIFT),1,1,2
"svc==CSCHED2_VCPU(per_cpu(schedule_data, svc->vcpu->processor).curr)",1,1,2
!page_get_owner(&frame_table[v->arch.monitor_shadow_ref]),1,1,2
m->shadow_dirty_bitmap != NULL,1,1,2
l1e_get_pfn(MAPCACHE_L1ENT(idx)) == mfn,1,1,2
 peer_cpu != snext->vcpu->processor ,1,1,2
mapping->dir_index < s->directory.next,1,1,2
buf[3] == ' ' || buf[3] == '\n',1,1,2
!mfn_valid(pfn),1,1,2
new->rqd != rqd,1,1,2
!second[second_table_offset(addr)].p2m.valid,1,1,2
pool->client != NULL,2,0,2
(req_fd) < poller->fd_rindex_allocd,1,1,2
m->shadow_mode,1,1,2
va - DIRECTMAP_VIRT_START < DIRECTMAP_VIRT_END,1,1,2
"!test_bit(_VCPUF_running, &next->vcpu_flags)",1,1,2
prev_einf != NULL,1,1,2
v->arch.shadow2,1,1,2
va >= DIRECTMAP_VIRT_START && va < DIRECTMAP_VIRT_END,1,1,2
slot >= 0 && slot < DOMHEAP_ENTRIES,2,0,2
!pdata && svc && is_idle_vcpu(svc->vcpu),2,0,2
"xenbus_write(XBT_NIL, r_nodename, nodename)",1,1,2
v->arch.shadow2.action_log,1,1,2
vbd_is_active(vbd),1,1,2
((pages >> 3) % PAGE_SIZE) + bytes <= PAGE_SIZE,1,1,2
cpus_empty(n->vcpu_dirty_cpumask),1,1,2
prot == 0,1,1,2
(mfn_to_page(mmfn)->count_info & PGC_SH_type_mask) == PGC_SH_monitor_table,1,1,2
!(mfn & (L1_PAGETABLE_ENTRIES-1)),1,1,2
!paging_mode_external(v->domain),1,1,2
shadow_type < 16,1,1,2
ed->arch.arch_vmx.vmcs,1,1,2
shadow_type != PGC_SH2_p2m_table,1,1,2
(act->pin & GNTPIN_devw_mask) == 0,1,1,2
(ulong)addr % sizeof(ulong),1,1,2
(physaddr & _PAGE_PPN_MASK) != physaddr,1,1,2
IOREQ_TYPE_PCI_CONFIG != HVMOP_IO_RANGE_PCI,1,1,2
hpet_rate == 0,1,1,2
!port->driver->getc,1,1,2
sl->client != old_client,1,1,2
logps > PAGE_SHIFT,1,1,2
ac_timers[i].heap == NULL,1,1,2
pte_tlb_inserted(ret_pte),1,1,2
prev->state != TASK_UNINTERRUPTIBLE,1,1,2
parea != NULL,1,1,2
files[xce_handle].type == FTYPE_EVTCHN,1,1,2
r != 0,1,1,2
page_get_owner(page) != dom_p2m,1,1,2
child->nested_root,1,1,2
ARRAY_SIZE(deep_deps) != NR_DEEP_DEPS,2,0,2
((~align + 1) & align) == align,1,1,2
p->on_child == 0,1,1,2
"args->bus <= mptable_maxbusid, (""bus %d is too big"", args->bus)",1,1,2
!guest_op || shadow_locked_by_me(d),1,1,2
(cpu_info - (char *)wqv->esp) > PAGE_SIZE,1,1,2
x & PGT_validated,1,1,2
sd->schedule_lock == &prv->lock,1,1,2
"!test_bit(SCHEDULE_SOFTIRQ, &softirq_pending(smp_processor_id()))",1,1,2
"ioapics[intr->dst_apic_id] != NULL, (""No I/O APIC %d to route interrupt to"", intr->dst_apic_id)",1,1,2
(page->u.inuse.type_info & (PGT_count_mask|PGT_validated|PGT_partial)) == 1,2,0,2
t == PGC_SH2_fl1_32_shadow || t == PGC_SH2_fl1_pae_shadow || t == PGC_SH2_fl1_64_shadow || t == PGC_SH2_monitor_table || (page_get_owner(mfn_to_page(_mfn(pg->u.inuse.type_info))) == v->domain),1,1,2
!list_empty(&d->arch.paging.shadow.freelists[order]),1,1,2
IA64_MAX_RSVD_REGIONS + 1 < n,1,1,2
msg.type == XS_WATCH_EVENT,1,1,2
"!""missing code for supplying vnc password to qemu""",1,1,2
h.tail->list.next == PAGE_LIST_NULL,1,1,2
 (!is_32bit_domain(current->domain)||!(cpsr&PSR_THUMB)) && (cpsr&PSR_IT_MASK) ,1,1,2
adjust == 0,1,1,2
sp->u.sh.type != SH_type_l2_pae_shadow,1,1,2
IS_ERR(dom_xen),2,0,2
 (!is_pv32_domain(current->domain)||!(cpsr&PSR_THUMB)) && (cpsr&PSR_IT_MASK) ,1,1,2
"offsetof(xen_translate_gpfn_list_t, gpfn_list) > offsetof(xen_translate_gpfn_list_t, mfn_list)",1,1,2
pgp->obj->pool->client->eph_count >= 0,1,1,2
!lp->started_tags || !lp->started_no_tag,1,1,2
 x->u.sh.back == sp->u.sh.back && x->u.sh.type == sp->u.sh.type ,1,1,2
ring(regs) != 0,1,1,2
coalesced == filled,1,1,2
!((virt >> PAGE_SHIFT) % (16 * LPAE_ENTRIES)),1,1,2
t->cpu == cpu,1,1,2
 e->t > (PGC_SH2_max_shadow >> PGC_SH2_type_shift) ,1,1,2
reg == decode_dest_reg(buffer[2]),1,1,2
"per_cpu(ipi_to_evtchn, cpu)[ipi] != -1",1,1,2
byte_cnt > 0,1,1,2
"!cpumask_test_cpu(cpu, &rqd->idle)",1,1,2
rchn[rid].target_dom == lp->domain,1,1,2
hdr->size > 0,1,1,2
 pfn_to_pdx(epfn) <= (DIRECTMAP_SIZE >> PAGE_SHIFT) && (pfn_to_pdx(epfn) <= FRAMETABLE_SIZE / sizeof(struct page_info)) ,1,1,2
vmcs == this_cpu(host_vmcs),1,1,2
(mfn_to_page(_sl2mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l2_64_shadow,1,1,2
d->processor >= 0,1,1,2
list_empty(&smmu_domain->contexts),1,1,2
l3_backptr == PGT_va_unknown,1,1,2
!((virt_offset >> PAGE_SHIFT) % (16 * LPAE_ENTRIES)),1,1,2
"!lapics[apic_id].la_present, (""duplicate local APIC %u"", apic_id)",1,1,2
dart_table == NULL,1,1,2
last_gfn & ret,1,1,2
sizeof(struct page_info) != (32 + BITS_TO_LONGS(NR_CPUS)*sizeof(long)),1,1,2
pdev == NULL,1,1,2
port_user[port] != NULL,1,1,2
"!cpu_isset(cpu, rqd->active)",1,1,2
(p)->type_count != 0,1,1,2
"VM_ASSIST(d, VMASST_TYPE_writable_pagetables)",1,1,2
mapping->begin == begin_of_direntry(direntry) || mapping->first_mapping_index >= 0,1,1,2
shadow_type != SH_type_none,2,0,2
len <= XENSTORE_PAYLOAD_MAX,2,0,2
lp->busy_itl == 0,1,1,2
 pod_target >= p2md->pod.count ,1,1,2
(*res_ptr & m) == m,1,1,2
" c2r(ops, cpu) != c2r(ops, svc->vcpu->processor) ",1,1,2
retval,1,1,2
"evtchn_alloc_unbound(import->dom_id, fsfront_handler, import, &import->local_port)",1,1,2
pfn >= end_pfn,1,1,2
vcpu_runnable(v) || v->is_running,1,1,2
dir != DMA_FROM_DEVICE,1,1,2
sizeof(grant_entry_t) == 8,1,1,2
pg < entries,1,1,2
sp->type != SH_type_l2_pae_shadow,1,1,2
sizeof(header) < 512,1,1,2
next >= 0,1,1,2
 pod_target > p2md->pod.count ,1,1,2
area == NULL,1,1,2
"!cpumask_test_cpu(new_cpu, &CSCHED2_PRIV(ops)->initialized)",1,1,2
action >= 0 && action < N_ACT,1,1,2
!(desc->status & IRQ_DISABLED),2,0,2
shr_lock.locker == current->processor,1,1,2
"test_bit(irq, &d->pirq_mask[0])",1,1,2
mapping->info.dir.first_dir_index < s->directory.next,1,1,2
crit_count[cpu] == 0,1,1,2
!guest_op || shadow_locked_by_me(v->domain),1,1,2
skb->csum + 2 > offset,1,1,2
v->domain->arch.event_write_data != NULL,1,1,2
 gpfn == gfn ,1,1,2
writable_pagetable_in_sync(d),1,1,2
(vmx_basic_msr_high & 0x1fff) > PAGE_SIZE,1,1,2
i >= ctxt->nr_addrs,1,1,2
nr_iovecs == 1,1,1,2
atomic_read(&page->_count) == 0,1,1,2
mfn_to_shadow_page(_sl1mfn)->type == SH_type_l1_shadow || mfn_to_shadow_page(_sl1mfn)->type == SH_type_fl1_shadow,1,1,2
!paging_mode_external(current->domain),2,0,2
mfn_valid(mfn_x(gw->l1mfn)),1,1,2
" per_cpu(vector_irq, cpu)[cfg->old_vector] == irq ",1,1,2
!(read_cr4() & X86_CR4_VMXE),2,0,2
(_restore) || _v == current,1,1,2
access_w || access_r || access_x,1,1,2
 m3mfn_info ,1,1,2
 !(pfn_to_page(smfn)->u.inuse.type_info & PGT_pinned) ,1,1,2
np->rx_skbs[id],1,1,2
 sp->backpointer != e->n ,1,1,2
smp_processor_id() == 0,1,1,2
size <= DMA_CHUNK_SIZE,1,1,2
tlb_track->num_free > 0,1,1,2
valid && l != *limit,1,1,2
lr > nr_lrs,1,1,2
r != NULL,1,1,2
!((unsigned long)data & ~PAGE_MASK),1,1,2
(opte & PG_FRAME) != (KERNTEXTOFF - KERNBASE_LOCORE),1,1,2
info->ring_ref != -ENOSPC,1,1,2
!pending_lapic_eoi[cpu][sp-1].ready_to_end,1,1,2
mc_data.error_idx < mc_data.fetch_idx,1,1,2
(addr & ~PAGE_MASK) != 0,1,1,2
flush_count++ == 0,1,1,2
LIBXL_TAILQ_EMPTY(&ctx->etimes),2,0,2
fw_tables->fw_tables_size < sizeof(*fw_tables) + sizeof(fw_tables->efi_memmap[0]) * fw_tables->num_mds,1,1,2
(s & ~PAGE_MASK) == 0,1,1,2
implemented_rid_bits <= IA64_MIN_IMPL_RID_BITS,1,1,2
"la->la_present, (""missing APIC structure"")",1,1,2
prev != NULL,1,1,2
action->ack_type == ACKTYPE_MULTI,1,1,2
(page->u.inuse.type_info & PGT_type_mask) != PGT_writable_page || (page->u.inuse.type_info & PGT_count_mask) == 0 || v->domain->is_shutting_down,1,1,2
rb == NULL,1,1,2
l2e_get_flags(gl2e) & _PAGE_RW,1,1,2
xl < sizeof (xen),1,1,2
prev_inf->time_slept >= prev_inf->vtb,1,1,2
prod > cons,1,1,2
va >= MAPCACHE_VIRT_START && va < MAPCACHE_VIRT_END,2,0,2
fls(mask.bits[0]) > bits,1,1,2
(paddr_to_pdx(addr) >> memnode_shift) >= NODEMAPSIZE,1,1,2
last_section != NULL,1,1,2
(offset % array->item_size) == 0,1,1,2
spin_is_locked(&p2m->lock),2,0,2
(ACPI_PHYSICAL_ADDRESS + acpi_sz) <= 0xF0000,1,1,2
" !cpu_isset(nxt, per_cpu(cpu_core_map, cpu)) ",1,1,2
"set_shared_p2m_entry(p2m, gfn, page_to_mfn(page)) == 0",1,1,2
(x >> 32) != 0,1,1,2
 sp->count_info != 0 ,1,1,2
w,1,1,2
sections != NULL,1,1,2
path_len < PATH_MAX,1,1,2
!page && (flags & MEM_SHARING_MUST_SUCCEED),1,1,2
gfn != INVALID_GFN,1,1,2
!(initial_images_start & ~PAGE_MASK),1,1,2
spin_is_locked(&p->mm.shadow_lock),1,1,2
m != 0,1,1,2
!list_empty(&cfg->masters),1,1,2
(pg->count_info & PGC_SH2_type_mask) != PGC_SH2_l4_64_shadow,1,1,2
pv_32on64_vcpu(v),1,1,2
(sp == 0) || (pending_lapic_eoi[cpu][sp-1].vector < vector),1,1,2
v_target != NULL,1,1,2
 page_list_empty(&p2md->pod.single) ,1,1,2
 d->arch.ops->guest_paging_levels >= PAGING_L3 ,1,1,2
0 == (byte_cnt & ~iovp_mask),1,1,2
(mfn_to_page(_sl2mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l2_pae_shadow || (mfn_to_page(_sl2mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l2h_pae_shadow,1,1,2
vector == 0,1,1,2
"busses[args->bus].bus_type == PCI, (""probing for non-PCI bus"")",1,1,2
v->arch.shadow2.mode,1,1,2
lr >= nr_lrs,1,1,2
ci->ci_want_pmapload,1,1,2
"objnode,OBJNODE",1,1,2
"!strncmp(m->path, mapping->path, l2)",1,1,2
"!cpumask_test_cpu(new_cpu, &CSCHED_PRIV(ops)->initialized)",1,1,2
b_info->type == -1,1,1,2
void,2,0,2
sz,1,1,2
"!xen_feature(XENFEAT_writable_page_tables) && !test_bit(PG_pinned, &virt_to_page(next->pgd)->flags)",1,1,2
vcpu == NULL,1,1,2
FRAMETABLE_VIRT_START & ((1UL << L3_PAGETABLE_SHIFT) - 1),1,1,2
(p == NULL) || !in_irq(),1,1,2
page_get_owner(old_page) != d,1,1,2
rw_is_write_locked(&lgt->lock),1,1,2
sp < (NR_VECTORS-1),1,1,2
level < 3 || !p2m_valid(orig_pte),1,1,2
ret > PRINTF_BUFFER_SIZE-1,1,1,2
"intpin->io_dest != DEST_EXTINT, (""ExtINT pin trying to use ioapic enable_intr method"")",1,1,2
v && !is_hvm_vcpu(v),1,1,2
rc == -EINVAL,1,1,2
!(*ar & _SEGMENT_DPL),1,1,2
"vector >= APIC_IO_INTS && vector != IDT_SYSCALL && vector <= APIC_IO_INTS + NUM_IO_INTS, (""Vector %u does not map to an IRQ line"", vector)",1,1,2
entry_get_flags(gle) & _PAGE_PRESENT,1,1,2
!vaddr,1,1,2
!compat,1,1,2
"find_vma_prev(vma->vm_mm, vma->vm_start, &near) != vma",1,1,2
num_mds != tables->num_mds,1,1,2
(_d)->arch.shadow2.locker == -1,1,1,2
!guest_op || shadow2_lock_is_acquired(v->domain),1,1,2
 !guest_mode(regs) ,2,0,2
t == PGC_SH_l1_shadow || t == PGC_SH_fl1_shadow,1,1,2
check_tbuf_size(opt_tbuf_size),1,1,2
cpus_empty(prv->active_queues),1,1,2
CPU_INFO(d->processor) == NULL,1,1,2
 csched_priv.weight < sdom->weight ,1,1,2
parent->info.dir.first_dir_index < mapping->info.dir.first_dir_index,1,1,2
 v->arch.paging.shadow.guest_vtable ,1,1,2
d->arch.shadow.dirty_bitmap == NULL,1,1,2
mc_data.fetch_idx > mc_data.error_idx,1,1,2
r <= len,2,0,2
d->arch.shadow2.p2m_pages == 0,1,1,2
sizeof(struct vcpu_guest_context) > PAGE_SIZE,1,1,2
 (ivrs_bdf_entries == 0) || (iommu_enabled) ,1,1,2
!(cpu_mask & ~0xff),1,1,2
!interrupt[vector],1,1,2
offset > (int)skb->len,1,1,2
xenheap_size > (XENHEAP_MEGABYTES_MAX << 20),1,1,2
shadow_type != SH_type_p2m_table,1,1,2
 addr64 != 0 ,1,1,2
s->page || s->offset,1,1,2
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (pv_32on64_vcpu(v) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(_mfn(sp->backpointer))) == v->domain),1,1,2
__on_net_schedule_list(vif),1,1,2
r->op_ima == PROP_PAT,1,1,2
left + i < count,1,1,2
inf->time_slept + CPU_SVT(p->processor) > inf->avt + io_warp,1,1,2
boot_cpu_has(X86_FEATURE_TSC_RELIABLE),1,1,2
d->processor < nr_cpu_ids,1,1,2
 !(mfn_to_page(_mfn(e->n))->shadow_flags & (1<<e->t)) ,1,1,2
"(x & PGT_validated) || test_bit(DF_DYING, &page_get_owner(page)->flags)",1,1,2
v->arch.shadow2_action_log,1,1,2
__task_on_queue(v),1,1,2
!chn->consumer_is_xen,1,1,2
MAX_VIRT_CPUS > 32,1,1,2
mpic->cpuregs[i] == NULL,1,1,2
" !cpus_empty(cpus) && cpu_isset(cpu, cpus) ",1,1,2
"bat_entry(s, blk) == DD_BLK_UNUSED",2,0,2
REGOFFS(sp_irq) + 1*sizeof(uint32_t) != REGOFFS(lr_irq),1,1,2
tep != mctctl.mctc_processing_head[which],2,0,2
(status == not_parsed) && (smp_processor_id() == 0),1,1,2
mode != LIBXL_TIMER_MODE_DELAY_FOR_MISSED_TICKS && mode <= LIBXL_TIMER_MODE_ONE_MISSED_TICK_PENDING,1,1,2
sizeof(s->config) == 22,1,1,2
state != PFM_CTX_UNLOADED,1,1,2
"lapics[apic_id].la_present, (""%s: APIC %u doesn't exist"", __func__, apic_id)",1,1,2
op->cmd == XEN_DOMCTL_SCHEDOP_getinfo,1,1,2
sp->type != SH_type_l4_64_shadow,1,1,2
"!cpu_isset(cpu, rqd->idle)",1,1,2
bus != -1 || devfn == -1,2,0,2
spin_is_locked(&rd->grant_table->lock),1,1,2
fd >= 0,2,0,2
dir != DMA_TO_DEVICE,1,1,2
irq_to_evtchn[pirq_to_irq(pirq)] != -1,1,1,2
curinf->deadl_abs >= now,1,1,2
mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2_64_shadow,1,1,2
pgp->obj->pgp_count >= 0,1,1,2
"(vector & ~APIC_VECTOR_MASK) == 0, (""%s: invalid vector %d"", __func__, vector)",1,1,2
for_app,2,0,2
d->arch.p2m.alloc_page,1,1,2
data[i] != 0xa5,1,1,2
 pagetable_get_phys(d->arch.phys_table) ,1,1,2
mount->local_evtchn != -1,1,1,2
!libxl_domid_valid_guest(*domid),1,1,2
(hash & tlb_track->hash_mask) != hash,1,1,2
(e & ~PAGE_MASK) == 0,1,1,2
!spin_is_locked(&pending_free_lock),1,1,2
callbacks[x->type] != NULL,1,1,2
"(buffer_ma & (XBD_SECTOR_SIZE-1)) == 0, (""XEN buffer must be sector aligned"")",1,1,2
"HYPERVISOR_update_va_mapping((__address), __entry, 0)",1,1,2
"cpu_apic_ids[cpu] != -1, (""IPI to non-existent CPU %d"", cpu)",1,1,2
"index + 1 >= s->mapping.next ||((next_mapping = array_get(&(s->mapping), index + 1)) && next_mapping->begin >= end)",1,1,2
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != nr_pages",1,1,2
is_idle_domain(v->domain),1,1,2
d->arch.shadow_dirty_bitmap == NULL,1,1,2
ref == -ENOSPC,1,1,2
*remap_index != offset,1,1,2
vcpu_area != curr->vcpu_id,1,1,2
!(base_mfn % (16 * LPAE_ENTRIES)),1,1,2
"skb_copy_bits(skb, -hlen, nskb->data - hlen, skb->len + hlen)",1,1,2
ed->arch.arch_vmx.vmcs == NULL,1,1,2
mfn_valid(sh_ctxt->mfn1),1,1,2
local_port == port,1,1,2
shadow_mode_external(v->domain),1,1,2
 table == NULL || level == 0 ,1,1,2
"HYPERVISOR_multicall(mcl, target->nr_segments+1) != 0",1,1,2
!(gfn >> DEFAULT_DOMAIN_ADDRESS_WIDTH),2,0,2
"is->is_ithread != NULL, (""%s: isrc with no ithread"", __func__)",1,1,2
level>=0 && level<N_LOGLEV,1,1,2
(ulong)local & ~0xffffffffUL,1,1,2
((tlbflush_clock+1) & TLBCLOCK_EPOCH_MASK) == 0,1,1,2
entry_offset + num_entries > privcmd_file->num_entries,1,1,2
j == 0,1,1,2
 (pte->bits.v == 0) ,1,1,2
!ed->arch.monitor_table,1,1,2
"shadow2_remove_write_access(v, gmfn, 0, 0) == 0",1,1,2
l1e_get_intpte(l1tab[l1_table_offset(va)]),1,1,2
svc->credit != CSCHED_IDLE_CREDIT,1,1,2
"callout != NULL, (""NULL callout in fork_exit"")",1,1,2
"FS_RING_FREE_REQUESTS(&import->ring, idx)",1,1,2
(type & PGT_va_mask) != PGT_va_mutable,1,1,2
 d->arch.iobmp_mask ,1,1,2
(va < XEN_VIRT_END) || (va >= DIRECTMAP_VIRT_START),1,1,2
n == 1 || (stride == 0 && increment == 1),1,1,2
percpu_ctxt[cpu].curr_vcpu != next,1,1,2
cp->host_status == HS_COMPLETE,1,1,2
info->mi != NULL,1,1,2
next_prime->evt > next->evt,1,1,2
import->nr_entries <= 0,1,1,2
d->arch.starting_mp_rid + n >= d->arch.ending_mp_rid,1,1,2
mcs->call.args[i] != cval,1,1,2
!d->arch.shadow2.hash_table,1,1,2
i >= 3,1,1,2
pgp->size != -1,2,0,2
len > PAGE_SIZE * FSIF_NR_WRITE_GNTS,1,1,2
vma->vm_flags & VM_PFNMAP,1,1,2
pg[i].count_info & PGC_offlined,1,1,2
h.next->list.prev == PAGE_LIST_NULL,1,1,2
skb->nohdr,1,1,2
 mpfn_info ,1,1,2
 len < sizeof(s->pkt_buf),1,1,2
md->type != EFI_RUNTIME_SERVICES_CODE && md->type != EFI_RUNTIME_SERVICES_DATA && md->type != EFI_ACPI_RECLAIM_MEMORY && md->type != EFI_ACPI_MEMORY_NVS && md->type != EFI_RESERVED_TYPE && md->type != EFI_MEMORY_MAPPED_IO && md->type != EFI_MEMORY_MAPPED_IO_PORT_SPACE,1,1,2
!consumer_is_xen(chn),1,1,2
sizeof(((dom0_op_t *)0)->u) != sizeof(((dom0_op_t *)0)->u.pad),1,1,2
info->grant_id != -ENOSPC,1,1,2
"!test_bit(irq, d->pirq_mask) || (action->ack_type != ACKTYPE_NONE)",1,1,2
(vaddr >> VRN_SHIFT) != VRN7,1,1,2
EXYNOS5_MCT_G_TCON >= PAGE_SIZE,1,1,2
"intpin->io_edgetrigger, (""SMI not edge triggered"")",1,1,2
info->rq != NULL,1,1,2
t == PGC_SH2_l4_shadow,1,1,2
d->vcpu[vcpuid] == NULL,1,1,2
node < num_nodes,1,1,2
left == arg1,1,1,2
maxfd < INT_MAX / sizeof(int) / 2,1,1,2
nr_psegs <= BLKIF_MAX_SEGMENTS_PER_REQUEST*2,1,1,2
((unsigned long) addr & PAGE_MASK) == LDT_VIRT_START(v),1,1,2
vmx_msr_bitmap == NULL,1,1,2
aio_write(&priv_req->aiocb) >= 0,1,1,2
p2md->pod.count != 0,1,1,2
size >= 0,1,1,2
cpu_possible(i),1,1,2
s <= INT_MAX && e <= INT_MAX,1,1,2
!ao->nested_root,2,0,2
cpu < 7,1,1,2
t != PFN_TYPE_NONE && page_get_owner(mfn_to_page(mfn)) != d,1,1,2
p2m_is_shared(p2mt),1,1,2
npo.mcl_prod == 0,1,1,2
!stream->back_channel,2,0,2
rc != -ENOSYS,1,1,2
gt->gt_version != 0,1,1,2
remove_vm_area(area->addr) != area,1,1,2
commit->path || commit->action == ACTION_WRITEOUT,1,1,2
svc->vcpu->processor >= nr_cpu_ids,1,1,2
schedule_data[d->processor].curr,1,1,2
(!writeable) || (page_type_count(page) != 0),1,1,2
"l1e_get_pfn(DCACHE_L1ENT(dcache, hashent->idx)) == hashent->mfn",1,1,2
!dom0 && !pg,1,1,2
sizeof(struct shared_info) > XSI_SIZE,1,1,2
!*pblkif,1,1,2
(mfn_to_page(mfn)->count_info & ~PGC_xen_heap) != (PGC_allocated | 1),1,1,2
port != 0,1,1,2
v->arch.shadow2 != NULL,1,1,2
"object->type == OBJT_DEVICE, (""pmap_object_init_pt: non-device object"")",1,1,2
"!test_bit(_PGC_allocated, &old_page->count_info)",1,1,2
p2m_locked_by_me(p2m_get_hostp2m(d)),1,1,2
"pgp_lookup_in_obj(pgp->obj,pgp->index) == NULL",1,1,2
(mapping->info.dir.first_dir_index % (0x10 * s->sectors_per_cluster)) == 0,1,1,2
sp->u.sh.type != SH_type_l2_32_shadow,1,1,2
((unsigned long) ioc->res_hint & (sizeof(unsigned long) - 1UL)) == 0,1,1,2
pte_pgc_allocated(old_pte),1,1,2
l1e_get_pfn(cache->l1tab[hashent->idx]) == hashent->mfn,1,1,2
"virt_to_mfn(MMAP_VADDR(pending_idx, i)) == ((buffer_mach >> PAGE_SHIFT) + i)",1,1,2
!IS_ERR(ERR_PTR(op.status)),1,1,2
pgp->us.obj->pgp_count >= 0,1,1,2
src == hvm_intack_lapic,1,1,2
(vmx_msr_high & 0x1fff) > PAGE_SIZE,1,1,2
"!cpu_isset(cur_cpu, cpus)",1,1,2
"set_shared_p2m_entry(d, gfn->gfn, smfn) == 0",1,1,2
!allocated_in_map(first_page + i),1,1,2
"((offsetof(struct sym_reg, nc_sxfer) ^ offsetof(struct sym_tcb, head.sval)) &3) == 0",1,1,2
t == PGC_SH2_l3_shadow,1,1,2
irq >= nr_irqs_gsi && irq != AUTO_ASSIGN_IRQ,1,1,2
rc < n,2,0,2
(mfn_to_page(_sl4mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l4_64_shadow,1,1,2
init_irq_data(),1,1,2
pagetable_get_phys(ed->arch.monitor_table) == 0,1,1,2
mm->core_waiters,1,1,2
tmem_global.eph_count >= 0,2,0,2
mfn_to_page(sl1mfn)->u.sh.head,2,0,2
 mfn_valid(_mfn(l1e_mfn)) || !p2m_is_ram(p2mt) || p2m_is_paging(p2mt) ,1,1,2
(val == NULL) || ((dir == IOREQ_READ) && !value_is_ptr),1,1,2
skb->dev != dev,1,1,2
"ia64_pal_vm_summary (NULL, &vm_info_2) != 0",1,1,2
trap_nr > TRAP_syscall,1,1,2
iopm,1,1,2
 cur_sdom != NULL,1,1,2
!dev->msix_used_entries,1,1,2
 sdom->dom != vc->domain ,2,0,2
!(ret & ~(_PAGE_RW | PAGE_CACHE_ATTRS)),2,0,2
 sdom != NULL ,1,1,2
sizeof (l1_pgentry_t) != 2 * sizeof (unsigned long),1,1,2
 sp->type == 0 ,1,1,2
 (frame_table[smfn].u.inuse.type_info & PGT_pinned) ,1,1,2
n == 0,1,1,2
pmap->pm_obj.uo_npages == 0,1,1,2
" sh_hash(sp->v.sh.back, sp->u.sh.type) != bucket ",1,1,2
ARRAY_SIZE(pdev->vf_rlen) != PCI_SRIOV_NUM_BARS,2,0,2
schedule_data[cpu].context_switch_in_progress,1,1,2
ret == P2M_ONE_DESCEND,1,1,2
(offset + bytes) > 4,2,0,2
(u64)stime >> 55,1,1,2
list_ent == &d->page_list,1,1,2
cache->pa & DMCACHE_ENTRY_HELD,1,1,2
"HYPERVISOR_memory_op( XENMEM_decrease_reservation, &reservation) != (xen_start_info->nr_pages - max_pfn)",1,1,2
((unsigned long)l2_ro_mpt & ~PAGE_MASK) == 0,1,1,2
eax != boot_cpu_data.x86_capability[X86_FEATURE_XSAVEOPT / 32],1,1,2
!page_count(page),1,1,2
"num_mds <= (page_size * memmap_info_num_pages - offsetof(typeof(*memmap_info), memdesc))/sizeof(*md)",1,1,2
(p != NULL) || !in_irq(),1,1,2
&obj->pool->pool_rwlock,2,0,2
index + count <= array->next,1,1,2
len + ret > sizeof(printf_buffer)-1,1,1,2
(page->shadow2_flags & (SH2F_L4_64|SH2F_L3_64|SH2F_L2_64|SH2F_L1_64)) == 0,1,1,2
ctrls & ~vmx_msr_high,1,1,2
(pg->count_info & PGC_SH2_type_mask) != PGC_SH2_l2_32_shadow,1,1,2
"strcmp(watch_paths[1], ""conn-watch"") == 0",1,1,2
 d == page_get_owner(&frame_table[pagetable_val( d->arch.phys_table)>>PAGE_SHIFT]) ,1,1,2
mfn_valid(mfn) && page_get_owner(mfn_to_page(mfn)) != d && page_get_owner(mfn_to_page(mfn)) != NULL,1,1,2
(id == BUGFRAME_bug) || (id == BUGFRAME_assert),1,1,2
sh2_mfn_is_a_page_table(gmfn),1,1,2
skb_shinfo(skb)->frag_list != NULL,1,1,2
vio == NULL,1,1,2
!netfront_carrier_ok(np),1,1,2
d->shared_info == NULL,1,1,2
(diff != 0) || VM86_MODE(r) || ((r->cs&3) >= GUEST_KERNEL_RPL) || (r->cs == 0) || HVM_DOMAIN(current),1,1,2
"page_make_private(d, page) == 0",1,1,2
"ioint_handlers[vector / 32] != NULL, (""No ISR handler for IRQ %u"", irq)",1,1,2
next->processor == current->processor,1,1,2
NAME_MAX < PAGE_SIZE >> 1,1,1,2
pagetable_get_pfn(p2m_get_pagetable(p2m_get_hostp2m(d))) != 0,1,1,2
old_mfn == new_mfn,1,1,2
!info->idx_map,1,1,2
 uart->data_bits >= 7 && uart->data_bits <= 8 ,1,1,2
target == (INB (nc_sdid) & 0x0f),1,1,2
rwfd != -1,1,1,2
d->arch.shadow2_p2m_pages == 0,1,1,2
(len == 4) && (offset >= 0) && (offset <= APIC_TDCR),1,1,2
l1e_get_pfn(cache->l1tab[idx]) == pfn,1,1,2
d->is_dying == DOMDYING_dying,1,1,2
!epte->avail1,1,1,2
 image_len < rma_sz ,1,1,2
l4e != NULL,1,1,2
MSR_INDEX_SIZE != VMX_INDEX_MSR_TSC_AUX || VMX_INDEX_MSR_TSC_AUX != VMX_MSR_COUNT - 1,1,1,2
d->tot_pages > 0,1,1,2
key >> 35 == 0,1,1,2
!guest_op || shadow_lock_is_acquired(v->domain),1,1,2
key_table[key] == NULL,1,1,2
bm && bitmap_valid(bm) && bitmap_locked(bm),2,0,2
"HYPERVISOR_update_va_mapping( va, pfn_pte(pfn, PAGE_KERNEL), 0)",1,1,2
early_boot,1,1,2
num_regs > num_phys_stacked,1,1,2
desc->init != NULL,2,0,2
ed->domain->domain_id == IDLE_DOMAIN_ID,1,1,2
mfn != pte_pfn(ret_pte),1,1,2
ret > sizeof(printf_buffer)-1,1,1,2
 is_32bit_domain(current->domain) ,2,0,2
generated > 0,1,1,2
tokens_avail >= 0,1,1,2
"!test_bit(PG_pinned, &virt_to_page(next->pgd)->flags)",1,1,2
(_d)->arch.paging.shadow.locker == -1,1,1,2
"!test_bit(type >> PGC_SH2_type_shift, &page->shadow2_flags)",1,1,2
r == io_fd,1,1,2
is_pv_32on64_vcpu(v),1,1,2
(pg->count_info & PGC_SH2_type_mask) != PGC_SH2_l3_pae_shadow,1,1,2
" !cpumask_test_cpu(nxt, &per_cpu(cpu_core_map, cpu)) ",1,1,2
gsi >= NR_IRQ_VECTORS,1,1,2
mfn_to_shadow_page(_sl3mfn)->u.sh.type == SH_type_l3_64_shadow,1,1,2
*addr == (u32)*addr,1,1,2
cpu_nr != v->processor,1,1,2
"!strncmp(nodename, ""/local/domain/"", 14)",1,1,2
v->processor >= NR_CPUS,1,1,2
current->arch.vhpt_pg_shift > PAGE_SHIFT,1,1,2
opcode,1,1,2
mfn_to_shadow_page(_sl2mfn)->u.sh.type == SH_type_l2_32_shadow,1,1,2
(vaddr >> IA64_RR_SHIFT) != VRN7,1,1,2
"per_cpu(schedule_data, v->processor).sched_priv == NULL",1,1,2
spin_is_locked(&vioapic_domain(vioapic)->arch.hvm_domain.irq.lock),1,1,2
(unsigned long)__per_cpu_start & ~PAGE_MASK,1,1,2
vmce,1,1,2
cmd == XENMEM_translate_gpfn_list,1,1,2
sizeof(*native) < sizeof(*compat),2,0,2
mask.p_current,2,0,2
vpid_bitmap == NULL,1,1,2
d->max_vcpus < 8*sizeof(vcpu_mask),1,1,2
m->m_flags & M_PKTHDR,1,1,2
ti->frequency == 0 || ti->mask == 0,1,1,2
mapping->mode == MODE_UNDEFINED,1,1,2
jump_table == NULL,1,1,2
stack != 0,1,1,2
NULL != tce_data->t_tce,1,1,2
IOREMAP_VIRT_START + (IOREMAP_MBYTES << 19) >= FIXADDR_START,1,1,2
!a->next,1,1,2
(entry->apic == apic) && (entry->pin == pin),2,0,2
entry->p2m.valid,1,1,2
(page->count_info & PGC_count_mask) != 1,1,1,2
!(start & (~SECOND_MASK)),1,1,2
va >= GLOBALMAP_VIRT_START && va < GLOBALMAP_VIRT_END,1,1,2
"per_cpu(vgc_pages[0], cpu) != NULL",1,1,2
"intpin->io_dest != DEST_NONE, (""intpin not assigned to a cluster"")",1,1,2
papr_hcalls != NULL,1,1,2
m,1,1,2
ret == LZO_E_OK,2,0,2
ent->next->prev == ent,1,1,2
"((mapping_t*)array_get(&(vvv->mapping), 0))->end == 2",1,1,2
"offsetof(struct cpu_user_regs, r7) - offsetof(struct cpu_user_regs, r8) > 64 * sizeof(unsigned long)",1,1,2
"(mapping = array_get(&(vvv->mapping), 47))",1,1,2
"svc->rqd == RQD(ops, vc->processor)",2,0,2
(mfn_to_page(_sl1mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l1_shadow || (mfn_to_page(_sl1mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_fl1_shadow,1,1,2
ret != GUEST_TABLE_POD_PAGE || i != walk_level,1,1,2
nat.setup->nr_frames > NR_GRANT_FRAMES,1,1,2
clear_PGC_allocate && (page_get_owner(page) == NULL),1,1,2
"xc_evtchn_unmask(mount->evth, mount->local_evtchn) >= 0",1,1,2
pmap != pmap_kernel(),1,1,2
req_nr_frames <= max_nr_grant_frames,1,1,2
(nx & PGC_count_mask) != 2,1,1,2
msg.type == type,1,1,2
BOOT_MISC_VIRT_START & ~SECOND_MASK,1,1,2
!(virt_start & (~SECOND_MASK)),1,1,2
is_pv_domain(v->domain),1,1,2
mpl2e[PERDOMAIN_VIRT_START >> L2_PAGETABLE_SHIFT],1,1,2
third[third_table_offset(addr)].p2m.valid,1,1,2
mpic->isus[0] == NULL,1,1,2
v->arch.hvm_vmx.host_cr0 & X86_CR0_TS,1,1,2
ppl != NULL,1,1,2
"intpin->io_edgetrigger, (""EXTINT not edge triggered"")",1,1,2
IOREQ_TYPE_COPY != HVMOP_IO_RANGE_MEMORY,1,1,2
 m2mfn_info ,1,1,2
is_pv_32on64_domain(d),1,1,2
level > 3,2,0,2
s & PSH_shadowed,1,1,2
"objnode->obj,OBJ",1,1,2
 l1_pgentry_val(nl1e) & _PAGE_PRESENT ,1,1,2
CTX->childproc_hooks->chldowner == libxl_sigchld_owner_mainloop,2,0,2
end_xt > now,1,1,2
mount->gnth != -1,1,1,2
d->arch.vmx_platform.ioreq.va != NULL,1,1,2
radix_tree_is_indirect_ptr(item),2,0,2
!curr->arch.hvm_vmx.real_mode_io_in_progress,1,1,2
"ahd, AHD_MODE_DFF0_MSK|AHD_MODE_DFF1_MSK, AHD_MODE_DFF0_MSK|AHD_MODE_DFF1_MSK",1,1,2
!first[first_table_offset(addr)].p2m.valid,1,1,2
offset != DD_BLK_UNUSED,2,0,2
self == curcpu(),1,1,2
npo.copy_prod > NET_RX_RING_SIZE,1,1,2
memguard_is_guarded(ch),1,1,2
!vhpt,1,1,2
aio_read(&evtchn_cb) == 0,1,1,2
"src_bus_irq < 16, (""Invalid EISA IRQ %d"", src_bus_irq)",1,1,2
!info,1,1,2
r_time > 0,1,1,2
va < FIXADDR_START,1,1,2
rw_is_locked(&rgt->lock),1,1,2
d->arch.shadow2_hash_walking == 0,1,1,2
res == 0,1,1,2
is_pv_32bit_domain(d),2,0,2
"!get_page_and_type(spage, dom_cow, PGT_shared_page)",2,0,2
rw_is_locked(&t->lock),1,1,2
current->domain->domain_id == IDLE_DOMAIN_ID,1,1,2
(dirty_vram->sl1ma[i] & PAGE_MASK) == (sl1ma & PAGE_MASK),1,1,2
mfn_to_shadow_page(mmfn)->type == SH_type_monitor_table,1,1,2
nv->nv_vmexit_pending == 0,1,1,2
"RQD(ops, vc->processor) != svc->rqd ",1,1,2
d->vcpu[i]->sched_priv != NULL,1,1,2
 sp->type != e->t ,1,1,2
t == PGC_SH_l2_shadow || t == PGC_SH_l2h_pae_shadow,1,1,2
p->type == IOREQ_TYPE_INVALIDATE,1,1,2
!p2m_valid(second[second_table_offset(addr)]),1,1,2
"rx->id != 0, (""xn_rxeof: found free receive index of 0\n"")",1,1,2
"!cpumask_test_cpu(cpu, &CSCHED_PRIV(ops)->initialized)",1,1,2
!pte_pgc_allocated(old_pte),1,1,2
value[len] == '\0',1,1,2
bit == vm_top,1,1,2
"boot_cpu_id == PCPU_GET(apic_id), (""BSP's APIC ID doesn't match boot_cpu_id"")",1,1,2
total_avail_pages >= 0,2,0,2
p2m_granule_pfn & (p2m_granule_pfn - 1),1,1,2
!tb_init_done,1,1,2
v == v->d->vcpu[v->vid],2,0,2
!(virt_to_page(rawbuf)->count_info & PGC_allocated),1,1,2
"d, op.device, op.intx",2,0,2
s->used_clusters,1,1,2
vmce && vmce->mci_ctl,1,1,2
" cpu_isset(nxt, per_cpu(cpu_core_map, cpu)) ",1,1,2
current->id == IDLE_DOMAIN_ID,1,1,2
vmx_ept_super_page_level_limit > ept_super_page_level_limit,1,1,2
irq >= 16,2,0,2
(DEBUG_STACK_SIZE + PAGE_SIZE) > STACK_SIZE,1,1,2
"!test_bit(_DOMF_shuttingdown, &d->domain_flags)",1,1,2
!(len & (sizeof(uint64_t)-1)),2,0,2
"HYPERVISOR_memory_op(XENMEM_add_to_physmap, &xatp)",1,1,2
count > 0,1,1,2
*maddr == 0,1,1,2
spin_is_locked(&hd->mapping_lock) && is_hvm_domain(d),1,1,2
npo.mmu_prod > NET_RX_RING_SIZE,1,1,2
!netif_carrier_ok(dev),1,1,2
mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2_64_shadow || mfn_to_shadow_page(_sl2mfn)->type == SH_type_l2h_64_shadow,1,1,2
 m1mfn_info ,1,1,2
"lsect <= 7, (""XEN disk driver data cannot cross a page boundary"")",1,1,2
flags & ASSIGN_pgc_allocated,1,1,2
mcl[-1].op != __HYPERVISOR_update_va_mapping,1,1,2
!v->fpu_dirtied,2,0,2
"!(trig == INTR_TRIGGER_CONFORM || pol == INTR_POLARITY_CONFORM), (""%s: Conforming trigger or polarity\n"", __func__)",1,1,2
tmem->domain->is_dying,1,1,2
BUFFER_SIZE > strlen(old_file_name) + strlen(mount->export->export_path) + 1,1,1,2
!l3_table_offset(va ^ (va + nr * PAGE_SIZE - 1)),2,0,2
pkmap_count[PKMAP_NR(vaddr)] < 2,1,1,2
"vm_low == vm_top || !test_bit(vm_low, vm_bitmap)",1,1,2
"test_bit(_PGC_always_set, &page->count_info)",1,1,2
pkey < 16,2,0,2
pdirp,1,1,2
p2m_is_nestedp2m(p2m),1,1,2
privcmd_resource_min >= privcmd_resource_max,1,1,2
is_idle_vcpu(cur->vcpu),1,1,2
(mfn & ~(PADDR_MASK >> PAGE_SHIFT)) == 0,1,1,2
(diff == 0) || (!vm86_mode(r) && (r->cs == __HYPERVISOR_CS)),1,1,2
for_spawn->intermediate,1,1,2
d->tot_pages == dom0_nrpages,1,1,2
pte_pfn(old_pte) != mfn,1,1,2
 high_mem_end != memory_map.map[i].addr + memory_map.map[i].size,1,1,2
(page->shadow_flags & (SHF_L4_64|SHF_L3_64|SHF_L2H_64|SHF_L2_64|SHF_L1_64)) == 0,1,1,2
 !(mfn_to_page(smfn)->u.inuse.type_info & PGT_pinned) ,1,1,2
(opte & PG_PVLIST) == 0,1,1,2
"aio_fsync(O_SYNC, &priv_req->aiocb) >= 0",1,1,2
(gfp_mask & __GFP_HIGHMEM) != 0,1,1,2
"id != 0, (""alloc_rx_buffers: found free receive index of 0\n"")",1,1,2
valid && (a & 0x00f0ff00) != *ar,1,1,2
!xen_phys_cpus,1,1,2
(pg->count_info & PGC_SH_type_mask) < PGC_SH_max_shadow,1,1,2
namelen == sizeof(name),1,1,2
(pg->count_info & PGC_SH_type_mask) != PGC_SH_l2h_pae_shadow,1,1,2
" sh_hash(sp->backpointer, sp->type) != bucket ",1,1,2
!l1_table_offset(v),1,1,2
current->domain == d,1,1,2
!active_ac_timer(timer),1,1,2
sh2_mfn_is_a_page_table(mfn),1,1,2
!(((MODULES_END - 1) & PGDIR_MASK) == (__START_KERNEL & PGDIR_MASK)),1,1,2
"page, p",1,1,2
sizeof(struct fw_tables) > PAGE_SIZE,1,1,2
(len < 1) || (len > 15),1,1,2
 pagetable_get_paddr(ed->arch.monitor_table) ,1,1,2
xs_resuming,1,1,2
(u64)stamp >> 55,1,1,2
error != 1,1,1,2
sis_apic_bug == (quirk_id == QUIRK_IOAPIC_BAD_REGSEL),1,1,2
setup.status,1,1,2
_atomic_read(_c) >= 0,1,1,2
(mfn_to_page(mmfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_monitor_table,1,1,2
!(length & ~PAGE_MASK),1,1,2
rc != -EINTR && rc != -EAGAIN,1,1,2
!(start_iter & HVMOP_op_mask),1,1,2
rtn->slots[i] == NULL,1,1,2
ld == NULL,1,1,2
rings != NULL,2,0,2
 root_get_intpte(idle_pg_table[1]) == 0 ,1,1,2
seg != -1 || bus == -1,2,0,2
!(early_vmap_start & (~SECOND_MASK)),1,1,2
!d->has_cpu,1,1,2
sp->type != SH_type_l2h_pae_shadow,1,1,2
(unsigned long)pg - FRAMETABLE_VIRT_START < frametable_virt_end,1,1,2
atomic_read(&(p)->_count) == -1,1,1,2
freemem <= (uint8_t *)0xF0000,1,1,2
ld->refcount == 0,1,1,2
!epte->rsvd1,1,1,2
!list_empty(&h->reply_list),1,1,2
spin_is_locked(&d->arch.hvm_domain.irq.lock),1,1,2
cpus_empty(cfg->domain),1,1,2
(int)size < 0,1,1,2
cp,1,1,2
 d->vcpu[vcpu] == NULL ,1,1,2
((pg[i].u.inuse.type_info & PGT_count_mask) == 0) || shadow_tainted_refcnts(d),1,1,2
d->processor < NR_CPUS,1,1,2
 !d->domain_id ,1,1,2
!list,1,1,2
 guest_mode(regs) ,1,1,2
irq == -1,1,1,2
~(pci_mem_start | (pci_mem_start - 1)),1,1,2
(_d)->arch.shadow2_locker == -1,1,1,2
shadow2_mode_enabled(v->domain),1,1,2
va >= XEN_VIRT_START,2,0,2
stream->ao,2,0,2
shadow_type != PGC_SH_p2m_table,1,1,2
"sc->xn_rx_batchlen == 0, (""not all mbufs processed"")",1,1,2
p2m_is_changeable(ot) && p2m_is_changeable(nt),2,0,2
(s64)delta < 0,1,1,2
sizeof(shared_info_compat_t) > PAGE_SIZE,1,1,2
" !cpu_isset(nxt, cpu_core_map[cpu]) ",1,1,2
 !iommu || !event ,1,1,2
count >= XAPIC_DEST_CPUS_SHIFT,1,1,2
"HYPERVISOR_update_va_mapping( (unsigned long)__va(pfn << PAGE_SHIFT), __pte_ma((mfn_list[i] << PAGE_SHIFT) | pgprot_val(PAGE_KERNEL)), 0)",1,1,2
index2!=index3 || index2==0,1,1,2
checkpointed_stream == MIG_STREAM_NONE || checkpointed_stream == MIG_STREAM_REMUS,1,1,2
!pte_tlb_inserted(ret_pte),1,1,2
dst != NULL,1,1,2
"!test_bit(type >> PGC_SH_type_shift, &page->shadow_flags)",1,1,2
mfn_to_page(*smfn)->u.sh.head,2,0,2
pmap_valid_entry(pte),1,1,2
(offset % s->cluster_size) == 0,1,1,2
cos == 0 || map[cos].ref != 0,1,1,2
d->arch.shadow2.hash_walking == 0,1,1,2
d->exec_domain[i]->ed_sched_priv != NULL,1,1,2
p != o || o == NULL,1,1,2
page_to_mfn(gpage) != 0,1,1,2
sizeof(start_info_t) + sizeof(dom0_vga_console_info_t) + sizeof(struct ia64_boot_param) > PAGE_SIZE,1,1,2
zone <= MEMZONE_XEN + 1,1,1,2
ci->ci_tlbstate == TLBSTATE_LAZY,1,1,2
!d->arch.shadow2_hash_table,1,1,2
1 << PTESHIFT == sizeof(pt_entry_t),1,1,2
msg->hdr.type == XS_WATCH_EVENT,2,0,2
gpte & _PAGE_RW,1,1,2
reqdatasz != realdatasz,1,1,2
tabmfn != 0,1,1,2
"mem_sharing_unshare_page(p2m, gfn, MEM_SHARING_DESTROY_GFN)",1,1,2
PDPT_L2_ENTRIES * sizeof(*d->arch.mm_perdomain_pt_pages) != PAGE_SIZE,1,1,2
!(regs->msr & MSR_RI),1,1,2
entry->pirq == pirq,1,1,2
dir_index == 0 || is_directory(direntry),1,1,2
i && sym_get_cam_status(cp->cam_ccb) == CAM_REQUEUE_REQ,1,1,2
next_prime->evt >= next->evt,1,1,2
"HYPERVISOR_grant_table_op( GNTTABOP_unmap_grant_ref, unmap, op)",1,1,2
list_empty(list),1,1,2
virq_is_global(virq),2,0,2
pmd_huge(*pmd),1,1,2
spin_is_locked(&vioapic_domain(vioapic)->arch.hvm_domain.irq_lock),1,1,2
l1e_get_intpte(*l1tab),1,1,2
"VM_PAGE_TO_PHYS(m) == (pmap->pm_pdpt[i] & PG_FRAME), (""pmap_release: got wrong ptd page"")",1,1,2
 e->t > SH_type_max_shadow ,1,1,2
"strlen(dir) + strlen(""/"") + strlen(name) + 1 > sizeof(buffer)",1,1,2
!page_get_owner(pfn_to_page(v->arch.monitor_shadow_ref)),1,1,2
num >= MAX_IO_HANDLER,1,1,2
list_empty(&dev->msi_list),2,0,2
!list_empty(&d->arch.shadow.freelists[SHADOW_MAX_ORDER]),1,1,2
fd == -1,1,1,2
"pgp->us.obj,OBJ",1,1,2
 !is_32bit_domain(current->domain) || !(cpsr&PSR_THUMB) ,1,1,2
"!cpu_isset(cpu, next->vcpu_dirty_cpumask)",1,1,2
(sp == 0) || (pending_eoi[cpu][sp-1].vector < vector),1,1,2
(_p)->u.inuse.domain == (_d),1,1,2
record_order[i],2,0,2
entry->gpfn != INVALID_GPFN,1,1,2
"test_bit(_DOMF_shutdown, &d->domain_flags)",1,1,2
mfn_to_shadow_page(mmfn)->u.sh.type == SH_type_monitor_table,1,1,2
page_count(pagevec[i]) != 1,1,1,2
p->current,2,0,2
fd_read_poll == NULL,1,1,2
info->foreign == NULL,1,1,2
!defer,2,0,2
mp_rid_shift < 3,1,1,2
child->nested,1,1,2
(obj != NULL)&&((objnew==obj)||(objfound==obj))&&(objnew!=objfound),1,1,2
 !vcpu_runnable(ret.task) ,1,1,2
"(dest & ~(APIC_ID_MASK >> APIC_ID_SHIFT)) == 0, (""%s: invalid destination 0x%x"", __func__, dest)",1,1,2
sizeof(dv_paddr_link_ext_t) > PAGE_SIZE,1,1,2
((vaddr & ~PAGE_MASK) + bytes) <= PAGE_SIZE,1,1,2
rt_credit >= 0,1,1,2
mn == NULL,1,1,2
spin_is_locked(&bus2bridge_lock),1,1,2
fault != IA64_NO_FAULT,1,1,2
(__va >= IOREMAP_VIRT_START) && (__va <= (IOREMAP_VIRT_END - 1)),1,1,2
rma_settings != NULL,1,1,2
d->arch.paging.shadow.dirty_bitmap == NULL,1,1,2
info->gd != NULL,1,1,2
!cpu_has_xsaveopt != !(eax & XSTATE_FEATURE_XSAVEOPT),1,1,2
nv->nv_n2vmcx_pa != VMCX_EADDR,2,0,2
pfn != mfn,1,1,2
virq >= 32,2,0,2
(char*)xen_ia64_fpswa_call_stub_end - (char*)xen_ia64_fpswa_call_stub > 0xff - 16,1,1,2
d1 != current->domain,1,1,2
vmx_cpu_based_exec_control != _vmx_cpu_based_exec_control,1,1,2
atom,1,1,2
pg == NULL,1,1,2
!s->current_mapping || s->current_fd || (s->current_mapping->mode & MODE_DIRECTORY),1,1,2
" ref != -ENOSPC, (""couldn't get grant reference"") ",1,1,2
"sh_type_has_up_pointer(v, sp->u.sh.type)",1,1,2
pagetable_is_null(v->arch.shadow_table[slot]),1,1,2
t == PGC_SH_fl1_32_shadow || t == PGC_SH_fl1_pae_shadow || t == PGC_SH_fl1_64_shadow || t == PGC_SH_monitor_table || (page_get_owner(mfn_to_page(_mfn(pg->u.inuse.type_info))) == v->domain),1,1,2
best_guess >= NR_IRQS,1,1,2
mpic->fixups == NULL,1,1,2
RDWR_MPT_VIRT_END & ((1UL << L3_PAGETABLE_SHIFT) - 1),2,0,2
spin_is_locked(&vpic->lock),1,1,2
virt_to_maddr(&v->arch.shadow.l3table) <= 0xffffffe0ULL,1,1,2
"mapping == array_get(&(s->mapping), s->mapping.next - 1) || mapping[1].begin >= c",1,1,2
page_get_owner(&frame_table[ed->arch.monitor_shadow_ref]) == NULL,1,1,2
regs->eflags & X86_EFLAGS_IF,1,1,2
memguard_is_guarded(ct),1,1,2
(xstate_offsets[index] + xstate_sizes[index]) <= size,2,0,2
"nr_mds <= (PAGE_SIZE * memmap_info_num_pages - offsetof(typeof(*memmap_info), memdesc))/sizeof(*md)",1,1,2
l4_backptr == PGT_va_unknown,1,1,2
!(page->u.inuse.type_info & (PGT_count_mask|PGT_validated|PGT_partial)),1,1,2
ci->ci_tlbstate == TLBSTATE_VALID,1,1,2
sizeof(*v) > PAGE_SIZE,2,0,2
old_target && (old_target <= d->max_vcpus),1,1,2
frame != (_s_)->frame_list.p[i],1,1,2
d->arch.shadow.p2m_pages == 0,1,1,2
d->arch.paging.log_dirty.bitmap == NULL,1,1,2
p->count == 1,1,1,2
d->max_pages == d->tot_pages,1,1,2
__START_KERNEL <= __START_KERNEL_map,1,1,2
!hvm_guest(bsp),1,1,2
msrpm,1,1,2
vmx_vmentry_control != _vmx_vmentry_control,1,1,2
v->arch.shadow2.mode != NULL,1,1,2
P2M_ROOT_LEVEL > 0,2,0,2
sizeof(vcpu_info_compat_t) != 64,1,1,2
lchn->consumer_is_xen,1,1,2
pl == (*ppl),1,1,2
ret != nr_pages,1,1,2
guest_l1e_get_flags(gpte) & _PAGE_RW,1,1,2
dest_cpu == -1,1,1,2
!shadow2_mode_external(v->domain),1,1,2
 phystab ,1,1,2
pg->list.next != PAGE_LIST_NULL,1,1,2
!((uintptr_t) aiocbp->aio_buf & (dev->sector_size-1)),1,1,2
vmcs_revision_id != vmx_basic_msr_low,1,1,2
ed->domain->id == IDLE_DOMAIN_ID,1,1,2
ot != nt,2,0,2
"!cpu_isset(new_cpu, CSCHED_PRIV(ops)->initialized)",1,1,2
"test_bit(irq, d->pirq_mask)",1,1,2
(ranfor>0),1,1,2
"irq != domain_pirq_to_irq(d, pirq)",1,1,2
s->cluster_buffer,1,1,2
(mfn_to_page(_sl4mfn)->count_info & PGC_SH_type_mask) == PGC_SH_l4_64_shadow,1,1,2
sizeof (struct shadow_page_info) < sizeof (struct page_info),1,1,2
!page_pool,1,1,2
cpus_weight(cmd->mask) == 1,1,1,2
buffer[0] == 0x0f && (buffer[1] & 0xFD) == 0x21,1,1,2
"sh_type_is_pinnable(v, sp[0]->u.sh.type)",1,1,2
VMX_DOMAIN(v),1,1,2
FIXMAP_ADDR(FIXMAP_GICC1) != FIXMAP_ADDR(FIXMAP_GICC2)-PAGE_SIZE,1,1,2
ed->thread.arch_vmx.vmcs,1,1,2
"pci0 != -1, (""do not know how to route PCI interrupts"")",1,1,2
mmap_start[mmap_alloc].start == 0,1,1,2
send_back_fd == -1,1,1,2
ioc->pdir_base[off] >> 63,1,1,2
!pte_tlb_inserted(old_pte),1,1,2
req_fd < poller->fd_rindex_allocd,1,1,2
page->count_info != (1 | PGC_allocated),1,1,2
!list_empty(&d->arch.shadow2.freelists[SHADOW2_MAX_ORDER]),1,1,2
mask,2,0,2
"m->phys_addr == (tpte & PG_FRAME), (""vm_page_t %p phys_addr mismatch %016jx %016jx"", m, (uintmax_t)m->phys_addr, (uintmax_t)tpte)",1,1,2
file->private_data != NULL,1,1,2
max_doms == 1,1,1,2
hashent->refcnt,2,0,2
shadow_lock_is_acquired(_d),1,1,2
v->vcpu_info_mfn == INVALID_MFN,1,1,2
mpic->num_sources == 0,1,1,2
irq < gic.lines,1,1,2
!cpu_has_xsavec != !(eax & XSTATE_FEATURE_XSAVEC),1,1,2
"strcmp(s, STATE_READY) == 0",1,1,2
(cfg->used_vectors == NULL) || (cfg->used_vectors == irq_used_vectors),1,1,2
"test_bit(type >> PGC_SH2_type_shift, &page->shadow2_flags)",1,1,2
"FD_ISSET(pip[0], &fds)",1,1,2
i > NUM_MEM_DESCS,1,1,2
"i, (""no mbufs processed"")",1,1,2
tmh_page_list_pages == 0,1,1,2
jump_sec_idx == 0,1,1,2
t == PGC_SH2_l1_shadow || t == PGC_SH2_fl1_shadow,1,1,2
bug,1,1,2
(pg->count_info & PGC_SH_type_mask) > 0,1,1,2
info->busy.req == req,1,1,2
hba[i],1,1,2
"cpumask_test_cpu(cpu, &prv->initialized)",1,1,2
is_idle_task(v->domain),1,1,2
aio_return(&evtchn_cb) == sizeof(evtchn_port_t),1,1,2
 lowmem_reserved_base < ACPI_INFO_PHYSICAL_ADDRESS || lowmem_reserved_base > ACPI_INFO_PHYSICAL_END ,1,1,2
name.sin_family == AF_INET,1,1,2
owner,2,0,2
mfn_to_shadow_page(_sl4mfn)->type == SH_type_l4_64_shadow,1,1,2
!irq_channel,1,1,2
key_table[key].u.handler == NULL,1,1,2
addr == NULL,1,1,2
npo.meta_prod > NET_RX_RING_SIZE,1,1,2
this_cpu(mc_state).flags == 0,1,1,2
pagetable_get_pfn(p2m_get_pagetable(hostp2m)) != 0,1,1,2
 spin_is_locked(&ir_ctrl->iremap_lock) ,2,0,2
pending != 0,1,1,2
"per_cpu(cpupool, cpu) != NULL",1,1,2
"!memcmp(direntry->name, ""USB H "", 11) || direntry->name[0]==0",1,1,2
 (pg->count_info & PGC_SH2_type_mask) >> PGC_SH2_type_shift != e->t ,1,1,2
shadow_mode_translate(ed->domain),1,1,2
this_cpu(percpu_mm_info).deferred_ops,1,1,2
t->status == TIMER_STATUS_inactive,1,1,2
 sdom->weight > weight_left ,1,1,2
"(flags & (M_NOWAIT | M_WAITOK)) == M_NOWAIT || (flags & (M_NOWAIT | M_WAITOK)) == M_WAITOK, (""pmap_allocpte: flags is neither M_NOWAIT nor M_WAITOK"")",1,1,2
l2e_get_pfn(idle_pg_table_l2[0]) != virt_to_mfn(l1_identmap),1,1,2
sdom->id != IDLE_DOMAIN_ID,1,1,2
current->id != IDLE_DOMAIN_ID,1,1,2
"args->vector == -1, (""Multiple IRQs for PCI interrupt %d.%d.INT%c: %d and %d\n"", args->bus, args->irq >> 2, 'A' + (args->irq & 0x3), args->vector, vector)",1,1,2
tmh_tze_enabled(),1,1,2
evtchn_to_irq[local_port] != -1,1,1,2
!active_timer(&v->periodic_timer),1,1,2
set_rc != 0,1,1,2
(mfn_to_page(_sl2mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l2_pae_shadow || (mfn_to_page(_sl2mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l2h_pae_shadow,1,1,2
vmcb->eventinj.v == 0,1,1,2
end_gpaddr & 0x8000000000ULL,1,1,2
(ma >> PAGE_SHIFT) < (DIRECTMAP_SIZE >> PAGE_SHIFT),1,1,2
PAGE_SIZE == STACK_SIZE,2,0,2
(pg->count_info & PGC_SH_type_mask) != PGC_SH_l4_64_shadow,1,1,2
v->domain->domain_id == d->domain_id,1,1,2
MAPCACHE_VIRT_END + 3 + 2 * PFN_UP(BITS_TO_LONGS(MAPCACHE_ENTRIES) * sizeof(long)) > MAPCACHE_VIRT_START + (PERDOMAIN_SLOT_MBYTES << 20),1,1,2
num_online_cpus() == 1,1,1,2
old_base->running_timer,1,1,2
vmx_basic_msr_high & (1u<<16),1,1,2
!ptr || is_xmalloc_memory(ptr),2,0,2
spin_is_locked(&t->lock),1,1,2
req->u.fread.len > 0,1,1,2
EPT_DEFAULT_GAW != 3,1,1,2
cpus_empty(action->cpu_eoi_map),1,1,2
dir == IOREQ_READ || dir == IOREQ_WRITE,1,1,2
offset == 0,1,1,2
firstbyte < 256,2,0,2
(mfn_to_page(_sl3mfn)->count_info & PGC_SH2_type_mask) == PGC_SH2_l3_pae_shadow,1,1,2
!(regs->ecx & MMU_UPDATE_PREEMPTED),1,1,2
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32on64_vcpu(v) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(_mfn(sp->u.sh.back))) == v->domain),1,1,2
cpu_state != CPU_STATE_DYING,1,1,2
zone >= GFP_ZONETYPES,1,1,2
in_irq,1,1,2
"ahd, source, dest, __FILE__, __LINE__",1,1,2
(_d)->arch.paging.shadow.locker == current->processor,1,1,2
idt_allocmap[vec] == 1,1,1,2
PageCompound(page),1,1,2
"v->domain, irq",2,0,2
fd == ev->fd,1,1,2
"vector != IDT_SYSCALL, (""Attempt to overwrite syscall entry"")",1,1,2
(!writeable) || (((page_type_count(page) & ~REFCNT_PIN_BIT) != 0) && ((page->flags & PG_type_mask) == PGT_writeable_page) && ((page->flags & PG_need_flush) == PG_need_flush)),1,1,2
((void *)ch->pprev < (void *)&_end) || memguard_is_guarded(ch->pprev),1,1,2
spin_is_locked(&lgt->lock),1,1,2
TAILQ_EMPTY(&pmap->pm_obj.memq),1,1,2
npo.mcl_prod > NET_RX_RING_SIZE+3,1,1,2
sp < 1,2,0,2
"(icrlo & APIC_ICRLO_RESV_MASK) == 0, (""%s: reserved bits set in ICR LO register"", __func__)",1,1,2
VALID_MFN(gmfn),1,1,2
 r & SHADOW_SET_L3PAE_RECOPY ,1,1,2
j != (1UL << out_chunk_order),1,1,2
!d->arch.shadow.hash_table,1,1,2
sc->op == DOM0_SHADOW_CONTROL_OP_PEEK,1,1,2
" cpumask_test_cpu(nxt, &per_cpu(cpu_core_map, cpu)) ",1,1,2
!list_empty(&d->arch.paging.shadow.freelists[SHADOW_MAX_ORDER]),1,1,2
ci == curcpu(),1,1,2
(pg->count_info & PGC_SH_type_mask) != PGC_SH_l3_pae_shadow,1,1,2
list_empty(&tlb_track->free_list),1,1,2
csstart > skb_headlen(skb),1,1,2
 !is_idle_vcpu(schedule_data[cpu].curr) ,1,1,2
do_locking || shadow_locked_by_me(v->domain),1,1,2
!valid_mfn(mfn),1,1,2
(pg->count_info & PGC_SH_type_mask) != PGC_SH_l2_32_shadow,1,1,2
sizeof(libxl_uuid) != sizeof(uuid_t),1,1,2
irq >= 256,1,1,2
PDPT_L2_ENTRIES * sizeof(*d->arch.perdomain_pts) != PAGE_SIZE,1,1,2
spin_is_locked(&irq_desc[msi->vector].lock),1,1,2
must_succeed,1,1,2
sizeof(QCowHeader) + sizeof(QCowHeader_ext) < 512,1,1,2
(!is_idle_domain(d) || vcpu_id) && d->vcpu[vcpu_id],1,0,1
"test_vhd_flag(s->bat.status, VHD_FLAG_BAT_WRITE_STARTED)",1,0,1
!cp.tas,1,0,1
!peoi[sp].ready,1,0,1
sp != 0,1,0,1
 !p || *p == '\0' ,1,0,1
ferror(dc->log),1,0,1
"offsetof(xen_memory_exchange_t, in) > offsetof(xen_memory_exchange_t, out)",1,0,1
sizeof((l)->lock) != 4,1,0,1
!(level > 2 && (l1e_get_flags(*p) & _PAGE_PRESENT) && (l1e_get_flags(*p) & _PAGE_PSE)),1,0,1
slot < SHM_TABLE_SLOTS,1,0,1
"false || ""DEFAULT""",1,0,1
p < src+len-1,1,0,1
msi_desc->irq >= 0,1,0,1
!(sp->count_info & PGC_count_mask),1,0,1
(mode == 4) || (mode == 8),1,0,1
 iommu->ppr_log.buffer ,1,0,1
num >= 2,1,0,1
pg[i].count_info != PGC_state_free,1,0,1
 !psr_mode_is_32bit(regs->cpsr) || !(cpsr&PSR_THUMB) ,1,0,1
list_empty(&h->reply_list),1,0,1
sp < 0,1,0,1
!ao->nested_progeny,1,0,1
"lock == per_cpu(schedule_data, cpu).schedule_lock",1,0,1
!(act->pin & GNTPIN_hstw_mask),1,0,1
spc && spc->runq.next == NULL && spc->runq.prev == NULL,1,0,1
seen_state != CPU_STATE_DYING,1,0,1
(x & PGT_count_mask) == 1,1,0,1
next < 2*data_size,1,0,1
"f2e(INITIAL_NR_GRANT_FRAMES, 2) < GNTTAB_NR_RESERVED_ENTRIES",1,0,1
mem->bank[i].size & EFI_PAGE_MASK,1,0,1
l4e_get_flags(l4e[linear_slot]) & _PAGE_PRESENT,1,0,1
!(sflags & (_PAGE_PAT | _PAGE_PCD | _PAGE_PWT)),1,0,1
cpu_has_vmx_virtualize_apic_accesses,1,0,1
!read_thread_exists(h),1,0,1
ARRAY_SIZE(current->domain->handle) != ARRAY_SIZE(hdl),1,0,1
v->arch.smap_check_policy == SMAP_CHECK_DISABLED,1,0,1
next < FIRST_HIPRIORITY_VECTOR,1,0,1
!WIFSTOPPED(status),1,0,1
(size - 1) < 4 && size != 3,1,0,1
eax != xstate_sizes[leaf],1,0,1
v->arch.nonlazy_xstate_used,1,0,1
gvmcb != NULL,1,0,1
REGOFFS(r0) + 7*sizeof(register_t) != REGOFFS(r7),1,0,1
p2m_is_foreign(ot) || p2m_is_foreign(nt),1,0,1
!pl1tab[l2_table_offset(va)],1,0,1
parent->magic == LIBXL__AO_MAGIC,1,0,1
!bitmap_in_use(lru),1,0,1
(unsigned long)pg - FRAMETABLE_VIRT_START < FRAMETABLE_SIZE,1,0,1
(link <= 3) && (isa_irq <= 15),1,0,1
online == (d->max_vcpus - ved->blocked),1,0,1
!libxl__gc_is_real(array->gc),1,0,1
pfp_size <= PAGE_SIZE,1,0,1
tx->closed,1,0,1
pfn != nat.xchg->out.extent_start.p[start_extent],1,0,1
!dev->driver,0,1,1
info->tables_nr < MAX_TABLES,1,0,1
l3e_get_flags(ml3e[0]) & _PAGE_PRESENT,1,0,1
nr != INVALID_VMID,1,0,1
system_state == SYS_STATE_suspend,1,0,1
msi,1,0,1
nmap == 0,1,0,1
new_task == NULL,1,0,1
tze_len <= PAGE_SIZE,1,0,1
sizeof(rombios) > 0x100000 - ROMBIOS_PHYSICAL_ADDRESS,1,0,1
bios->bios_address + bios->image_size > HVMLOADER_PHYSICAL_ADDRESS,1,0,1
(info->cur + ( 1UL << PAGETABLE_ORDER) < info->epfn) && info->cur >= info->spfn,1,0,1
sp[0]->u.sh.head,1,0,1
!(rc & SHADOW_SET_FLUSH),1,0,1
record_order[i]!=new,1,0,1
"cpumask_test_cpu(cpu, &cpupool_free_cpus) || cpumask_test_cpu(cpu, (*c)->cpu_valid)",1,0,1
avail[node][zone] >= request,1,0,1
!pgp->us.obj->pool->persistent,1,0,1
sizeof(*(o)) != sizeof(__uint128_t),1,0,1
page_get_owner(page) != current->domain,1,0,1
vcpu_nestedhvm(v).nv_vmexit_pending == 0,1,0,1
!libxl__conversion_helper_inuse(chs),1,0,1
l3e_get_flags(l3_ro_mpt[l3_table_offset(va)]) & _PAGE_PRESENT,1,0,1
sizeof(d->arch.monitor.msr_bitmap->low) * 8 <= 0x1fff,1,0,1
bl->ao,1,0,1
spin_is_locked(&d->page_alloc_lock),1,0,1
((c->user_regs.eflags & EF_IOPL) != 0) && !(VMX_DOMAIN(v)),1,0,1
!list_empty(lru_list),1,0,1
"list_empty(&per_cpu(dpci_list, cpu))",1,0,1
ss->detaching,1,0,1
 lowmem_reserved_base > 512<<10 ,1,0,1
(opaque_out & GNTTABOP_CMD_MASK) == 0,1,0,1
"p2m_change_type_one(d, gfn, p2mt, p2m_ram_shared)",1,0,1
end_extent < nat.xchg->nr_exchanged,1,0,1
platform_mmio_alloc > platform_mmiolen,1,0,1
p2m_max_real_type > (1 << 4),1,0,1
abs.tv_sec == 0 && abs.tv_usec == 0,1,0,1
sizeof(struct vcpu_info) != 64,1,0,1
(_MEMF_bits - _MEMF_node) < (8 * sizeof(nodeid_t)),1,0,1
base >= 2 && base <= 36,1,0,1
*reg != (unsigned int)*reg,1,0,1
x < ARRAY_SIZE(memory_types),1,0,1
cpumask_empty(desc->arch.cpu_mask),1,0,1
!ao->aborting,1,0,1
"cpumask_next(i, &cpu_present_map) < nr_cpu_ids",1,0,1
tb == NULL,1,0,1
chn2->state != ECS_INTERDOMAIN,1,0,1
sizeof(xen_domain_handle_t) != 16,1,0,1
sizeof(struct xc_sr_rec_x86_pv_vcpu_hdr) != 8,1,0,1
(sizeof(*frame_table) & -sizeof(*frame_table)) % sizeof(*machine_to_phys_mapping),1,0,1
sp->u.sh.type < SH_type_max_shadow,1,0,1
is_viridian_domain(currd),1,0,1
percpu_rw_is_write_locked(&rd->grant_table->lock),1,0,1
l1e_get_pfn(MAPCACHE_L1ENT(idx)) == mfn_x(mfn),1,0,1
"memblk_is_inuse(mb), return NULL",1,0,1
"!page_state_is(&pg[i], offlined)",1,0,1
pdev->domain,1,0,1
req_fd < poller->fd_rindices_allocd,1,0,1
size == sizeof(struct hash_entry),1,0,1
IS_ERR(idle_domain),1,0,1
offset >= INTREMAP_ENTRIES,1,0,1
vcpu_nestedhvm(v).nv_vmswitch_in_progress,1,0,1
is_kernel(p) && is_kernel(p + l),1,0,1
"per_cpu(batching, this_cpu)",1,0,1
!usr_mode(regs),1,0,1
sd->schedule_lock == &sd->_lock && !spin_is_locked(&sd->_lock),1,0,1
name == NULL,1,0,1
!bsp,1,0,1
PADDR_BITS >= BITS_PER_LONG,1,0,1
sizeof(register_t) != sizeof(unsigned long),1,0,1
HYPERVISOR_set_timer_op(__jiffies_to_st(j)) != 0,1,0,1
timer->status >= TIMER_STATUS_inactive,1,0,1
!entry,1,0,1
shadow_type < ARRAY_SIZE(sh_type_to_size),1,0,1
r <= 0,1,0,1
 iommu->cmd_buffer.buffer ,1,0,1
len>=2 && src[0]==src[len-1],1,0,1
sizeof(h.oid) != sizeof(pgp->inv_oid),1,0,1
first_table_offset(XEN_VIRT_START),1,0,1
libxl__gc_is_real(gc),1,0,1
!port->driver->tx_ready,1,0,1
len != 0,1,0,1
"set_shared_p2m_entry(d, gfn, page_to_mfn(page))",1,0,1
pos,1,0,1
rc != -EINTR && rc != -ERESTART,1,0,1
!*t,1,0,1
!is_idle_vcpu(curr_on_cpu(cpu)),1,0,1
!p2m_is_foreign(p2mt) || target == 0,1,0,1
!(start_iter & mask),1,0,1
evg->domid == got->domain,1,0,1
sp < (NR_DYNAMIC_VECTORS-1),1,0,1
((int)size < 0) || ((unsigned int)size != size),1,0,1
logger_s,1,0,1
!error || !tboot_in_measured_env(),1,0,1
b > 0x6b,1,0,1
"(offsetof(struct cpu_user_regs, sp_usr)) & 0x7",1,0,1
device->backend_kind == LIBXL__DEVICE_KIND_QDISK,1,0,1
!pdev->ats.cap_pos,1,0,1
v->runstate.state != new_state,1,0,1
pgp->pfp == NULL,1,0,1
sizeof(struct xc_sr_rec_hvm_params) != 8,1,0,1
v->arch.hvm_svm.vmcb != NULL,1,0,1
p2m_is_shared(ot),1,0,1
max_pfn > old_max,1,0,1
ARRAY_SIZE(hvm_shadow) != FEATURESET_NR_ENTRIES,1,0,1
ao->progress_reports_outstanding >= 0,1,0,1
i < gc->alloc_maxsize,1,0,1
(sizeof (struct cpu_info)) & 0xf,1,0,1
 svc == CSCHED_VCPU(curr_on_cpu(svc->vcpu->processor)) ,1,0,1
stream->chs.v2_carefd,1,0,1
 !vcpu_on_q(svc) ,1,0,1
ARRAY_SIZE(special_features) != FSCAPINTS,1,0,1
rw_is_write_locked(&prv->lock),1,0,1
list_empty(&cpage->sharing->gfns),1,0,1
(i < nr_bootmem_regions) && (e > bootmem_region_list[i].s),1,0,1
!(PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET & 4),1,0,1
_domain_is_paused(),1,0,1
"!hypercall_xlat_continuation(&left, 4, 0x01, nat_ops, cmp_uops)",1,0,1
mfn_valid(mfn_x(mfn)),1,0,1
!cpumask_empty(action->cpu_eoi_map),1,0,1
rec->data,1,0,1
ss->detaching || ss->rc,1,0,1
MAPHASHENT_NOTINUSE < MAPCACHE_ENTRIES,1,0,1
"sh_type_has_up_pointer(d, sp->u.sh.type)",1,0,1
dpci,1,0,1
!mb,1,0,1
!(mfn_to_page(mfn)->count_info & PGC_allocated),1,0,1
"cpumask_test_cpu(cpu, &cpupool_free_cpus) || cpumask_test_cpu(cpu, (*c)->cpu_suspended)",1,0,1
pfn != d->tot_pages,1,0,1
d->is_shutting_down,1,0,1
event->u.operation_complete.rc == ERROR_ABORTED,1,0,1
 sdom->active_vcpu_count == 0 ,1,0,1
gicv3.nr_priorities > 6 && gicv3.nr_priorities < 8,1,0,1
 pool->client->persistent_pool != NULL ,1,0,1
cpumask_empty(next->vcpu_dirty_cpumask),1,0,1
cpumask_empty(action->cpu_eoi_map),1,0,1
platform == NULL,1,0,1
 old_gpfn != SHARED_M2P_ENTRY ,1,0,1
(t & PGT_type_mask) == PGT_shared_page,1,0,1
"bat_locked(s) && test_vhd_flag(s->bat.status, VHD_FLAG_BAT_WRITE_STARTED)",1,0,1
XEN_VIRT_START & ~SECOND_MASK,1,0,1
REGOFFS(sp_abt) + 1*sizeof(register_t) != REGOFFS(lr_abt),1,0,1
err > 0,1,0,1
 !(gpg->shadow_flags & (1<<sp->u.sh.type)) ,1,0,1
xsave_cntxt_size != _xstate_ctxt_size(feature_mask),1,0,1
dev->type == DEV_DT,1,0,1
!page,1,0,1
!buckets && !bucket_locks,1,0,1
"irq_map->dom, digl->device, digl->intx",1,0,1
libxl__ev_fd_isregistered(ev),1,0,1
dptr->size == sptr->size,1,0,1
REGOFFS(sp_fiq) + 1*sizeof(register_t) != REGOFFS(lr_fiq),1,0,1
scale.mul_frac != 0,1,0,1
"sh_type_is_pinnable(d, sp->u.sh.type)",1,0,1
(sp == 0) || (peoi[sp-1].vector < vector),1,0,1
act->pin & (GNTPIN_hstw_mask | GNTPIN_hstr_mask),1,0,1
"page, PGT_seg_desc_page",1,0,1
ioapic_pm_state == NULL,1,0,1
opnd_sel,1,0,1
!PageReserved(pfn_to_page(pfn)),0,1,1
sp->u.sh.type == head_type,1,0,1
!d->arch.vttbr,1,0,1
((_p)->u.inuse.type_info & PGT_count_mask) != 0,1,0,1
!hyp_mode(regs),1,0,1
evt < HVM_EVENT_HANDLER_MAX,1,0,1
!d->arch.paging.shadow.hash_table,1,0,1
paging_mode_shadow(d),1,0,1
(PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET + 4) & (PCI_MSIX_ENTRY_SIZE - 1),1,0,1
gfn != gfn_x(INVALID_GFN),1,0,1
"port_is_valid(ld, lport)",1,0,1
 is_idle_domain(sdom->dom) ,1,0,1
 iommu->dev_table.buffer ,1,0,1
!is_pv_32bit_domain(d),1,0,1
ao->constructing,1,0,1
p2m->set_entry,1,0,1
pt->source != 0,1,0,1
LIBXL_LIST_EMPTY(&ctx->pollers_fds_changed),1,0,1
ARRAY_SIZE(hvm_shadow_featuremask) != FSCAPINTS,1,0,1
node > 0,1,0,1
"__mem_sharing_unshare_page(d, gfn, MEM_SHARING_DESTROY_GFN)",1,0,1
!is_epte_superpage(&new) || !p2m_is_foreign(new.sa_p2mt),1,0,1
 pfn_to_pdx(epfn) <= (DIRECTMAP_SIZE >> PAGE_SHIFT) && pfn_to_pdx(epfn) <= FRAMETABLE_NR ,1,0,1
!nodemask_retry,1,0,1
(sizeof (struct cpu_user_regs)) & 0xf,1,0,1
xsave_cntxt_size < XSTATE_AREA_MIN_SIZE,1,0,1
"cpumask_test_cpu(new_cpu, &CSCHED2_PRIV(ops)->initialized)",1,0,1
was.sa_handler == sigchld_handler,1,0,1
revents & POLLOUT,1,0,1
doing,1,0,1
credits == val,1,0,1
mfn_to_page(mmfn)->u.sh.type == SH_type_monitor_table,1,0,1
start != pos || PCI_EXT_CAP_ID(header) == cap,1,0,1
pool->shared_count == 0,1,0,1
l1e_get_pfn(MAPCACHE_L1ENT(idx)) == hashent->mfn,1,0,1
STUBS_PER_PAGE & (STUBS_PER_PAGE - 1),1,0,1
SHARED_M2P(get_gpfn_from_mfn(mfn)),1,0,1
CTX->nwatches>=0,1,0,1
desc->irq < gic_number_lines(),1,0,1
ARRAY_SIZE(pv) != FEATURESET_NR_ENTRIES,1,0,1
"spin_is_locked(per_cpu(schedule_data, vc->processor).schedule_lock)",1,0,1
"ARRAY_SIZE_OK(poller->fd_rindices, maxfd)",1,0,1
!(act->pin & GNTPIN_devw_mask),1,0,1
bm->blk == s->bat.pbw_blk,1,0,1
!req->next,1,0,1
l1e_get_intpte(*pl1e),1,0,1
CSCHED2_DOM(dom)->nr_vcpus == 0,1,0,1
!(rc & ~(_PAGE_RW | PAGE_CACHE_ATTRS)),1,0,1
sizeof(((struct compat_platform_op *)0)->u) != sizeof(((struct compat_platform_op *)0)->u.pad),1,0,1
 !vcpu_on_replq(svc) ,1,0,1
req->treq.secs == 0,1,0,1
is_zero_register(reg),1,0,1
stream->incoming_record == NULL,1,0,1
 !(d->is_dying) && (j != (1UL << out_chunk_order)) ,1,0,1
(t & PGT_count_mask) >= 2,1,0,1
mfn_valid(*mfn),1,0,1
!etime->infinite,1,0,1
new_cpu >= nr_cpu_ids,1,0,1
idx >= MAX_ALTP2M,1,0,1
ARRAY_SIZE(deep_features) != FEATURESET_NR_ENTRIES,1,0,1
"z, ""INTERRUPTS DISABLED""",1,0,1
mfn_valid(sh_ctxt->mfn[0]),1,0,1
!(e & ((1 << L2_PAGETABLE_SHIFT) - 1)),1,0,1
inst_len <= max_len,1,0,1
entry->w || !is_epte_superpage(entry),1,0,1
!p2m_table(*entry),1,0,1
libxl__ev_child_inuse(&aes->child),1,0,1
v->domain == p2m->domain,1,0,1
sizeof(struct xc_sr_rec_x86_pv_p2m_frames) != 8,1,0,1
acpi_mem.bank[i].size & EFI_PAGE_MASK,1,0,1
ctxt->count <= msr_count_max,1,0,1
sp,1,0,1
BOOT_RELOC_VIRT_START & ~SECOND_MASK,1,0,1
stream->recursion_guard == true,1,0,1
percpu_rw_is_write_locked(&lgt->lock),1,0,1
op == XENMEM_maximum_gpfn,1,0,1
idt_table[vector].b == 0,1,0,1
gic == dt_interrupt_controller,1,0,1
"spc && cpumask_test_cpu(cpu, prv->cpus)",1,0,1
page_get_owner(_p) == (_d),1,0,1
"test_bit(_IRQ_DISABLED, &desc->status)",1,0,1
MCTE_STATE(tep) != MCTE_F_STATE_FREE,1,0,1
addr == end_gpaddr,1,0,1
"ch == per_cpu(cpu_bc_channel, cpu)",1,0,1
*inuse_map == NULL,1,0,1
radix_tree_is_indirect_ptr(slot),1,0,1
sp->u.sh.type > 0,1,0,1
"hypercall_xlat_continuation(&left, 4, 0)",1,0,1
sizeof(struct xc_sr_rhdr) != 8,1,0,1
REGOFFS(r8_fiq) + 4*sizeof(register_t) != REGOFFS(r12_fiq),1,0,1
"bm && bitmap_valid(bm) && !test_vhd_flag(bm->status, VHD_FLAG_BM_WRITE_PENDING)",1,0,1
i == cpu,1,0,1
r >= 0,1,0,1
!key_table[key].fn,1,0,1
info->cpu != smp_processor_id(),1,0,1
!(MAX_VIRT_CPUS < ((1 << 12))),1,0,1
ev == &et[1][seq-1],1,0,1
MACH2PHYS_VIRT_START != RO_MPT_VIRT_START,1,0,1
!*data_r,1,0,1
!libxl__ev_time_isregistered(&et[1][i]),1,0,1
version != LIBXL_DEVICE_MODEL_VERSION_UNKNOWN,1,0,1
ipid == -1,1,0,1
"!cpumask_test_and_set_cpu(cpu, &crash_saved_cpus)",1,0,1
i < VHD_CACHE_SIZE,1,0,1
pt_irq_need_timer(pirq_dpci->flags),1,0,1
 (!psr_mode_is_32bit(cpsr)||!(cpsr&PSR_THUMB)) && (cpsr&PSR_IT_MASK) ,1,0,1
(unsigned long)p & ((PAGE_SIZE << order) - 1),1,0,1
&pcd_tree_rwlocks[firstbyte],1,0,1
"IS_ALIGNED(e, PAGE_SIZE)",1,0,1
size != 0,1,0,1
X86EMUL_OKAY != VMSUCCEED,1,0,1
!libxl__ev_fd_isregistered(&ctx->sigchld_selfpipe_efd),1,0,1
 ivrs_mappings != NULL ,1,0,1
 (lpae_t *)(unsigned long)(ttbr - phys_offset) != pgtable ,1,0,1
"toplevel, p",1,0,1
e==EINVAL || e==ERANGE,1,0,1
sizeof(eps.smbios3) <= sizeof(eps.dmi),1,0,1
(1 << (sizeof(rank->vcpu[0]) * 8)) < MAX_VIRT_CPUS,1,0,1
"strcmp(""XenVMMXenVMM"", signature) || ((eax - base) < 2)",1,0,1
vapic_pg && !p2m_is_paging(p2mt),1,0,1
!vector_map[apic],1,0,1
pfn != nat.rsrv->extent_start.p[start_extent],1,0,1
"!test_bit(_VPF_blocked, &v->pause_flags)",1,0,1
l4e_get_flags(ml4e[linear_slot]) & _PAGE_PRESENT,1,0,1
vmx_vcpu_pml_enabled(v),1,0,1
!p2m_valid(*entry),1,0,1
idt_table[vector].b != 0,1,0,1
apic_isr_read(vector),1,0,1
sp->u.sh.head || (shadow_type > SH_type_max_shadow),1,0,1
svc != NULL,1,0,1
cpumask_empty(&rqd->active),1,0,1
!(tze_len & (sizeof(uint64_t)-1)),1,0,1
ev == &et[0][1],1,0,1
cur,1,0,1
(page->u.inuse.type_info & PGT_count_mask) == 0,1,0,1
offset >= ((*reps - 1) * bytes_per_rep),1,0,1
!ao->progress_reports_outstanding,1,0,1
d->arch.nr_e820 <= e820.nr_map,1,0,1
ev == &et[1][2],1,0,1
!(shadow_cntrl & PIN_BASED_POSTED_INTERRUPT),1,0,1
dom->master_fd == -1,1,0,1
!(l3e_get_flags(l3_ro_mpt[l3_table_offset(va)]) & _PAGE_PSE),1,0,1
hdr->free_tab_slots[slot] == 0,1,0,1
(cmd & MEMOP_CMD_MASK) != op,1,0,1
d->arch.efi_acpi_len & EFI_PAGE_MASK,1,0,1
cpage != NULL,1,0,1
l4e_get_flags(idle_pg_table[l4_table_offset(RO_MPT_VIRT_START)]) & _PAGE_PRESENT,1,0,1
!reverse,1,0,1
sve != 0,1,0,1
 cpu >= nr_cpu_ids || ! crash_notes ,1,0,1
callbacks->switch_qemu_logdirty,1,0,1
"!port_is_valid(d2, port2)",1,0,1
"!test_bit(type, &page->shadow_flags)",1,0,1
!libxl__ev_fd_isregistered(&ctx->evtchn_efd),1,0,1
LIBXL_STAILQ_EMPTY(&stream->record_queue),1,0,1
A[I]!=0,1,0,1
DEFAULT_MAX_MAPTRACK_FRAMES < DEFAULT_MAX_NR_GRANT_FRAMES,1,0,1
!dcs->sdss.dm.guest_domid,1,0,1
desc->msi_desc != msi_desc + i,1,0,1
domid == INVALID_DOMID,1,0,1
!boot_cpu_has(X86_FEATURE_TSC_RELIABLE),1,0,1
spin_is_locked(&hd->arch.mapping_lock),1,0,1
event,1,0,1
num_online_cpus() != 1,1,0,1
valid && (l != *limit),1,0,1
(obj != NULL) && (pgp != NULL) && (pgp->index != -1),1,0,1
idx >= d->max_vcpus,1,0,1
 ! crash_notes ,1,0,1
root_level == 0,1,0,1
mfn_valid(act->frame),1,0,1
v->domain->arch.vgic.handler->emulate_sysreg != NULL,1,0,1
first->list.prev == PAGE_LIST_NULL,1,0,1
ao,1,0,1
list_empty(&pgp->us.client_eph_pages),1,0,1
pg->u.sh.type == SH_type_l1_32_shadow || pg->u.sh.type == SH_type_fl1_32_shadow || pg->u.sh.type == SH_type_l2_32_shadow,1,0,1
 P2M_ROOT_LEVEL == 0 && P2M_ROOT_ORDER > 0 ,1,0,1
(sizeof (struct cpu_info)) & 0x7,1,0,1
cmfn_type == p2m_ram_shared,1,0,1
q > (char *)p,1,0,1
window_size > 0,1,0,1
logfile >= 3,1,0,1
vnuma_topo.nr_vcpus == hvm_info->nr_vcpus,1,0,1
(extra_space/sizeof(u32)) <= TRACE_EXTRA_MAX,1,0,1
size,1,0,1
first->list.prev == at->list.prev,1,0,1
LIBXL_LIST_EMPTY(&ctx->pollers_event),1,0,1
cpumask_weight(cmd->mask) == 1,1,0,1
"IS_ALIGNED(s, PAGE_SIZE)",1,0,1
event->for_user == how.u.for_event,1,0,1
(char *)bucket_locks == (char *)buckets + hdr->max_tab_size,1,0,1
info,1,0,1
mfn_to_page(_sl2mfn)->u.sh.type == SH_type_l2_64_shadow || mfn_to_page(_sl2mfn)->u.sh.type == SH_type_l2h_64_shadow,1,0,1
next == next->d->vcpu[next->vid],1,0,1
mfn_to_page(sl2mfn)->u.sh.head,1,0,1
NR_INTERRUPT_PER_RANK != 32,1,0,1
!((virt_offset >> PAGE_SHIFT) % granularity),1,0,1
sizeof(vio->mmio_insn) < sizeof(hvmemul_ctxt->insn_buf),1,0,1
"__builtin_types_compatible_p(typeof(a), typeof(&a[0]))",1,0,1
&tmem_rwlock,1,0,1
sizeof(faults) != 4,1,0,1
vlapic_enabled(vcpu_vlapic(v)),1,0,1
val,1,0,1
mfn_valid(*sl1mfn),1,0,1
arg == args + ARRAY_SIZE(args),1,0,1
v != perfc_nbr_vals,1,0,1
i >= 200,1,0,1
!res->master,1,0,1
dt_interrupt_controller != NULL,1,0,1
!requested,1,0,1
!p2m_is_shared(ot),1,0,1
(align & (align - 1)) == 0,1,0,1
 (sdom->weight * sdom->active_vcpu_count) > weight_left ,1,0,1
!desc->arch.vector,1,0,1
" per_cpu(vector_irq, cpu)[old_vector] == irq ",1,0,1
snext->rqd == rqd,1,0,1
map->lvls[l].from >= map_cmp->lvls[l].from || map->lvls[l].to <= map_cmp->lvls[l].to,1,0,1
rc < count,1,0,1
(line) >> 16,1,0,1
"set_shared_p2m_entry(d, gfn->gfn, smfn)",1,0,1
MAPCACHE_VIRT_END + PAGE_SIZE * (3 + 2 * PFN_UP(BITS_TO_LONGS(MAPCACHE_ENTRIES) * sizeof(long))) > MAPCACHE_VIRT_START + (PERDOMAIN_SLOT_MBYTES << 20),1,0,1
revents & (POLLIN|POLLHUP),1,0,1
mfn_to_page(_sl3mfn)->u.sh.type == SH_type_l3_64_shadow,1,0,1
trap_nr >= NR_VECTORS,1,0,1
p2m_table(*entry),1,0,1
!d->arch.hvm_domain.vmx.vcpu_block,1,0,1
!s->cpi_weight,1,0,1
len > 0 || tmem_va == NULL,1,0,1
p2m_mfn != 0,1,0,1
!id || *id < nr,1,0,1
"(c == NULL && !cpumask_test_cpu(cpu, old_pool->cpu_valid)) || (c != NULL && !cpumask_test_cpu(cpu, c->cpu_valid))",1,0,1
this_cpu(timers).running == timer,1,0,1
SHARED_M2P(info->shared_info_frame),1,0,1
DIRECTMAP_VIRT_START & ~FIRST_MASK,1,0,1
wqv->esp == 0,1,0,1
dc->readfd >= 0 || dc->writefd >= 0,1,0,1
l2_table_offset((unsigned long)_erodata) == l2_table_offset((unsigned long)_stext),1,0,1
rc != -EFAULT,1,0,1
!bitmap_locked(bm),1,0,1
page_get_owner(maddr_to_page(maddr)) != d,1,0,1
desc == NULL,1,0,1
mfn <= ctx->x86_pv.max_mfn,1,0,1
v->arch.hvm_vmx.exec_control & CPU_BASED_ACTIVATE_MSR_BITMAP,1,0,1
(target == 2 && hap_has_1gb) || (target == 1 && hap_has_2mb) || (target == 0),1,0,1
pte.p2m.type != p2m_invalid,1,0,1
"!cpumask_test_cpu(cpu, &rqd->active)",1,0,1
 iommu->dev_table.buffer == NULL ,1,0,1
ARRAY_SIZE(hvm_hap) != FEATURESET_NR_ENTRIES,1,0,1
!(l & ~PAGE_MASK),1,0,1
fd > 0,1,0,1
pdev,1,0,1
desc->action != NULL,1,0,1
((_p)->count_info & PGC_count_mask) != 0,1,0,1
chosen > 0,1,0,1
_PAGE_PAT != _PAGE_PSE,1,0,1
extra & 3,1,0,1
!hardware_domain && !ptr,1,0,1
"address_needs_mapping(dev, sg[i].dma_address)",1,0,1
reloc_off != reloc_size,1,0,1
"!""unexpected mode argument""",1,0,1
!(offset & (msi_desc[-nr].msi.nvec - 1)),1,0,1
poolid != MAX_POOLS_PER_DOMAIN,1,0,1
prev != next,1,0,1
insn_off + bytes <= sizeof(hvmemul_ctxt->insn_buf),1,0,1
!xenheap_bits,1,0,1
d->arch.monitor.msr_bitmap && msr,1,0,1
irq > 0,1,0,1
*dm_state_fd < 0,1,0,1
direct_apic_vector[vector] != NULL,1,0,1
hvm_funcs.nhvm_hap_walk_L1_p2m,1,0,1
(pi->count_info & ~(PGC_allocated | 1)) == 0,1,0,1
is_xen_heap_mfn(ma >> PAGE_SHIFT),1,0,1
!(nx & PGC_count_mask),1,0,1
t == SH_type_l2_shadow,1,0,1
"cpumask_test_cpu(new_cpu, vc->cpu_hard_affinity)",1,0,1
ARRAY_SIZE(deep_features) != FSCAPINTS,1,0,1
window_size <= data_size,1,0,1
dc->ao,1,0,1
level == 3 && ret == P2M_ONE_DESCEND,1,0,1
cons < 2*data_size,1,0,1
page_get_owner(mfn_to_page(mfn)) == dom_cow,1,0,1
fv->v != v,1,0,1
"!test_bit(DF_DYING, &d->flags) && shadow_mode_refcounts(d)",0,1,1
w[I]!=0,1,0,1
 sdom != CSCHED2_DOM(vc->domain) ,1,0,1
child->magic == LIBXL__AO_MAGIC,1,0,1
ARRAY_SIZE(pv_featuremask) != FSCAPINTS,1,0,1
is_epte_present(&e),1,0,1
!msr_content,1,0,1
dss->type == LIBXL_DOMAIN_TYPE_HVM,1,0,1
((unsigned long)memory) - ((unsigned long)p) == size,1,0,1
!libxl__async_exec_inuse(&aodev->aes),1,0,1
!((unsigned long)_p & 0xf),1,0,1
objnode->obj != NULL,1,0,1
mfn_to_page(sl3mfn)->u.sh.head,1,0,1
t == SH_type_l1_shadow || t == SH_type_fl1_shadow,1,0,1
(kinfo->gnttab_start + kinfo->gnttab_size) > GB(4),1,0,1
pfp,1,0,1
"test_bit(old_vector, desc->arch.used_vectors)",1,0,1
set_rc == 0,1,0,1
a->instrlen > sizeof(insnbuf),1,0,1
pgp_del == pgp,1,0,1
rc != -ERESTART,1,0,1
(memory_size_mb & ~0x7fff) == 0,1,0,1
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (page_get_owner(mfn_to_page(_mfn(sp->backpointer))) == v->domain),1,0,1
(fld) & 0x6001,1,0,1
e <= INT_MAX,1,0,1
parent == ao_nested_root(abrt->ao),1,0,1
nestedhvm_enabled(v->domain) && nestedhvm_vcpu_in_guestmode(v),1,0,1
lr >= gicv3_info.nr_lrs,1,0,1
page->nr_validated_ptes,1,0,1
P2M_ROOT_LEVEL < 4,1,0,1
type == LIBXL_DOMAIN_TYPE_PV,1,0,1
(sizeof(*frame_table) & ~sizeof(*frame_table)) % sizeof(*compat_machine_to_phys_mapping),1,0,1
"!test_bit(DF_DYING, &d->flags)",1,0,1
(sizeof (struct cpu_user_regs)) & 0x7,1,0,1
svm->ns_gif == 0,1,0,1
d->length > dest_len,1,0,1
mfn_valid(cmd_mfn),1,0,1
p.count <= *reps,1,0,1
(typeof(cmp.atp.size))-1 > (UINT_MAX >> MEMOP_EXTENT_SHIFT),1,0,1
zone_lo <= zone_hi,1,0,1
sizeof(struct xc_sr_rec_hvm_params_entry) != 16,1,0,1
page_is_out_of_sync(pg),1,0,1
paging_mode_log_dirty(d),1,0,1
pages > BITS_PER_LONG,1,0,1
_atomic_read(pool->pgp_count) >= 0,1,0,1
space_left > size,1,0,1
len <= PAGE_SIZE,1,0,1
 cnt >= 0 && cnt <= SCIF_FIFO_MAX_SIZE ,1,0,1
XEN_VIRT_END > SPAGETABLE_VIRT_START,1,0,1
dom->slave_fd == -1,1,0,1
__alignof(v->arch.xsave_area->fpu_sse) < 16,1,0,1
preserve_fds[i] > 2,1,0,1
l3e_get_flags(l3e) & _PAGE_PRESENT,1,0,1
!(base_mfn % granularity),1,0,1
md->type != EFI_RUNTIME_SERVICES_CODE && md->type != EFI_RUNTIME_SERVICES_DATA && md->type != EFI_ACPI_RECLAIM_MEMORY && md->type != EFI_MEMORY_MAPPED_IO && md->type != EFI_MEMORY_MAPPED_IO_PORT_SPACE,1,0,1
len1 == len2,1,0,1
!LIBXL_STAILQ_EMPTY(&stream->record_queue),1,0,1
!error && (num_online_cpus() != 1),1,0,1
GUEST_GICC_SIZE != SZ_8K,1,0,1
rmrr->base_address < rmrr->end_address,1,0,1
&svc->rqd->runq == runq,1,0,1
!xenpool,1,0,1
(unsigned)irq >= nr_irqs,1,0,1
(p->type != IOREQ_TYPE_PIO) && (p->type != IOREQ_TYPE_COPY),1,0,1
idx >= __end_of_fixed_addresses,1,0,1
!(v->arch.hvm_vmx.exec_control & CPU_BASED_RDTSC_EXITING),1,0,1
left == arg1 && left != i,1,0,1
cpu_has_cpuid_faulting,1,0,1
v->data_type == type,1,0,1
t->status == TIMER_STATUS_invalid,1,0,1
device->backend_kind == LIBXL__DEVICE_KIND_VBD,1,0,1
!(atomic_read(&d->refcnt) & DOMAIN_DESTROYED),1,0,1
"!test_bit(vector, ret)",1,0,1
ept,1,0,1
hsr.ec == HSR_EC_SYSREG,1,0,1
smmu_domain->cfg.domain != NULL,1,0,1
sizeof(struct xc_sr_rec_tsc_info) != 24,1,0,1
opt_load_window_shift > 0,1,0,1
releasefn == NULL,1,0,1
ao->manip_refcnt > 0,1,0,1
zone_hi < NR_ZONES,1,0,1
!(vector & INTR_INFO_VALID_MASK),1,0,1
desc->msi_desc == entry,1,0,1
timer->status <= TIMER_STATUS_in_list,1,0,1
rqi >= nr_cpu_ids,1,0,1
!(mfn & ((1UL << (L3_PAGETABLE_SHIFT - PAGE_SHIFT)) - 1)),1,0,1
_trap.type == X86_EVENTTYPE_HW_EXCEPTION,1,0,1
 iommu->event_log.buffer ,1,0,1
dm_state_fd != NULL,1,0,1
v->arch.hvm_vmx.active_cpu == smp_processor_id(),1,0,1
 sdom != svc->sdom ,1,0,1
sizeof(((struct xen_platform_op *)0)->u) != sizeof(((struct xen_platform_op *)0)->u.pad),1,0,1
chs->ao,1,0,1
"f2e(INITIAL_NR_GRANT_FRAMES, 1) < GNTTAB_NR_RESERVED_ENTRIES",1,0,1
steal_for_cache == (p2m->pod.entry_count > p2m->pod.count),1,0,1
prev->runstate.state == RUNSTATE_running,1,0,1
!snext->vcpu->is_running,1,0,1
"cpumask_test_cpu(this_cpu, per_cpu(cluster_cpus, this_cpu))",1,0,1
(pg[i].count_info & ~(PGC_allocated | 1)) == 0,1,0,1
pagetable_get_pfn(v->arch.guest_table),1,0,1
paging_mode_enabled(d),1,0,1
!(act->pin & GNTPIN_devr_mask),1,0,1
*argv,1,0,1
min_p || (P.max_active_pcpu==-1),1,0,1
(msg->data & (entry[-nr].msi.nvec - 1)) == nr,1,0,1
 virt_to_maddr(pgtable) != ttbr ,1,0,1
d->arch.paging.hap.total_pages == 0,1,0,1
got == ch->pid,1,0,1
valid && ((a & 0x00f0ff00) != *ar),1,0,1
"test_vhd_flag(tx->status, VHD_FLAG_TX_LIVE)",1,0,1
svc && is_idle_vcpu(svc->vcpu),1,0,1
idle->sched_priv == NULL,1,0,1
cpu_has_vmx_apic_reg_virt,1,0,1
!d || !order,1,0,1
(offset + chunk) <= cache->size,1,0,1
!nv->nv_vmexit_pending,1,0,1
(IST_MAX + 2) * PAGE_SIZE + PRIMARY_STACK_SIZE > STACK_SIZE,1,0,1
irq <= 0,1,0,1
trap <= VCPU_TRAP_LAST,1,0,1
!(pfp_len & (sizeof(uint64_t)-1)),1,0,1
"svc->rqd == RQD(ops, svc->vcpu->processor)",1,0,1
!(x & PGC_count_mask),1,0,1
!pool->init_region,1,0,1
sizeof(h.oid) != sizeof(*oid),1,0,1
ret.time <= 0,1,0,1
sp[i]->u.sh.type == sp[0]->u.sh.type,1,0,1
callbacks->wait_checkpoint,1,0,1
l1e_get_pfn(MAPCACHE_L1ENT(hashent->idx)) == hashent->mfn,1,0,1
low_mem_end < (2u << 20),1,0,1
dt_irq_xlate != NULL,1,0,1
mfn_valid(sl1mfn),1,0,1
ao->manip_refcnt < INT_MAX,1,0,1
ctx->err,1,0,1
PageReserved(page),0,1,1
target == NULL,1,0,1
sizeof(struct xc_sr_dhdr) != 16,1,0,1
(_ptr >> 2) == val,1,0,1
"!test_bit(pfn, ctx->restore.populated_pfns)",1,0,1
"cpumask_test_cpu(cpu, &cpu_online_map) || cpumask_test_cpu(cpu, cpupool0->cpu_suspended)",1,0,1
root_level < 1,1,0,1
list_empty(&pcd->pgp_list),1,0,1
"(offsetof(struct cpu_user_regs, lr)) & 0xf",1,0,1
len1 <= PAGE_SIZE,1,0,1
now >= sched_priv->next_major_frame,1,0,1
i < nr,1,0,1
sizeof(size_t) != sizeof(ssize_t),1,0,1
!mfn_valid(sh_ctxt->mfn[1]),1,0,1
p==NULL,1,0,1
!_heap[node] || !avail[node],1,0,1
!(shadow_cntrl & apicv_bit),1,0,1
!pdata,1,0,1
WIFEXITED(status),1,0,1
!bitmap_in_use(bm),1,0,1
next->u.sh.type == pg->u.sh.type,1,0,1
(paddr_to_pdx(addr) >> memnode_shift) >= memnodemapsize,1,0,1
type >= 0 && type < ARRAY_SIZE(msg) && msg[type],1,0,1
!vcpu_runnable(v) && (atomic_read(&v->pause_count) || atomic_read(&v->domain->pause_count)),1,0,1
"offset >= MEMBLK_HEADER_SIZE, continue",1,0,1
!p || p->u.sh.head,1,0,1
saved_mask,1,0,1
" sh_hash(__backpointer(sp), sp->u.sh.type) != bucket ",1,0,1
(unsigned)vector >= NR_VECTORS,1,0,1
virt_to_maddr(&v->arch.paging.shadow.l3table) <= 0xffffffe0ULL,1,0,1
(page->u.inuse.type_info & (PGT_count_mask | PGT_validated)) == 1,1,0,1
gate->b == new->b,1,0,1
"!cpumask_test_cpu(cpu, prv->cpus)",1,0,1
new != NULL,1,0,1
v->arch.hvm_vmx.pi_blocking.lock == pi_blocking_list_lock,1,0,1
rw_is_write_locked(&tmem_rwlock),1,0,1
spin_is_locked(&hd->arch.mapping_lock) && is_hvm_domain(d),1,0,1
stream_type == XC_MIG_STREAM_NONE || stream_type == XC_MIG_STREAM_REMUS || stream_type == XC_MIG_STREAM_COLO,1,0,1
dom->rambank_size[0] != 0,1,0,1
nr <= ARRAY_SIZE(mcs->call.args),1,0,1
!_heap[node],1,0,1
dcache->inuse,1,0,1
obj->pool,1,0,1
 virq < 16 ,1,0,1
LIBXL_STAILQ_EMPTY(&stream->record_queue) || stream->rc,1,0,1
(len < 1) || (len > MAX_INST_LEN),1,0,1
"irq != domain_pirq_to_irq(d, pirq + i)",1,0,1
len == -1,1,0,1
alloc_up >= alloc_down,1,0,1
bat_locked(s) && s->bat.pbw_blk == blk,1,0,1
!preempt_count(),1,0,1
ppi >= TIMER_PHYS_SECURE_PPI && ppi < MAX_TIMER_PPI,1,0,1
"d, gsi, isa_irq",1,0,1
"page_is_ram_type(page_to_mfn(pg), RAM_TYPE_CONVENTIONAL)",1,0,1
"page, v->domain",1,0,1
sreq1->secs == sreq2->secs,1,0,1
"test_vhd_flag(bm->status, VHD_FLAG_BM_WRITE_PENDING)",1,0,1
cpu_num != smp_processor_id(),1,0,1
debugtrace_buf != NULL,1,0,1
is_epte_superpage(&split_ept_entry),1,0,1
stream->device_model_version != LIBXL_DEVICE_MODEL_VERSION_NONE,1,0,1
v->arch.hvm_vmx.exec_control & CPU_BASED_ACTIVATE_SECONDARY_CONTROLS,1,0,1
!spawning,1,0,1
"test_bit(type, &page->shadow_flags)",1,0,1
&objnode->obj->obj_spinlock,1,0,1
p2m_valid(pte),1,0,1
okay,1,0,1
pcpu <= P.max_active_pcpu,1,0,1
sizeof (l2_pgentry_t) != sizeof (shadow_l2e_t),1,0,1
!(b->size & 1),1,0,1
dfs,1,0,1
poller->fds_changed || !(fds[slot].revents & POLLNVAL),1,0,1
act->pin & (GNTPIN_devw_mask | GNTPIN_devr_mask),1,0,1
mfn_valid(mfn_x(top_mfn)),1,0,1
 table == NULL || level < IOMMU_PAGING_MODE_LEVEL_1 || level > IOMMU_PAGING_MODE_LEVEL_6 ,1,0,1
sh_l1e_is_mmio(*sl1e),1,0,1
(l2_gfn & ((1ul << l1_page_order) - 1)) == (l1_gfn & ((1ul << l1_page_order) - 1)),1,0,1
root,1,0,1
split >= 0 && rc,1,0,1
"sh_type_is_pinnable(d, sp[0]->u.sh.type)",1,0,1
MAX_NUMNODES >= NUMA_NO_NODE,1,0,1
"cpumask_test_cpu(cpu, &cpus)",1,0,1
priority <= 0xff,1,0,1
 vcpu_on_q(svc) ,1,0,1
zeroeth_table_offset(XEN_VIRT_START),1,0,1
(SPURIOUS_APIC_VECTOR & 0x0f) != 0x0f,1,0,1
a->cpuid >= NCAPINTS * 32,1,0,1
sizeof(d->arch.monitor.msr_bitmap->high) * 8 <= 0x1fff,1,0,1
cpumask_empty(&online_affinity),1,0,1
(v == current) || (!vcpu_runnable(v) && !v->is_running),1,0,1
fdom != NULL,1,0,1
event->type == LIBXL_EVENT_TYPE_OPERATION_COMPLETE,1,0,1
next > LAST_HIPRIORITY_VECTOR,1,0,1
second_linear_offset(XEN_VIRT_START) >= LPAE_ENTRIES,1,0,1
ist <= IST_MAX,1,0,1
action->ack_type != ACKTYPE_EOI,1,0,1
 current->processor == cpu ,1,0,1
is_pv_vcpu(v),1,0,1
guest_l2e_get_flags(gw->l2e) & _PAGE_PSE,1,0,1
!sp[i]->u.sh.head,1,0,1
stream->record_done_callback == NULL,1,0,1
virq >= 32 && virq <= vgic_num_irqs(d),1,0,1
p2ma_10 <= p2m_access_n2rwx,1,0,1
!(nr_mfns % granularity),1,0,1
aodev->rc,1,0,1
vcpu_guestmode,1,0,1
apic_pg && !p2m_is_paging(p2mt),1,0,1
"spin_is_locked(per_cpu(schedule_data,v->processor).schedule_lock)",1,0,1
 sizeof(d->arch.monitor.msr_bitmap->hypervisor) * 8 <= 0x1fff,1,0,1
root->nested_progeny > 0,1,0,1
(e < s) || (e >= alloc_down),1,0,1
nr_pages == 0,1,0,1
time_inuse == watch_inuse,1,0,1
!cpumask_empty(d->domain_dirty_cpumask),1,0,1
offset == bufsize,1,0,1
 sp->u.sh.type > SH_type_max_shadow ,1,0,1
level < 3 && p2m_table(orig_pte),1,0,1
offset == cache->size,1,0,1
"!(ecx & XSTATE_ALIGN64) != !test_bit(leaf, &xstate_align)",1,0,1
PFN_ORDER(virt_to_page(res)) == PFN_UP(size),1,0,1
 base_raw != 0 ,1,0,1
rc == ERROR_BUFFERFULL,1,0,1
fv->count != 0,1,0,1
pg->count_info & ~PGC_xen_heap,1,0,1
LIBXL_LIST_EMPTY(&ctx->evtchns_waiting),1,0,1
req_nr_frames <= max_grant_frames,1,0,1
cur_pages == nr_pages,1,0,1
tep->mcte_next != NULL || tep->mcte_prev != NULL,1,0,1
!(mask >> nr),1,0,1
!key_table[key].irq_fn,1,0,1
"per_cpu(schedule_data, cpu).schedule_lock != &prv->lock",1,0,1
x < data_size,1,0,1
 !hd->arch.root_table || !hd->arch.paging_mode || !iommu->dev_table.buffer ,1,0,1
flags & ~RANGESETF_prettyprint_hex,1,0,1
!pdata && svc && is_idle_vcpu(svc->vc),1,0,1
LIBXL_LIST_EMPTY(&CTX->children),1,0,1
(_bl1) != (_bl2),1,0,1
 !sp->u.sh.head ,1,0,1
"!test_vhd_flag(s->bat.status, VHD_FLAG_BAT_WRITE_STARTED)",1,0,1
name,1,0,1
!cpumask_empty(&prv->active_queues),1,0,1
obj->pgp_count == 0,1,0,1
tmp.op == VHD_OP_DATA_READ || tmp.op == VHD_OP_DATA_WRITE,1,0,1
info->num_vnuma_nodes == v->num_distances,1,0,1
FIXMAP_ADDR(0) & ~SECOND_MASK,1,0,1
!(pfp_size & (sizeof(uint64_t)-1)),1,0,1
d->vcpu[vid] == NULL,1,0,1
rqd->avgload <= STIME_MAX && rqd->b_avgload <= STIME_MAX,1,0,1
D_SIZE * sizeof(lzo_dict_t) > LZO1X_1_MEM_COMPRESS,1,0,1
tps64 != 0,1,0,1
"!get_bitmap(s, blk)",1,0,1
mfn_valid(_mfn(mfn_x(omfn) + i)),1,0,1
(t ^ old) & ~(intpte_t)(_PAGE_ACCESSED|_PAGE_DIRTY),1,0,1
callbacks->checkpoint && callbacks->postcopy,1,0,1
r->domain != d,1,0,1
(MW_SREG_PWR_REQ & PAGE_MASK) != (MW_SREG_A15_PWR_CTRL & PAGE_MASK),1,0,1
!ops.name,1,0,1
user_path && t,1,0,1
!list_empty(&wqv->list),1,0,1
node < MAX_NUMNODES,1,0,1
"is_idle_vcpu(vc) || svc->rqd == RQD(ops, vc->processor)",1,0,1
offset == (val & (INTREMAP_ENTRIES - 1)),1,0,1
!is_idle_vcpu(scurr->vcpu) && scurr->rqd != rqd,1,0,1
i >= ARRAY_SIZE(xen_consumers),1,0,1
!!r == !!check.revents,1,0,1
 ! (regs->cpsr & PSR_MODE_BIT) ,1,0,1
pfp_len <= PAGE_SIZE,1,0,1
!(all && fast),1,0,1
get_vdev_user,1,0,1
g_info->apic_id != BAD_APICID,1,0,1
v->arch.guest_table.pfn == d->arch.paging.shadow.unpaged_pagetable.pfn,1,0,1
(page->u.inuse.type_info & PGT_type_mask) != PGT_writable_page || (page->u.inuse.type_info & PGT_count_mask) == 0 || d->is_shutting_down,1,0,1
stream->recursion_guard == false,1,0,1
i <= 2,1,0,1
irq >= NR_LOCAL_IRQS,1,0,1
!local_irq_is_enabled() && (debug->irq_safe == 0),1,0,1
prv->repl_timer->status == TIMER_STATUS_invalid || prv->repl_timer->status == TIMER_STATUS_killed,1,0,1
!disk->script,1,0,1
val >= 0 && val <= FIFO_MAX_SIZE,1,0,1
pdatum->value < 1 || pdatum->value > 32,1,0,1
nid >= MAX_NUMNODES || !node_data[nid],1,0,1
 shadow_mode_translate(rd) ,1,0,1
x > 0,1,0,1
get_ivrs_mappings(iommu->seg)[req_id].intremap_table != get_ivrs_mappings(iommu->seg)[alias_id].intremap_table,1,0,1
irq < VIOAPIC_NUM_PINS,1,0,1
"(offsetof(struct cpu_user_regs, spsr_el1)) & 0xf",1,0,1
svc->rqd == rqd,1,0,1
" !is_idle_vcpu(vc) && svc->rqd != RQD(ops, vc->processor)",1,0,1
paging_mode_enabled(v->domain),1,0,1
!tx->closed,1,0,1
!next->is_running,1,0,1
(gpa & ~PAGE_MASK) + size > PAGE_SIZE,1,0,1
RO_MPT_VIRT_START & ((1UL << L3_PAGETABLE_SHIFT) - 1),1,0,1
XEN_VIRT_END > FRAMETABLE_VIRT_START,1,0,1
prev_id < 0,1,0,1
!(was.sa_flags & SA_SIGINFO),1,0,1
!sh_l1e_is_magic(sl1e),1,0,1
eax != boot_cpu_data.x86_capability[cpufeat_word(X86_FEATURE_XSAVEOPT)],1,0,1
msg != &entry->msg,1,0,1
(long)obj->objnode_count == 0,1,0,1
(ft == ft_prefetch),1,0,1
xfeature_mask != feature_mask,1,0,1
nv->nv_n1vmcx != NULL,1,0,1
NR_MAGIC_PAGES > GUEST_MAGIC_SIZE >> XC_PAGE_SHIFT,1,0,1
!cpu_online(old_cpu) && cpu_online(new_cpu),1,0,1
"!test_bit(bit, vm_bitmap(t))",1,0,1
*recurse_count == 0,1,0,1
mfn_to_page(_sl4mfn)->u.sh.type == SH_type_l4_64_shadow,1,0,1
"RQD(ops, vc->processor) == svc->rqd ",1,0,1
mfn_to_page(sl4mfn)->u.sh.head,1,0,1
(u32)tsc_elapsed64 == tsc_elapsed64,1,0,1
npfec.write_access || npfec.read_access || npfec.insn_fetch,1,0,1
vvmcb != NULL,1,0,1
len_in < 64*1024,1,0,1
!ch->pid,1,0,1
out_len == PAGE_SIZE,1,0,1
 !entries ,1,0,1
!vector_map[0],1,0,1
mfn_valid(mfn) || !p2m_is_ram(*t) || p2m_is_paging(*t),1,0,1
pg != NULL,1,0,1
nmemb > 0,1,0,1
sizeof(start_info_compat_t) > PAGE_SIZE,1,0,1
svc->credit == CSCHED2_IDLE_CREDIT,1,0,1
order != PAGE_ORDER_2M,1,0,1
d->arch.paging.shadow.total_pages == 0,1,0,1
pgp->pcd->pgp_ref_count == 1 || pgp->eviction_attempted,1,0,1
cpumask_weight(&dirty_mask) <= 1,1,0,1
root_level > 3,1,0,1
XENHEAP_VIRT_START & ~FIRST_MASK,1,0,1
level < 3,1,0,1
mcs->call.args[i] != (unsigned int)mcs->call.args[i],1,0,1
(desc->arch.used_vectors == NULL) || (desc->arch.used_vectors == irq_used_vectors),1,0,1
(page->u.inuse.type_info & PGT_type_mask) == PGT_l1_page_table,1,0,1
tep->mcte_refcnt != 0,1,0,1
bit == vm_top[t],1,0,1
"pi_desc->ndst == (x2apic_enabled ? dest : MASK_INSR(dest, PI_xAPIC_NDST_MASK))",1,0,1
sizeof(struct compat_vcpu_info) != 64,1,0,1
!xen_second[second_linear_offset(addr)].pt.valid,1,0,1
!is_pv_vcpu(curr),1,0,1
len < dc->maxsz - dc->used,1,0,1
pool->obj_count >= 0,1,0,1
e < s,1,0,1
page->u.inuse.type_info & PGT_pinned,1,0,1
"in_longmode(ctxt, ops) <= 0",1,0,1
!libxl__ev_fd_isregistered(&ctx->watch_efd),1,0,1
__alignof(*save_area) < 64,1,0,1
guest_l1e_get_flags(gw->l1e) & _PAGE_PRESENT,1,0,1
"!cpumask_test_cpu(cpu, &CSCHED2_PRIV(ops)->initialized)",1,0,1
use,1,0,1
end_extent & ((1U << order_delta) - 1),1,0,1
__HYPERVISOR_mmuext_op <= 0,1,0,1
aop->ao->magic == LIBXL__AO_MAGIC,1,0,1
callbacks->checkpoint,1,0,1
uart->io_size == io_size,1,0,1
l3e_get_flags(l3e[0]) & _PAGE_PRESENT,1,0,1
"per_cpu(schedule_data, cpu).schedule_lock != &prv->rqd[rqi].lock",1,0,1
cpu_has_cx16,1,0,1
"c2r(ops, cpu) == c2r(ops, svc->vcpu->processor)",1,0,1
gicv3.nr_priorities > 5 && gicv3.nr_priorities < 8,1,0,1
p <= src+len-1,1,0,1
obj->pgp_count >= 0,1,0,1
old_lock == NULL,1,0,1
(diff == 0) || hyp_mode(r),1,0,1
!p2m_is_shared(p2mt),1,0,1
!ptr->xsave_hdr.xcomp_bv,1,0,1
new_cpu != v->processor,1,0,1
d->arch.hvm_domain.io_handler,1,0,1
p->desc == desc,1,0,1
root->nested_progeny < INT_MAX,1,0,1
atomic_read(&v->pause_count),1,0,1
!i || !sp->u.sh.head,1,0,1
nr <= ARRAY_SIZE(entries),1,0,1
!(act->pin & GNTPIN_hstr_mask),1,0,1
va < xenheap_virt_end,1,0,1
curr == current,1,0,1
libxl__ev_child_inuse(&ss->mid),1,0,1
irqflags == 0,1,0,1
index >= MAX_ALTP2M,1,0,1
tlbflush_clock == 0,1,0,1
msi_desc == desc->msi_desc,1,0,1
pgpfound == pgp,1,0,1
bl->nargs < bl->argsspace,1,0,1
"!libxl__watch_slot_contents(gc, i)",1,0,1
svc->vcpu->processor < nr_cpu_ids,1,0,1
(sizeof (new_mask) * 8) != NR_BITS_PER_TARGET,1,0,1
global_rtree_node_count,1,0,1
get_rte_index(rte) == offset,1,0,1
ebx != xstate_offsets[leaf],1,0,1
!(addr & (~PAGE_MASK_4K)),1,0,1
virq < vgic_num_irqs(d),1,0,1
rtn != NULL,1,0,1
 rc && (rc != -ENOMEM) ,1,0,1
(v->arch.pv_vcpu.iopl & ~X86_EFLAGS_IOPL) == 0,1,0,1
source_pfn < start_info.nr_pages,1,0,1
mfn_valid(gcr3_mfn),1,0,1
page_get_owner(&pg[i]) == NULL,1,0,1
has_vpic(v->domain),1,0,1
ARRAY_SIZE(hvm_irq_dpci->girq) < NR_HVM_IRQS,1,0,1
"offsetof(struct xen_domctl_ext_vcpucontext, mcg_cap) != offsetof(struct xen_domctl_ext_vcpucontext, vmce.caps)",1,0,1
ARRAY_SIZE(hvm_hap_featuremask) != FSCAPINTS,1,0,1
 owner == d ,1,0,1
nr,1,0,1
!guest_handle_is_null(cnt_uop),1,0,1
"sh_type_has_up_pointer(d, SH_type_l2_shadow)",1,0,1
fd2 == fd,1,0,1
tdom,1,0,1
"ARRAY_SIZE_OK((var), (nmemb))",1,0,1
rank->index >= 1,1,0,1
" per_cpu(vector_irq, cpu)[vector] == irq ",1,0,1
"d, isa_irq, isa_irq",1,0,1
nv->nv_vvmcxaddr != VMCX_EADDR,1,0,1
max_size && (max_size < init_size),1,0,1
mmap_vstart == NULL,0,1,1
!libxl__xswait_inuse(&dsps->pvcontrol),1,0,1
GUEST_GNTTAB_SIZE < XC_PAGE_SIZE,1,0,1
poll_fds,1,0,1
"!test_bit(DF_DYING, &d->d_flags) && shadow_mode_refcounts(d)",1,0,1
sys_after < 0,1,0,1
vnode_spec,1,0,1
page_get_owner(pg) != d,1,0,1
nr_holes == 0,1,0,1
td,1,0,1
prev == prev->d->vcpu[prev->vid],1,0,1
iter == runq,1,0,1
MACH2PHYS_VIRT_END != RO_MPT_VIRT_END,1,0,1
!next->u.sh.head,1,0,1
irq < 16 && irq >= 32,1,0,1
 old_gpfn == gfn ,1,0,1
mfn_x(r_mfn) == mfn_x(mfn),1,0,1
"d, ioapic_gsi",1,0,1
dc->ao == NULL,1,0,1
msg,1,0,1
seen == !irq_safe,1,0,1
"IS_ALIGNED(_p, PAGE_SIZE)",1,0,1
sreq1->seqno == sreq2->seqno,1,0,1
new->rqd == rqd,1,0,1
"false || ""TPM2_ALG_RSASSA""",1,0,1
sizeof(evc->mcg_cap) != sizeof(evc->vmce.caps),1,0,1
 (ivrs_bdf_entries == 0) ,1,0,1
sh_l1e_is_mmio(sl1e),1,0,1
nv->nv_n1vmcx_pa != VMCX_EADDR,1,0,1
intack.source == hvm_intsrc_lapic,1,0,1
"nz, ""INTERRUPTS ENABLED""",1,0,1
!(dc->readbuf && dc->bytes_to_read == -1),1,0,1
order <= MAX_ORDER,1,0,1
l3e_get_flags(l3_ro_mpt[l3_table_offset(HIRO_COMPAT_MPT_VIRT_START)]) & _PAGE_PRESENT,1,0,1
ARRAY_SIZE(special) != FEATURESET_NR_ENTRIES,1,0,1
!cpumask_empty(mask),1,0,1
uart->data_bits >= 5 && uart->data_bits <= 8,1,0,1
 sizeof(struct cpu_info) > STACK_SIZE ,1,0,1
 sdom->weight == 0 ,1,0,1
timer->status == TIMER_STATUS_inactive,1,0,1
 sp->u.sh.type == 0 ,1,0,1
prod < 2*data_size,1,0,1
offset <= STUB_BUF_SIZE / 2,1,0,1
psr_cmt_enabled(),1,0,1
(typeof(xatpb.size))-1 > (UINT_MAX >> MEMOP_EXTENT_SHIFT),1,0,1
NR_CPUS > SPINLOCK_NO_CPU,1,0,1
d->arch.hvm_domain.vmx.vcpu_block,1,0,1
dom_before < 0,1,0,1
!xen_bootmodule,1,0,1
callbacks->suspend && callbacks->postcopy && callbacks->wait_checkpoint && callbacks->restore_results,1,0,1
local_rec_size != rec_size,1,0,1
ARRAY_SIZE(known) != FEATURESET_NR_ENTRIES,1,0,1
nr_pfns != 0,1,0,1
c->cpuid_level == -1,1,0,1
!libxl__ev_child_inuse(&ss->mid),1,0,1
in_disk->pdev_path,1,0,1
!p2m_is_hostp2m(p2m),1,0,1
MAX_APICS != MAX_LOCAL_APIC,1,0,1
WEXITSTATUS(status)==255,1,0,1
spin_is_locked(&cpupool_lock),1,0,1
root_pgt_pv_xen_slots < ROOT_PAGETABLE_PV_XEN_SLOTS,1,0,1
t == SH_type_l4_shadow,1,0,1
mfn_valid(dte_mfn),1,0,1
"d, gsi",1,0,1
dividend < divisor,1,0,1
vcpu_nestedhvm(v).nv_vvmcx != NULL,1,0,1
stream->emu_carefd == NULL,1,0,1
idx < dcache->entries,1,0,1
mfn_valid(*sl3mfn),1,0,1
poll_nfds > poll_nfds_allocd,1,0,1
cpu != crashing_cpu,1,0,1
sizeof(struct xc_sr_ihdr) != 24,1,0,1
((fld) & 0x6001) != 0x4000,1,0,1
nr < NR_SOFTIRQS,1,0,1
vmx->pi_blocking.lock == lock,1,0,1
len < INT_MAX/5,1,0,1
sizeof(((struct xen_sysctl *)0)->u) != sizeof(((struct xen_sysctl *)0)->u.pad),1,0,1
mfn_valid(pmfn),1,0,1
!vm_base[type],1,0,1
!entry->next,1,0,1
libxl__async_exec_inuse(&aodev->aes),1,0,1
stream->emu_sub_hdr.id != EMULATOR_UNKNOWN,1,0,1
length >= sizeof(*emu_hdr),1,0,1
rc != __HYPERVISOR_memory_op,1,0,1
(opnd_sel & ~3) == regs->error_code,1,0,1
type == VMX_HOST_MSR,1,0,1
firstbyte != NOT_SHAREABLE,1,0,1
!hdr->hash_allocated,1,0,1
((long)ptr & 0x3) == 0x2,1,0,1
base == 0,1,0,1
(sizeof(*frame_table) & -sizeof(*frame_table)) % sizeof(*compat_machine_to_phys_mapping),1,0,1
time_inuse == child_inuse,1,0,1
MSR_IA32_UCODE_REV != MSR_AMD_PATCHLEVEL,1,0,1
!libxl__ev_time_isregistered(&et[0][i]),1,0,1
 trap < 32 ,1,0,1
v && is_pv_vcpu(v),1,0,1
ret >= 0,1,0,1
list->type == XLU_LIST,1,0,1
va >= XENHEAP_VIRT_START,1,0,1
page_is_xen_hole(frame_list[i]),0,1,1
 (sp->count_info & PGC_count_mask )!= 0 ,1,0,1
pt->source == PTSRC_isa,1,0,1
(mapping_size == MB(2)) || (mapping_size == MB(32)),1,0,1
"vm_low[t] == vm_top[t] || !test_bit(vm_low[t], vm_bitmap(t))",1,0,1
nr_bootmem_regions == (PAGE_SIZE / sizeof(struct bootmem_region)),1,0,1
idx >= dcache->entries,1,0,1
type != IRQ_TYPE_INVALID,1,0,1
 spin_is_locked(&iommu->register_lock) ,1,0,1
"test_batmap(s, blk) || (bm && bitmap_valid(bm))",1,0,1
msr_index[i],1,0,1
used <= ebuf->avail,1,0,1
!level,1,0,1
!(image_base < *image_start),1,0,1
"!pcpu && cpumask_test_cpu(cpu, &prv->initialized)",1,0,1
handles->for_app,1,0,1
SHARED_M2P(gmfn),1,0,1
!virq_is_global(virq),1,0,1
ret == old_ire.val,1,0,1
obj->tree_root.rnode == NULL,1,0,1
!cpumask_empty(dom_cpumask),1,0,1
(l1e_get_flags(pte) & (_PAGE_RW|_PAGE_PRESENT)) == _PAGE_PRESENT,1,0,1
 x->v.sh.back == sp->v.sh.back && x->u.sh.type == sp->u.sh.type ,1,0,1
ARRAY_SIZE(c.nat->gdt_frames) != ARRAY_SIZE(c.cmp->gdt_frames),1,0,1
pcd->pfp != NULL,1,0,1
x2apic_enabled,1,0,1
left > count,1,0,1
sizeof(*(n)) != sizeof(__uint128_t),1,0,1
d->max_vcpus != 0,1,0,1
 cpu != snext->vcpu->processor ,1,0,1
!parent->complete,1,0,1
(diff == 0) || (r->cs == __HYPERVISOR_CS),1,0,1
get_gpfn_from_mfn(mfn) == SHARED_M2P_ENTRY,1,0,1
buf,1,0,1
!CTX->xsh,1,0,1
!type || type == entry->msi_attrib.type,1,0,1
global_pcd_count,1,0,1
shadow_mode_enabled(d) && (pset != (1<<cpu)),0,1,1
sizeof(((struct xen_domctl *)0)->u) != sizeof(((struct xen_domctl *)0)->u.pad),1,0,1
!radix_tree_is_indirect_ptr(to_free),1,0,1
!root->nested_root,1,0,1
sizeof (l4_pgentry_t) != sizeof (shadow_l4e_t),1,0,1
IS_ERR(this_cpu(schedule_data).sched_priv),1,0,1
xch->currently_progress_reporting,1,0,1
l1e_get_flags(l2e_to_l1e(l2e)[l1_table_offset(sva)]) & _PAGE_PRESENT,1,0,1
list_empty(&xen_domain->contexts),1,0,1
rc == ERROR_TIMEDOUT,1,0,1
config != NULL,1,0,1
seg == x86_seg_cs,1,0,1
 iommu->mmio_base ,1,0,1
!is_idle_vcpu(cur->vcpu),1,0,1
gicv3.nr_priorities > 4 && gicv3.nr_priorities < 8,1,0,1
!WIFSIGNALED(status),1,0,1
irq < NR_LOCAL_IRQS,1,0,1
sizeof(struct xc_sr_rec_x86_pv_info) != 8,1,0,1
buffer == NULL,1,0,1
regs == guest_cpu_user_regs(),1,0,1
next->runstate.state != RUNSTATE_running,1,0,1
!first_node_initialised,1,0,1
va < XEN_VIRT_END,1,0,1
new_maxsize < INT_MAX / sizeof(void*) / 2,1,0,1
DOMHEAP_VIRT_START & ~FIRST_MASK,1,0,1
(t >= VMAP_DEFAULT) && (t < VMAP_REGION_NR),1,0,1
mode,1,0,1
dom->rambase_pfn << XC_PAGE_SHIFT == bankbase[0],1,0,1
sched == &ops,1,0,1
t == SH_type_l3_shadow,1,0,1
REGOFFS(sp_svc) + 1*sizeof(register_t) != REGOFFS(lr_svc),1,0,1
r == ENOMEM,1,0,1
!ev->infinite,1,0,1
!spin_is_locked(&d->shutdown_lock),1,0,1
t == SH_type_fl1_32_shadow || t == SH_type_fl1_pae_shadow || t == SH_type_fl1_64_shadow || t == SH_type_monitor_table || (is_pv_32bit_domain(d) && t == SH_type_l4_64_shadow) || (page_get_owner(mfn_to_page(backpointer(sp))) == d),1,0,1
has_hvm_container_domain(d),1,0,1
!(pm1a_cnt_val & ACPI_PM1C_SCI_EN),1,0,1
LIBXL_LIST_EMPTY(&ctx->aos_inprogress),1,0,1
highbiosarea == NULL,1,0,1
dom0 != NULL,1,0,1
va >= DIRECTMAP_VIRT_START,1,0,1
prev,1,0,1
nullfd >= 3,1,0,1
svc->period != 0,1,0,1
sizeof(struct xc_sr_rec_page_data_header) != 8,1,0,1
pg->u.sh.type == SH_type_l2_32_shadow || pg->u.sh.head,1,0,1
(page->u.inuse.type_info & PGT_count_mask) != 0,1,0,1
atomic_read(&d->shr_pages) == 0,1,0,1
REGOFFS(sp_und) + 1*sizeof(register_t) != REGOFFS(lr_und),1,0,1
!((unsigned long) p & ~PAGE_MASK),1,0,1
offset <= xsave_cntxt_size,1,0,1
pirq->masked,1,0,1
(PRIMARY_STACK_SIZE + PAGE_SIZE) > STACK_SIZE,1,0,1
NR_hypercalls < ARRAY_SIZE(arm_hypercall_table) ,1,0,1
fv->v != NULL,1,0,1
vmmio->num_entries >= MAX_IO_HANDLER,1,0,1
(line) >> (BUG_LINE_LO_WIDTH + BUG_LINE_HI_WIDTH),1,0,1
svc->rqd == NULL,1,0,1
(c(user_regs.eflags) & X86_EFLAGS_IOPL) != 0,1,0,1
(typeof(xatp.size))-1 > (UINT_MAX >> MEMOP_EXTENT_SHIFT),1,0,1
p2m->stats.mappings[0] || p2m->stats.shattered[0],1,0,1
cpu_to_socket(cpu) == XEN_INVALID_SOCKET_ID || cpu_to_socket(peer_cpu) == XEN_INVALID_SOCKET_ID,1,0,1
t == SH_type_l2_shadow || t == SH_type_l2h_shadow,1,0,1
len2 <= PAGE_SIZE,1,0,1
d->vcpu != NULL,1,0,1
chn2->u.interdomain.remote_dom != d1,1,0,1
 iter_svc->cur_budget > 0 ,1,0,1
"IS_ALIGNED(_l, PAGE_SIZE)",1,0,1
!(rc & ~PAGE_FLIPPABLE),1,0,1
*t,1,0,1
next,1,0,1
ARRAY_SIZE(known_features) != FSCAPINTS,1,0,1
!l1tab,1,0,1
!id || !(mask & (1U << *id)),1,0,1
r <= buf->used,1,0,1
!dom0_11_mapping,1,0,1
global_page_count,1,0,1
mfn_to_page(_sl1mfn)->u.sh.type == SH_type_l1_shadow || mfn_to_page(_sl1mfn)->u.sh.type == SH_type_fl1_shadow,1,0,1
ramsize == 0,1,0,1
STUB_BUF_SIZE / 2 < 16,1,0,1
REGOFFS(sp_irq) + 1*sizeof(register_t) != REGOFFS(lr_irq),1,0,1
s->cpi_weight,1,0,1
 (regs->cpsr & PSR_MODE_BIT) ,1,0,1
c != old_pool && (c != NULL || old_pool != NULL),1,0,1
"cpumask_test_cpu(cpu, &cpupool_free_cpus)",1,0,1
!cpumask_empty(cpumask_scratch),1,0,1
(page->count_info & PGC_count_mask) != 0,1,0,1
 (table != NULL) && (offset < INTREMAP_ENTRIES) ,1,0,1
tmem_tze_enabled(),1,0,1
(delivery_mode == dest_Fixed) || (delivery_mode == dest_LowestPrio),1,0,1
!libxl__save_helper_inuse(shs),1,0,1
((unsigned long)p & (align - 1)) == 0,1,0,1
!res->slave,1,0,1
d->cpupool != NULL,1,0,1
smmu == NULL,1,0,1
va >= VMAP_VIRT_START && va < VMAP_VIRT_END,1,0,1
!libxl_defbool_is_default(db),1,0,1
!current->arch.old_guest_table,1,0,1
!pi_test_sn(pi_desc),1,0,1
 list_empty(&svc->active_vcpu_elem) ,1,0,1
!svc->vcpu->is_running,1,0,1
P.max_active_pcpu < MAX_CPUS,1,0,1
global_obj_count,1,0,1
 is_idle_vcpu(current) || list_empty(runq) ,1,0,1
ops == NULL,1,0,1
"!needs_recalc(l1, e)",1,0,1
rw_is_locked(&h->lock),1,0,1
i == DOMHEAP_ENTRIES,1,0,1
 cnt >= 0 && cnt <= uart->fifo_size ,1,0,1
irq >= NR_GIC_SGI,1,0,1
