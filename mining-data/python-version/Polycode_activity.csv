x_val,y_added,y_removed,y_combined
d->m_huff_code_sizes[0][lit],4,4,8
(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0,3,3,6
d->m_huff_code_sizes[1][sym],2,2,4
d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]],2,2,4
max_match_len <= TDEFL_MAX_MATCH_LEN,2,2,4
 val != 0.0 ,3,0,3
 index < length() ,2,0,2
lookahead_size >= cur_match_len,1,1,2
(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE),1,1,2
d->m_pOutput_buf < d->m_pOutput_buf_end,1,1,2
d->m_pPut_buf_func,1,1,2
bits <= ((1U << len) - 1U),1,1,2
(cur_match_len >= TDEFL_MIN_MATCH_LEN) && (cur_match_dist >= 1) && (cur_match_dist <= TDEFL_LZ_DICT_SIZE),1,1,2
d->m_lookahead_size >= len_to_move,1,1,2
pArray->m_element_size,1,1,2
!d->m_output_flush_remaining,1,1,2
code < TDEFL_MAX_HUFF_SYMBOLS_2,1,1,2
0,1,0,1
s->img_out_n == 4,1,0,1
idx<out->mNumVertices,1,0,1
n >= 0 && n < (int) (sizeof(stbi__bmask)/sizeof(*stbi__bmask)),1,0,1
out_n == 2 || out_n == 4,1,0,1
(((j->code_buffer) >> (32 - h->size[c])) & stbi__bmask[h->size[c]]) == h->code[c],1,0,1
out_n == s->img_n || out_n == s->img_n+1,1,0,1
img_width_bytes <= x,1,0,1
req_comp >= 1 && req_comp <= 4,1,0,1
idx < msh->mNumVertices,1,0,1
z->size[b] == s,1,0,1
z->code_buffer < (1U << z->num_bits),1,0,1
hsz == 108 || hsz == 124,1,0,1
 *length >= 0 && *length < 5 ,1,0,1
img_n+1 == out_n,1,0,1
x,1,0,1
 p ,1,0,1
c == 18,1,0,1
a->num_bits == 0,1,0,1
bits <= 16,1,0,1
img_n == 3,1,0,1
